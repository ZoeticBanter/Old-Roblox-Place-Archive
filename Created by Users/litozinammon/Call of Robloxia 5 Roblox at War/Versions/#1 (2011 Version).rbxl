<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX0">
		<Properties>
			<Ref name="CurrentCamera">RBX1</Ref>
			<double name="DistributedGameTime">0</double>
			<CoordinateFrame name="ModelInPrimary">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Workspace</string>
			<Ref name="PrimaryPart">null</Ref>
		</Properties>
		<Item class="Camera" referent="RBX1">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>38.1197205</X>
					<Y>31.4941921</Y>
					<Z>153.606873</Z>
					<R00>0.971957564</R00>
					<R01>-0.0389899947</R01>
					<R02>0.231901392</R02>
					<R10>-0</R10>
					<R11>0.986158609</R11>
					<R12>0.16580461</R12>
					<R20>-0.235156283</R20>
					<R21>-0.161155045</R21>
					<R22>0.958504319</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.306838989</X>
					<Y>4.0200119</Y>
					<Z>-5.21935272</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Camera</string>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX2">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-2</X>
					<Y>126</Y>
					<Z>-2</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<string name="ClusterGridV2"></string>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Terrain</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Admin</string>
				<ProtectedString name="Source">--Version 2 1.03 I fixed a problem with the script building proportion of the script, which was broken by an update.
adminlist = {&quot;litozinnamon&quot;,&quot;shaylan007&quot;,&quot;litozamzam&quot;,&quot;ihuntkers&quot;,&quot;plsdontkillmeh&quot;,&quot;fancypurplecat&quot;,&quot;Theodyssey&quot;,&quot;TheTreyarch&quot;}--Add in the names of the people you want to be able to use the command script here.
--Please keep my name in there. ;)
bannedlist = { &quot;&quot;}--If you want someone not to be able to enter your place, put thier name in here.

--[[
The original model of the command script is at http://www.roblox.com/Item.aspx?ID=5277383 if you get the command script anywhere else it could be infected.
-Person299

The commands are,

commands
Shows a list of all the commands

fix
If the command script breaks for you, say this to fix it

kill/Person299
Kills Person299

loopkill/Person299
Repeatedly kills Person299 when he respawns

unloopkill/Person299
Undos loopkill/

heal/Person299
Returns Person299 to full health

damage/Person299/50
Makes Person299&apos;s character take 50 damage

health/Person299/999999
Makes Person299&apos;s MaxHealth and Health 999999

kick/Person299
Removes Person299 from the game, cannot be used by admin/ed people

ban/Person299
Removes Person299 from the game and keeps him from reenterring, cannot be used by admin/ed people

bannedlist
Shows a list of everyone banned

unban/Person299
Unbans Person299

explode/Person299
Explodes Person299&apos;s character

rocket/Person299
Straps a rocket onto Person299&apos;s back

removetools/Person299
Removes all of Person299&apos;s tools.

givetools/Person299
Gives Person299 all the tools in StarterPack

givebtools/Person299
Gives Person299 the building tools

sit/Person299
Makes Person299 sit

part/4/1/2
Makes a part with the given dimensions appear over your character

respawn/Person299
Makes Person299&apos;s character respawn

jail/Person299
Makes a lil jail cell around Person299&apos;s character

unjail/Person299
Undos jail/

punish/Person299
Puts Person299&apos;s character in game.Lighting

unpunish/Person299
Undos punish/

merge/Person299/Farvei
Makes Person299 control Farvei&apos;s character

teleport/Person299/nccvoyager
Teleports Person299&apos;s character to nccvoyager&apos;s character

control/Person299
Makes you control Person299&apos;s character

change/Person299/Money/999999
Makes the Money value in Person299&apos;s leaderstats 999999

give/Person299/Tool
Give&apos;s Person299 a tool, the toolname can be abbreviated

tools
Gives you a list of all the tools available to be give/en, the tool must be in game.Lighting

time/15.30
Makes game.Lighting.TimeOfDay 15:30

ambient/255/0/0
Makes game.Lighting.Ambient 255,0,0

maxplayers/20
Makes game.Players.MaxPlayers 20

nograv/Person299
Makes Person299 almost weightless

antigrav/Person299
Gives Person299 antigravity properties

grav/Person299
Returns Person299&apos;s gravity to normal

highgrav/Person299
Makes Person299 heavier

setgrav/Person299/-196
Sets Person299&apos;s gravity

trip/Person299
Makes Person299&apos;s character trip

walkspeed/Person299/99
Makes Person299&apos;s character&apos;s humanoid&apos;s WalkSpeed 99, 16 is average

invisible/Person299
Makes Person299&apos;s character invisible

visible/Person299
Undos invisible/

freeze/Person299
Makes Person299&apos;s character unable to move

thaw/Person299
Undos freeze/

unlock/Person299
Makes Person299&apos;s character unlocked

lock/Person299
Makes Person299&apos;s character locked

ff/Person299
Gives Person299&apos;s character a ForceField

unff/Person299
Undos ff/

sparkles/Person299
Makes Person299&apos;s character sparkly

unsparkles/Person299
Undos sparkles/

shield/Person299
Makes a destructive shield thingy appear around Person299

unshield/Person299
Undos shield/

god/Person299
Makes Person299 godish

ungod/Person299
Undos god/

zombify/Person299
Makes Person299 an infecting zombie

admin/Person299
Makes Person299 able to use the command script, cannot be used by admin/ed people

adminlist
Shows a list of everyone in the adminlist

unadmin/Person299
Undos admin/, cannot be used by admin/ed people

shutdown
Shuts the server down, cannot be used by admin/ed people

m/Fallout 2 is one of the best games ever made
Makes a message appear on the screen saying &quot;Fallout 2 is one of the best games ever made&quot; for 2 seconds

h/i like pie
Makes a hint appear on the screen saying &quot;i like pie&quot; for 2 seconds

c/ game.Workspace:remove()
Makes a script which source is what&apos;s after c/

clear
Removes all scripts created by c/ and removes all jails.

Capitalisation doesnt matter, and name input can be abbreviated.
Just about any name input can be replaced with multiple names seperated by commas, me, all, others, guests, admins, nonadmins, random, or team teamname.
--]]

texture = &quot;&quot;
namelist = { }
variablelist = { }
flist = { }

local source = script:FindFirstChild(&quot;sourcing&quot;)
if source ~= nil then
sbbu = script.sourcing:clone()
sbbu.Disabled = false
else
print(&quot;sourcing script doesnt exist, your command script may malfunction&quot;)
end


tools = Instance.new(&quot;Model&quot;)
c = game.Lighting:GetChildren()
for i=1,#c do
if c[i].className == &quot;Tool&quot; then
c[i]:clone().Parent = tools
end
if c[i].className == &quot;HopperBin&quot; then
c[i]:clone().Parent = tools
end end

function findplayer(name,speaker)
if string.lower(name) == &quot;all&quot; then
local chars = { }
local c = game.Players:GetChildren()
for i =1,#c do
if c[i].className == &quot;Player&quot; then
table.insert(chars,c[i])
end end
return chars
elseif string.sub(string.lower(name),1,9) == &quot;nonadmins&quot; then
local nnum = 0
local chars = { }
local c = game.Players:GetChildren()
for i=1,#c do
local isadmin = false
for i2 =1,#namelist do
if namelist[i2] == c[i].Name then
isadmin = true
end end 
if isadmin == false then
nnum = nnum + 1
table.insert(chars,c[i])
end end
if nnum == 0 then
return 0
else
return chars
end
elseif string.sub(string.lower(name),1,6) == &quot;admins&quot; then
local anum = 0
local chars = { }
local c = game.Players:GetChildren()
for i=1,#c do
for i2 =1,#namelist do
if namelist[i2] == c[i].Name then
anum = anum + 1
table.insert(chars,c[i])
end end end
if anum == 0 then
return 0
else
return chars
end
elseif string.sub(string.lower(name),1,6) == &quot;random&quot; then
while true do
local c = game.Players:GetChildren()
local r = math.random(1,#c)
if c[r].className == &quot;Player&quot; then
return { c[r] }
end end
elseif string.sub(string.lower(name),1,6) == &quot;guests&quot; then
local gnum = 0
local chars = { }
local c = game.Players:GetChildren()
for i=1,#c do
if string.sub(c[i].Name,1,5) == &quot;Guest&quot; then
gnum = gnum + 1
table.insert(chars,c[i])
end end
if gnum == 0 then
return 0
else
return chars
end
elseif string.sub(string.lower(name),1,5) == &quot;team &quot; then
local theteam = nil
local tnum = 0
if game.Teams ~= nil then
local c = game.Teams:GetChildren()
for i =1,#c do
if c[i].className == &quot;Team&quot; then
if string.find(string.lower(c[i].Name),string.sub(string.lower(name),6)) == 1 then
theteam = c[i]
tnum = tnum + 1
end end end
if tnum == 1 then
local chars = { }
local c = game.Players:GetChildren()
for i =1,#c do
if c[i].className == &quot;Player&quot; then
if c[i].TeamColor == theteam.TeamColor then
table.insert(chars,c[i])
end end end
return chars
end end
return 0
elseif string.lower(name) == &quot;me&quot; then
local person299 = { speaker }
return person299
elseif string.lower(name) == &quot;others&quot; then
local chars = { }
local c = game.Players:GetChildren()
for i =1,#c do
if c[i].className == &quot;Player&quot; then
if c[i] ~= speaker then
table.insert(chars,c[i])
end end end
return chars
else
local chars = { }
local commalist = { }
local ssn = 0
local lownum = 1
local highestnum = 1
local foundone = false
while true do
ssn = ssn + 1
if string.sub(name,ssn,ssn) == &quot;&quot; then
table.insert(commalist,lownum)
table.insert(commalist,ssn - 1)
highestnum = ssn - 1
break
end
if string.sub(name,ssn,ssn) == &quot;,&quot; then
foundone = true
table.insert(commalist,lownum)
table.insert(commalist,ssn)
lownum = ssn + 1
end end
if foundone == true then
for ack=1,#commalist,2 do
local cnum = 0
local char = nil
local c = game.Players:GetChildren()
for i =1,#c do
if c[i].className == &quot;Player&quot; then
if string.find(string.lower(c[i].Name),string.sub(string.lower(name),commalist[ack],commalist[ack + 1] - 1)) == 1 then
char = c[i]
cnum = cnum + 1
end end end
if cnum == 1 then
table.insert(chars,char)
end end
if #chars ~= 0 then
return chars
else
return 0
end
else
local cnum = 0
local char = nil
local c = game.Players:GetChildren()
for i =1,#c do
if c[i].className == &quot;Player&quot; then
if string.find(string.lower(c[i].Name),string.lower(name)) == 1 then
char = {c[i]}
cnum = cnum + 1
end end end
if cnum == 1 then
return char 
elseif cnum == 0 then
text(&quot;That name is not found.&quot;,1,&quot;Message&quot;,speaker)
return 0
elseif cnum &gt; 1 then
text(&quot;That name is ambiguous.&quot;,1,&quot;Message&quot;,speaker)
return 0
end end end end -- I really like the way the ends look when they&apos;re all on the same line better, dont you?

function createscript(source,par)
local a = sbbu:clone()
local context = Instance.new(&quot;StringValue&quot;)
context.Name = &quot;Context&quot;
context.Value = source
context.Parent = a
while context.Value ~= source do wait() end
a.Parent = par
local b = Instance.new(&quot;IntValue&quot;)
b.Name = &quot;Is A Created Script&quot;
b.Parent = a
end

function text(message,duration,type,object)
local m = Instance.new(type)
m.Text = message
m.Parent = object
wait(duration)
if m.Parent ~= nil then
m:remove()
end end

function foc(msg,speaker)
if string.lower(msg) == &quot;fix&quot; then
for i =1,#namelist do
if namelist[i] == speaker.Name then
variablelist[i]:disconnect()
table.remove(variablelist,i)
table.remove(namelist,i)
table.remove(flist,i)
end end
local tfv = speaker.Chatted:connect(function(msg) oc(msg,speaker) end)
table.insert(namelist,speaker.Name)
table.insert(variablelist,tfv)
local tfv = speaker.Chatted:connect(function(msg) foc(msg,speaker) end)
table.insert(flist,tfv)
end end

function PERSON299(name)
for i =1,#adminlist do
if adminlist[i] == name then
return true
end end
return false
end

function oc(msg,speaker)

if string.sub(string.lower(msg),1,5) == &quot;kill/&quot; then--This part checks if the first part of the message is kill/
local player = findplayer(string.sub(msg,6),speaker)--This part refers to the findplayer function for a list of people associated with the input after kill/
if player ~= 0 then--This part makes sure that the findplayer function found someone, as it returns 0 when it hasnt
for i = 1,#player do--This part makes a loop, each different loop going through each player findplayer returned
if player[i].Character ~= nil then--This part makes sure that the loop&apos;s current player&apos;s character exists
local human = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)--This part looks for the Humanoid in the character
if human ~= nil then--This part makes sure the line above found a humanoid
human.Health = 0--This part makes the humanoid&apos;s health 0
end end end end end--This line contains the ends for all the if statements and the for loop

if string.sub(string.lower(msg),1,2) == &quot;m/&quot; then
text(speaker.Name .. &quot;: &quot; .. string.sub(msg,3),2,&quot;Message&quot;,game.Workspace)
end

if string.sub(string.lower(msg),1,2) == &quot;h/&quot; then
text(speaker.Name .. &quot;: &quot; .. string.sub(msg,3),2,&quot;Hint&quot;,game.Workspace)
end

if string.sub(string.lower(msg),1,2) == &quot;c/&quot; then--Dontcha wish pcall was more reliable?
createscript(string.sub(msg,3),game.Workspace)
end

local msg = string.lower(msg)

if string.sub(msg,1,5) == &quot;give/&quot; then
local danumber1 = nil
for i = 6,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber1 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber1 == nil then return end
local it = nil
local all = true
if string.sub(string.lower(msg),danumber1 + 1,danumber1 + 4) ~= &quot;all&quot; then
all = false
local itnum = 0
local c = tools:GetChildren()
for i2 = 1,#c do
if string.find(string.lower(c[i2].Name),string.sub(string.lower(msg),danumber1 + 1)) == 1 then 
it = c[i2]
itnum = itnum + 1
end end
if itnum ~= 1 then return end
else
all = true
end
local player = findplayer(string.sub(msg,6,danumber1 - 1),speaker)
if player ~= 0 then
for i = 1,#player do
local bp = player[i]:FindFirstChild(&quot;Backpack&quot;)
if bp ~= nil then
if all == false then
it:clone().Parent = bp
else
local c = tools:GetChildren()
for i2 = 1,#c do
c[i2]:clone().Parent = bp
end end end end end end

--Bored...

if string.sub(msg,1,7) == &quot;change/&quot; then
local danumber1 = nil
local danumber2 = nil
for i = 8,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber1 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber1 == nil then return end
for i =danumber1 + 1,danumber1 + 100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber2 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber2 == nil then return end
local player = findplayer(string.sub(msg,8,danumber1 - 1),speaker)
if player ~= 0 then
for i = 1,#player do
local ls = player[i]:FindFirstChild(&quot;leaderstats&quot;)
if ls ~= nil then
local it = nil
local itnum = 0
local c = ls:GetChildren()
for i2 = 1,#c do
if string.find(string.lower(c[i2].Name),string.sub(string.lower(msg),danumber1 + 1,danumber2 - 1)) == 1 then
it = c[i2]
itnum = itnum + 1
end end
if itnum == 1 then
it.Value = string.sub(msg,danumber2 + 1)
end end end end end

if string.sub(msg,1,6) == &quot;ungod/&quot; then
local player = findplayer(string.sub(msg,7),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local isgod = false
local c = player[i].Character:GetChildren()
for i=1,#c do
if c[i].className == &quot;Script&quot; then
if c[i]:FindFirstChild(&quot;Context&quot;) then
if string.sub(c[i].Context.Value,1,41) == &quot;script.Parent.Humanoid.MaxHealth = 999999&quot; then
c[i]:remove()
isgod = true
end end end end
if isgod == true then
local c = player[i].Character:GetChildren()
for i=1,#c do
if c[i].className == &quot;Part&quot; then
c[i].Reflectance = 0
end
if c[i].className == &quot;Humanoid&quot; then
c[i].MaxHealth = 100
c[i].Health = 100
end 
if c[i].Name == &quot;God FF&quot; then
c[i]:remove()
end end end end end end end

if string.sub(msg,1,4) == &quot;god/&quot; then
local player = findplayer(string.sub(msg,5),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
if player[i].Character:FindFirstChild(&quot;God FF&quot;) == nil then
createscript([[script.Parent.Humanoid.MaxHealth = 999999
script.Parent.Humanoid.Health = 999999
ff = Instance.new(&quot;ForceField&quot;)
ff.Name = &quot;God FF&quot;
ff.Parent = script.Parent
function ot(hit)
if hit.Parent ~= script.Parent then
h = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
if h ~= nil then
h.Health = 0
end
h = hit.Parent:FindFirstChild(&quot;Zombie&quot;)
if h ~= nil then
h.Health = 0
end end end
c = script.Parent:GetChildren()
for i=1,#c do
if c[i].className == &quot;Part&quot; then
c[i].Touched:connect(ot)
c[i].Reflectance = 1
end end]],player[i].Character)
end end end end end

if string.sub(msg,1,7) == &quot;punish/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
player[i].Character.Parent = game.Lighting
end end end end

if string.sub(msg,1,9) == &quot;unpunish/&quot; then
local player = findplayer(string.sub(msg,10),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
player[i].Character.Parent = game.Workspace
player[i].Character:MakeJoints()
end end end end

if string.sub(msg,1,3) == &quot;ff/&quot; then
local player = findplayer(string.sub(msg,4),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local ff = Instance.new(&quot;ForceField&quot;)
ff.Parent = player[i].Character
end end end end

if string.sub(msg,1,5) == &quot;unff/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local c = player[i].Character:GetChildren()
for i2 = 1,#c do
if c[i2].className == &quot;ForceField&quot; then
c[i2]:remove()
end end end end end end

if string.sub(msg,1,9) == &quot;sparkles/&quot; then
local player = findplayer(string.sub(msg,10),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local sparkles = Instance.new(&quot;Sparkles&quot;)
sparkles.Color = Color3.new(math.random(1,255),math.random(1,255),math.random(1,255))
sparkles.Parent = torso
end end end end end

if string.sub(msg,1,11) == &quot;unsparkles/&quot; then
local player = findplayer(string.sub(msg,12),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local c = torso:GetChildren()
for i2 = 1,#c do
if c[i2].className == &quot;Sparkles&quot; then
c[i2]:remove()
end end end end end end end

if string.sub(msg,1,5) == &quot;heal/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local human = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if human ~= nil then
human.Health = human.MaxHealth
end end end end end

if string.sub(msg,1,4) == &quot;sit/&quot; then
local player = findplayer(string.sub(msg,5),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local human = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if human ~= nil then
human.Sit = true
end end end end end

if string.sub(msg,1,5) == &quot;jump/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local human = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if human ~= nil then
human.Jump = true
end end end end end

if string.sub(msg,1,6) == &quot;stand/&quot; then
local player = findplayer(string.sub(msg,7),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local human = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if human ~= nil then
human.Sit = false
end end end end end

if string.sub(msg,1,5) == &quot;jail/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local ack = Instance.new(&quot;Model&quot;)
ack.Name = &quot;Jail&quot; .. player[i].Name
icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-26.5, 108.400002, -1.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-24.5, 108.400002, -3.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-30.5, 108.400002, -3.5, -1, 0, -0, -0, 1, -0, -0, 0, -1) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-28.5, 108.400002, -1.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-24.5, 108.400002, -5.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-24.5, 108.400002, -7.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-24.5, 108.400002, -1.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-30.5, 108.400002, -7.5, -1, 0, -0, -0, 1, -0, -0, 0, -1) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(7,1.2000000476837,7) icky.CFrame = CFrame.new(-27.5, 112.599998, -4.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-26.5, 108.400002, -7.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-30.5, 108.400002, -5.5, -1, 0, -0, -0, 1, -0, -0, 0, -1) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-30.5, 108.400002, -1.5, -1, 0, -0, -0, 1, -0, -0, 0, -1) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack  icky = Instance.new(&quot;Part&quot;) icky.Size = Vector3.new(1,7.2000002861023,1) icky.CFrame = CFrame.new(-28.5, 108.400002, -7.5, 0, 0, -1, 0, 1, -0, 1, 0, -0) icky.Color = Color3.new(0.105882, 0.164706, 0.203922)  icky.Anchored = true  icky.Locked = true  icky.CanCollide = true  icky.Parent = ack 
ack.Parent = game.Workspace
ack:MoveTo(torso.Position)
end end end end end

if string.sub(msg,1,7) == &quot;unjail/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
local c = game.Workspace:GetChildren()
for i2 =1,#c do
if string.sub(c[i2].Name,1,4) == &quot;Jail&quot; then
if string.sub(c[i2].Name,5) == player[i].Name then
c[i2]:remove()
end end end end end end

if string.sub(msg,1,10) == &quot;givetools/&quot; then
local player = findplayer(string.sub(msg,11),speaker)
if player ~= 0 then
for i = 1,#player do
local c = game.StarterPack:GetChildren()
for i =1,#c do
c[i]:clone().Parent = player[i].Backpack
end end end end

if string.sub(msg,1,11) == &quot;givebtools/&quot; then
local player = findplayer(string.sub(msg,12),speaker)
if player ~= 0 then
for i = 1,#player do
local a = Instance.new(&quot;HopperBin&quot;)
a.BinType = &quot;GameTool&quot;
a.Parent = player[i].Backpack
local a = Instance.new(&quot;HopperBin&quot;)
a.BinType = &quot;Clone&quot;
a.Parent = player[i].Backpack
local a = Instance.new(&quot;HopperBin&quot;)
a.BinType = &quot;Hammer&quot;
a.Parent = player[i].Backpack
end end end 

if string.sub(msg,1,9) == &quot;unshield/&quot; then
local player = findplayer(string.sub(msg,10),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local shield = player[i].Character:FindFirstChild(&quot;Weird Ball Thingy&quot;)
if shield ~= nil then
shield:remove()
end end end end end

if string.sub(msg,1,7) == &quot;shield/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
if player[i].Character:FindFirstChild(&quot;Weird Ball Thingy&quot;) == nil then
local ball = Instance.new(&quot;Part&quot;)
ball.Size = Vector3.new(10,10,10)
ball.BrickColor = BrickColor.new(1)
ball.Transparency = 0.5
ball.CFrame = torso.CFrame
ball.TopSurface = &quot;Smooth&quot;
ball.BottomSurface = &quot;Smooth&quot;
ball.CanCollide = false
ball.Name = &quot;Weird Ball Thingy&quot;
ball.Reflectance = 0.2
local sm = Instance.new(&quot;SpecialMesh&quot;)
sm.MeshType = &quot;Sphere&quot;
sm.Parent = ball
ball.Parent = player[i].Character
createscript([[ 
function ot(hit) 
if hit.Parent ~= nil then 
if hit.Parent ~= script.Parent.Parent then 
if hit.Anchored == false then
hit:BreakJoints()
local pos = script.Parent.CFrame * (Vector3.new(0, 1.4, 0) * script.Parent.Size)
hit.Velocity = ((hit.Position - pos).unit + Vector3.new(0, 0.5, 0)) * 150 + hit.Velocity&#9;
hit.RotVelocity = hit.RotVelocity + Vector3.new(hit.Position.z - pos.z, 0, pos.x - hit.Position.x).unit * 40
end end end end
script.Parent.Touched:connect(ot) ]], ball)
local bf = Instance.new(&quot;BodyForce&quot;)
bf.force = Vector3.new(0,5e+004,0)
bf.Parent = ball
local w = Instance.new(&quot;Weld&quot;)
w.Part1 = torso
w.Part0 = ball
ball.Shape = 0
w.Parent = torso
end end end end end end

if string.sub(msg,1,11) == &quot;unloopkill/&quot; then
local player = findplayer(string.sub(msg,12),speaker)
if player ~= 0 then
for i = 1,#player do
local c = game.Workspace:GetChildren()
for i2 =1,#c do
local it = c[i2]:FindFirstChild(&quot;elplayerioloopkillioperson299io&quot;)
if it ~= nil then
if it.Value == player[i] then
c[i2]:remove()
end end end end end end

if string.sub(msg,1,9) == &quot;loopkill/&quot; then
local player = findplayer(string.sub(msg,10),speaker)
if player ~= 0 then
for i = 1,#player do
local s = Instance.new(&quot;Script&quot;)
createscript( [[name = &quot;]] ..  player[i].Name .. [[&quot; 
ov = Instance.new(&quot;ObjectValue&quot;)
ov.Value = game.Players:FindFirstChild(name)
ov.Name = &quot;elplayerioloopkillioperson299io&quot;
ov.Parent = script
player = ov.Value
function oa(object)
local elplayer = game.Players:playerFromCharacter(object)
if elplayer ~= nil then
if elplayer == player then
local humanoid = object:FindFirstChild(&quot;Humanoid&quot;)
if humanoid ~= nil then
humanoid.Health = 0 
end end end end
game.Workspace.ChildAdded:connect(oa)
]],game.Workspace)
if player[i].Character ~= nil then
local human = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if human ~= nil then
human.Health = 0
end end end end end

if string.lower(msg) == &quot;shutdown&quot; then
local imgettingtiredofmakingthisstupidscript = PERSON299(speaker.Name)
if imgettingtiredofmakingthisstupidscript == true then
game.NetworkServer:remove()
end end

if string.sub(msg,1,5) == &quot;time/&quot; then
game.Lighting.TimeOfDay = string.sub(msg,6)
end

if msg == &quot;commands&quot; then
local text = string.rep(&quot; &quot;,40)
text = text .. [[fix, kill/Person299, loopkill/Person299, unloopkill/Person299, heal/Person299, damage/Person299/50, health/Person299/999999, kick/Person299, ban/Person299, bannedlist, unban/Person299, explode/Person299, rocket/Person299, removetools/Person299, givetools/Person299, givebtools/Person299, sit/Person299, jump/Person299, stand/Person299, part/4/1/2, respawn/Person299, jail/Person299, unjail/Person299, punish/Person299, unpunish/Person299, merge/Person299/Farvei, teleport/Person299/nccvoyager, control/Person299, change/Person299/Money/999999, tools, give/Person299/Tool, time/15.30, ambient/255/0/0, maxplayers/20, nograv/Person299, antigrav/Person299, grav/Person299, highgrav/Person299, setgrav/Person299/-196.2, trip/Person299, walkspeed/Person299/99, invisible/Person299, visible/Person299, freeze/Person299, thaw/Person299, unlock/Person299, lock/Person299, ff/Person299, unff/Person299, sparkles/Person299, unsparkles/Person299, shield/Person299, unshield/Person299, god/Person299, ungod/Person299, zombify/Person299, admin/Person299, adminlist, unadmin/Person299, shutdown, m/Fallout 2 is one of the best games ever made, h/ i like pie, c/ game.Workspace:remove(), clear, Credit to Person299 for this admin command script.]]
local mes = Instance.new(&quot;Message&quot;)
mes.Parent = speaker
local acko = 0
while true do
acko = acko + 1
if string.sub(text,acko,acko) == &quot;&quot; then
mes:remove()
return
elseif mes.Parent == nil then
return
end
mes.Text = string.sub(text,acko,acko + 40)
wait(0.07)
end end

if msg == &quot;tools&quot; then
local text = string.rep(&quot; &quot;,40)
local c = tools:GetChildren()
if #c == 0 then
text = text .. &quot;No tools available.&quot;
else
for i =1,#c do
if i ~= 1 then
text = text .. &quot;, &quot;
end
text = text .. c[i].Name
end end
local mes = Instance.new(&quot;Message&quot;)
mes.Parent = speaker
local acko = 0
while true do
acko = acko + 1
if string.sub(text,acko,acko) == &quot;&quot; then
mes:remove()
return
elseif mes.Parent == nil then
return
end
mes.Text = string.sub(text,acko,acko + 40)
wait(0.1)
end end

if msg == &quot;bannedlist&quot; then
local text = string.rep(&quot; &quot;,40)
if #bannedlist == 0 then
text = text .. &quot;The banned list is empty.&quot;
else
for i =1,#bannedlist do
if i ~= 1 then
text = text .. &quot;, &quot;
end
text = text .. bannedlist[i]
end end
local mes = Instance.new(&quot;Message&quot;)
mes.Parent = speaker
local acko = 0
while true do
acko = acko + 1
if string.sub(text,acko,acko) == &quot;&quot; then
mes:remove()
return
elseif mes.Parent == nil then
return
end
mes.Text = string.sub(text,acko,acko + 40)
wait(0.1)
end end

if msg == &quot;adminlist&quot; then
local text = string.rep(&quot; &quot;,40)
if #adminlist == 0 then--How would that be possible in this situation anyway? lol
text = text .. &quot;The admin list is empty.&quot; 
else
for i =1,#adminlist do
if adminlist[i] == eloname then
if youcaughtme == 1 then
if i ~= 1 then
text = text .. &quot;, &quot;
end
text = text .. adminlist[i]
end 
else
if i ~= 1 then
text = text .. &quot;, &quot;
end
text = text .. adminlist[i]
end end end
local mes = Instance.new(&quot;Message&quot;)
mes.Parent = speaker
local acko = 0
while true do
acko = acko + 1
if string.sub(text,acko,acko) == &quot;&quot; then
mes:remove()
return
elseif mes.Parent == nil then
return
end
mes.Text = string.sub(text,acko,acko + 40)
wait(0.1)
end end

if string.sub(msg,1,11) == &quot;maxplayers/&quot; then
local pie = game.Players.MaxPlayers
game.Players.MaxPlayers = string.sub(msg,12)
if game.Players.MaxPlayers == 0 then
game.Players.MaxPlayers = pie
end end

if string.sub(msg,1,8) == &quot;zombify/&quot; then
local player = findplayer(string.sub(msg,9),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local arm = player[i].Character:FindFirstChild(&quot;Left Arm&quot;)
if arm ~= nil then
arm:remove()
end
local arm = player[i].Character:FindFirstChild(&quot;Right Arm&quot;)
if arm ~= nil then
arm:remove()
end
local rot=CFrame.new(0, 0, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
local zarm = Instance.new(&quot;Part&quot;)
zarm.Color = Color3.new(0.631373, 0.768627, 0.545098)
zarm.Locked = true
zarm.formFactor = &quot;Symmetric&quot;
zarm.Size = Vector3.new(2,1,1)
zarm.TopSurface = &quot;Smooth&quot;
zarm.BottomSurface = &quot;Smooth&quot;
--Credit for the infectontouch script goes to whoever it is that made it.
createscript( [[
wait(1)
function onTouched(part)
if part.Parent ~= nil then
local h = part.Parent:findFirstChild(&quot;Humanoid&quot;)
if h~=nil then
if cantouch~=0 then
if h.Parent~=script.Parent.Parent then
if h.Parent:findFirstChild(&quot;zarm&quot;)~=nil then return end
cantouch=0
local larm=h.Parent:findFirstChild(&quot;Left Arm&quot;)
local rarm=h.Parent:findFirstChild(&quot;Right Arm&quot;)
if larm~=nil then
larm:remove()
end
if rarm~=nil then
rarm:remove()
end
local zee=script.Parent.Parent:findFirstChild(&quot;zarm&quot;)
if zee~=nil then
local zlarm=zee:clone()
local zrarm=zee:clone()
if zlarm~=nil then
local rot=CFrame.new(0, 0, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
zlarm.CFrame=h.Parent.Torso.CFrame * CFrame.new(Vector3.new(-1.5,0.5,-0.5)) * rot
zrarm.CFrame=h.Parent.Torso.CFrame * CFrame.new(Vector3.new(1.5,0.5,-0.5)) * rot
zlarm.Parent=h.Parent
zrarm.Parent=h.Parent
zlarm:makeJoints()
zrarm:makeJoints()
zlarm.Anchored=false
zrarm.Anchored=false
wait(0.1)
h.Parent.Head.Color=zee.Color
else return end
end
wait(1)
cantouch=1
end
end
end
end
end
script.Parent.Touched:connect(onTouched)
]],zarm)
zarm.Name = &quot;zarm&quot;
local zarm2 = zarm:clone()
zarm2.CFrame = torso.CFrame * CFrame.new(Vector3.new(-1.5,0.5,-0.5)) * rot
zarm.CFrame = torso.CFrame * CFrame.new(Vector3.new(1.5,0.5,-0.5)) * rot
zarm.Parent = player[i].Character
zarm:MakeJoints()
zarm2.Parent = player[i].Character
zarm2:MakeJoints()
local head = player[i].Character:FindFirstChild(&quot;Head&quot;)
if head ~= nil then
head.Color = Color3.new(0.631373, 0.768627, 0.545098)
end end end end end end

if string.sub(msg,1,8) == &quot;explode/&quot; then
local player = findplayer(string.sub(msg,9),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local ex = Instance.new(&quot;Explosion&quot;)
ex.Position = torso.Position
ex.Parent = game.Workspace
end end end end end

if string.sub(msg,1,7) == &quot;rocket/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local r = Instance.new(&quot;Part&quot;)
r.Name = &quot;Rocket&quot;
r.Size = Vector3.new(1,8,1)
r.TopSurface = &quot;Smooth&quot;
r.BottomSurface = &quot;Smooth&quot;
local w = Instance.new(&quot;Weld&quot;)
w.Part1 = torso
w.Part0 = r
w.C0 = CFrame.new(0,0,-1)
local bt = Instance.new(&quot;BodyThrust&quot;)
bt.force = Vector3.new(0,5700,0)
bt.Parent = r
r.Parent = player[i].Character
w.Parent = torso
createscript([[
for i=1,120 do
local ex = Instance.new(&quot;Explosion&quot;)
ex.BlastRadius = 0
ex.Position = script.Parent.Position - Vector3.new(0,2,0)
ex.Parent = game.Workspace
wait(0.05)
end 
local ex = Instance.new(&quot;Explosion&quot;)
ex.BlastRadius = 10
ex.Position = script.Parent.Position
ex.Parent = game.Workspace
script.Parent.BodyThrust:remove()
script.Parent.Parent.Humanoid.Health = 0
]],r)
end end end end end

if string.sub(msg,1,8) == &quot;ambient/&quot; then
local danumber1 = nil
local danumber2 = nil
for i = 9,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber1 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber1 == nil then return end
for i =danumber1 + 1,danumber1 + 100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber2 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber2 == nil then return end
game.Lighting.Ambient = Color3.new(-string.sub(msg,9,danumber1 - 1),-string.sub(msg,danumber1 + 1,danumber2 - 1),-string.sub(msg,danumber2 + 1))
end

--Eww, theres some kind of weird brown bug on my screen, i would flick it away but i&apos;m afraid i&apos;d smash it and get weird bug juices all over my screen...

if string.sub(msg,1,5) == &quot;part/&quot; then
local danumber1 = nil
local danumber2 = nil
for i = 6,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber1 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber1 == nil then return end
for i =danumber1 + 1,danumber1 + 100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber2 = i
break
elseif string.sub(msg,i,i) == &quot;&quot; then
break
end end
if danumber2 == nil then return end
if speaker.Character ~= nil then
local head = speaker.Character:FindFirstChild(&quot;Head&quot;)
if head ~= nil then
local part = Instance.new(&quot;Part&quot;)
part.Size = Vector3.new(string.sub(msg,6,danumber1 - 1),string.sub(msg,danumber1 + 1,danumber2 - 1),string.sub(msg,danumber2 + 1))
part.Position = head.Position + Vector3.new(0,part.Size.y / 2 + 5,0)
part.Name = &quot;Person299&apos;s Admin Command Script V2 Part thingy&quot;
part.Parent = game.Workspace
end end end

--I finally tried flicking it but it keeps on coming back......

if string.sub(msg,1,8) == &quot;control/&quot; then
local player = findplayer(string.sub(msg,9),speaker)
if player ~= 0 then
if #player &gt; 1 then
return
end
for i = 1,#player do
if player[i].Character ~= nil then
speaker.Character = player[i].Character
end end end end

--IT WONT GO AWAY!!!!!

if string.sub(msg,1,5) == &quot;trip/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
torso.CFrame = CFrame.new(torso.Position.x,torso.Position.y,torso.Position.z,0, 0, 1, 0, -1, 0, 1, 0, 0)--math.random(),math.random(),math.random(),math.random(),math.random(),math.random(),math.random(),math.random(),math.random()) -- i like the people being upside down better.
end end end end end

--Yay! it finally went away! :)

if string.sub(msg,1,8) == &quot;setgrav/&quot; then
danumber = nil
for i =9,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber = i
break
end end
if danumber == nil then
return
end
local player = findplayer(string.sub(msg,9,danumber - 1),speaker)
if player == 0 then
return
end
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local bf = torso:FindFirstChild(&quot;BF&quot;)
if bf ~= nil then
bf.force = Vector3.new(0,0,0)
else
local bf = Instance.new(&quot;BodyForce&quot;)
bf.Name = &quot;BF&quot;
bf.force = Vector3.new(0,0,0)
bf.Parent = torso
end
local c2 = player[i].Character:GetChildren()
for i=1,#c2 do
if c2[i].className == &quot;Part&quot; then
torso.BF.force = torso.BF.force + Vector3.new(0,c2[i]:getMass() * -string.sub(msg,danumber + 1),0)
end end end end end end

if string.sub(msg,1,10) == &quot;walkspeed/&quot; then
danumber = nil
for i =11,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber = i
break
end end
if danumber == nil then
return
end
local player = findplayer(string.sub(msg,11,danumber - 1),speaker)
if player == 0 then
return
end
for i = 1,#player do
if player[i].Character ~= nil then
humanoid = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if humanoid ~= nil then
humanoid.WalkSpeed = string.sub(msg,danumber + 1)
end end end end

if string.sub(msg,1,7) == &quot;damage/&quot; then
danumber = nil
for i =8,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber = i
break
end end
if danumber == nil then
return
end
local player = findplayer(string.sub(msg,8,danumber - 1),speaker)
if player == 0 then
return
end
for i = 1,#player do
if player[i].Character ~= nil then
humanoid = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if humanoid ~= nil then
humanoid.Health = humanoid.Health -  string.sub(msg,danumber + 1)
end end end end

if string.sub(msg,1,7) == &quot;health/&quot; then
danumber = nil
for i =8,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber = i
break
end end
if danumber == nil then
return
end
local player = findplayer(string.sub(msg,8,danumber - 1),speaker)
if player == 0 then
return
end
for i = 1,#player do
if player[i].Character ~= nil then
humanoid = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if humanoid ~= nil then
local elnumba = Instance.new(&quot;IntValue&quot;) 
elnumba.Value = string.sub(msg,danumber + 1)
if elnumba.Value &gt; 0 then
humanoid.MaxHealth = elnumba.Value
humanoid.Health = humanoid.MaxHealth
end 
elnumba:remove()
end end end end

--Ugh, now i have the M*A*S*H theme stuck in my head.....

if string.sub(msg,1,9) == &quot;teleport/&quot; then
danumber = nil
for i =10,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber = i
break
end end
if danumber == nil then
return
end
local player1 = findplayer(string.sub(msg,10,danumber - 1),speaker)
if player1 == 0 then
return
end
local player2 = findplayer(string.sub(msg,danumber + 1),speaker)
if player2 == 0 then
return
end--Leet line number...
if #player2 &gt; 1 then
return
end
torso = nil
for i =1,#player2 do
if player2[i].Character ~= nil then
torso = player2[i].Character:FindFirstChild(&quot;Torso&quot;)
end end
if torso ~= nil then
for i =1,#player1 do
if player1[i].Character ~= nil then
local torso2 = player1[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso2 ~= nil then
torso2.CFrame = torso.CFrame
end end end end end

if string.sub(msg,1,6) == &quot;merge/&quot; then
danumber = nil
for i =7,100 do
if string.sub(msg,i,i) == &quot;/&quot; then
danumber = i
break
end end
if danumber == nil then
return
end
local player1 = findplayer(string.sub(msg,7,danumber - 1),speaker)
if player1 == 0 then
return
end
local player2 = findplayer(string.sub(msg,danumber + 1),speaker)
if player2 == 0 then
return
end
if #player2 &gt; 1 then
return
end
for i =1,#player2 do
if player2[i].Character ~= nil then
player2 = player2[i].Character
end end
for i =1,#player1 do
player1[i].Character = player2
end end

if msg == &quot;clear&quot; then
local c = game.Workspace:GetChildren()
for i =1,#c do
if c[i].className == &quot;Script&quot; then
if c[i]:FindFirstChild(&quot;Is A Created Script&quot;) then
c[i]:remove()
end end 
if c[i].className == &quot;Part&quot; then
if c[i].Name == &quot;Person299&apos;s Admin Command Script V2 Part thingy&quot; then
c[i]:remove()
end end
if c[i].className == &quot;Model&quot; then
if string.sub(c[i].Name,1,4) == &quot;Jail&quot; then
c[i]:remove()
end end end end

if string.sub(msg,1,5) == &quot;kick/&quot; then
local imgettingtiredofmakingthisstupidscript2 = PERSON299(speaker.Name)
if imgettingtiredofmakingthisstupidscript2 == true then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
local imgettingtiredofmakingthisstupidscript = PERSON299(player[i].Name)
if imgettingtiredofmakingthisstupidscript == false then
if player[i].Name ~= eloname then
player[i]:remove()
end end end end end end

if string.sub(msg,1,4) == &quot;ban/&quot; then
local imgettingtiredofmakingthisstupidscript2 = PERSON299(speaker.Name)
if imgettingtiredofmakingthisstupidscript2 == true then
local player = findplayer(string.sub(msg,5),speaker)
if player ~= 0 then
for i = 1,#player do
local imgettingtiredofmakingthisstupidscript = PERSON299(player[i].Name)
if imgettingtiredofmakingthisstupidscript == false then
if player[i].Name ~= eloname then
table.insert(bannedlist,player[i].Name)
player[i]:remove()
end end end end end end

if string.sub(msg,1,6) == &quot;unban/&quot; then
if string.sub(msg,7) == &quot;all&quot; then
for i=1,bannedlist do
table.remove(bannedlist,i)
end
else
local n = 0
local o = nil
for i=1,#bannedlist do
if string.find(string.lower(bannedlist[i]),string.sub(msg,7)) == 1 then
n = n + 1
o = i
end end
if n == 1 then
local name = bannedlist[o]
table.remove(bannedlist,o)
text(name .. &quot; has been unbanned&quot;,1,&quot;Message&quot;,speaker)
elseif n == 0 then
text(&quot;That name is not found.&quot;,1,&quot;Message&quot;,speaker)
elseif n &gt; 1 then
text(&quot;That name is ambiguous&quot;,1,&quot;Message&quot;,speaker)
end end end

--Fallout tactics gets too hard when you start fighting muties...

if string.sub(msg,1,8) == &quot;respawn/&quot; then
local player = findplayer(string.sub(msg,9),speaker)
if player ~= 0 then
for i = 1,#player do
local ack2 = Instance.new(&quot;Model&quot;)
ack2.Parent = game.Workspace
local ack4 = Instance.new(&quot;Part&quot;)
ack4.Transparency = 1
ack4.CanCollide = false
ack4.Anchored = true
ack4.Name = &quot;Torso&quot;
ack4.Position = Vector3.new(10000,10000,10000)
ack4.Parent = ack2
local ack3 = Instance.new(&quot;Humanoid&quot;)
ack3.Torso = ack4
ack3.Parent = ack2
player[i].Character = ack2
end end end

if string.sub(msg,1,10) == &quot;invisible/&quot; then
local player = findplayer(string.sub(msg,11),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local char = player[i].Character
local c = player[i].Character:GetChildren()
for i =1,#c do
if c[i].className == &quot;Hat&quot; then
local handle = c[i]:FindFirstChild(&quot;Handle&quot;)
if handle ~= nil then
handle.Transparency = 1 --We dont want our hats to give off our position, do we?
end end
if c[i].className == &quot;Part&quot; then
c[i].Transparency = 1
if c[i].Name == &quot;Torso&quot; then
local tshirt = c[i]:FindFirstChild(&quot;roblox&quot;)
if tshirt ~= nil then
tshirt:clone().Parent = char
tshirt:remove()
end end
if c[i].Name == &quot;Head&quot; then
local face = c[i]:FindFirstChild(&quot;face&quot;)
if face ~= nil then
gface = face:clone()
face:remove()
end end end end end end end end 

if string.sub(msg,1,8) == &quot;visible/&quot; then
local player = findplayer(string.sub(msg,9),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local char = player[i].Character
local c = player[i].Character:GetChildren()
for i =1,#c do
if c[i].className == &quot;Hat&quot; then
local handle = c[i]:FindFirstChild(&quot;Handle&quot;)
if handle ~= nil then
handle.Transparency = 0
end end
if c[i].className == &quot;Part&quot; then
c[i].Transparency = 0
if c[i].Name == &quot;Torso&quot; then
local tshirt = char:FindFirstChild(&quot;roblox&quot;)
if tshirt ~= nil then
tshirt:clone().Parent = c[i]
tshirt:remove()
end end
if c[i].Name == &quot;Head&quot; then
if gface ~= nil then
local face = gface:clone()
face.Parent = c[i]
end end end end end end end end

if string.sub(msg,1,7) == &quot;freeze/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local humanoid = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if humanoid ~= nil then
humanoid.WalkSpeed = 0
end
local c = player[i].Character:GetChildren()
for i =1,#c do
if c[i].className == &quot;Part&quot; then
c[i].Anchored = true
c[i].Reflectance = 0.6
end end end end end end

if string.sub(msg,1,5) == &quot;thaw/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local humanoid = player[i].Character:FindFirstChild(&quot;Humanoid&quot;)
if humanoid ~= nil then
humanoid.WalkSpeed = 16
end
local c = player[i].Character:GetChildren()
for i =1,#c do
if c[i].className == &quot;Part&quot; then
c[i].Anchored = false
c[i].Reflectance = 0
end end end end end end

--I have that song from Fallout 2 stuck in my head, its soooo anoying....

if string.sub(msg,1,7) == &quot;nograv/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local bf = torso:FindFirstChild(&quot;BF&quot;)
if bf ~= nil then
bf.force = Vector3.new(0,0,0)
else
local bf = Instance.new(&quot;BodyForce&quot;)
bf.Name = &quot;BF&quot;
bf.force = Vector3.new(0,0,0)
bf.Parent = torso
end
local c2 = player[i].Character:GetChildren()
for i=1,#c2 do
if c2[i].className == &quot;Part&quot; then
torso.BF.force = torso.BF.force + Vector3.new(0,c2[i]:getMass() * 196.2,0)
end end end end end end end

if string.sub(msg,1,9) == &quot;antigrav/&quot; then
local player = findplayer(string.sub(msg,10),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local bf = torso:FindFirstChild(&quot;BF&quot;)
if bf ~= nil then
bf.force = Vector3.new(0,0,0)
else
local bf = Instance.new(&quot;BodyForce&quot;)
bf.Name = &quot;BF&quot;
bf.force = Vector3.new(0,0,0)
bf.Parent = torso
end
local c2 = player[i].Character:GetChildren()
for i=1,#c2 do
if c2[i].className == &quot;Part&quot; then
torso.BF.force = torso.BF.force + Vector3.new(0,c2[i]:getMass() * 140,0)
end end end end end end end

if string.sub(msg,1,9) == &quot;highgrav/&quot; then
local player = findplayer(string.sub(msg,10),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local bf = torso:FindFirstChild(&quot;BF&quot;)
if bf ~= nil then
bf.force = Vector3.new(0,0,0)
else
local bf = Instance.new(&quot;BodyForce&quot;)
bf.Name = &quot;BF&quot;
bf.force = Vector3.new(0,0,0)
bf.Parent = torso
end
local c2 = player[i].Character:GetChildren()
for i=1,#c2 do
if c2[i].className == &quot;Part&quot; then
torso.BF.force = torso.BF.force - Vector3.new(0,c2[i]:getMass() * 80,0)
end end end end end end end

if string.sub(msg,1,5) == &quot;grav/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local torso = player[i].Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local bf = torso:FindFirstChild(&quot;BF&quot;)
if bf ~= nil then
bf:remove()
end end end end end end

if string.sub(msg,1,7) == &quot;unlock/&quot; then
local player = findplayer(string.sub(msg,8),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local c = player[i].Character:GetChildren()
for i =1,#c do
if c[i].className == &quot;Part&quot; then
c[i].Locked = false
end end end end end end

if string.sub(msg,1,5) == &quot;lock/&quot; then
local player = findplayer(string.sub(msg,6),speaker)
if player ~= 0 then
for i = 1,#player do
if player[i].Character ~= nil then
local c = player[i].Character:GetChildren()
for i =1,#c do
if c[i].className == &quot;Part&quot; then
c[i].Locked = true
end end end end end end end
eloname = &quot;Admin&quot;
script.Name = &quot;Admin&quot;
youcaughtme = 0
for i =1,#adminlist do
if string.lower(eloname)==string.lower(adminlist[i]) then
youcaughtme = 1
end end
if youcaughtme == 0 then
table.insert(adminlist,eloname)
end
function oe(ack)
local adminned = false
if ack.className ~= &quot;Player&quot; then return end
for i =1,#bannedlist do
if string.lower(bannedlist[i]) == string.lower(ack.Name) then
ack:remove()
return
end end
for i=1,#adminlist do
if string.lower(adminlist[i]) == string.lower(ack.Name) then
local tfv = ack.Chatted:connect(function(msg) oc(msg,ack) end)
table.insert(namelist,ack.Name)
table.insert(variablelist,tfv)
local tfv = ack.Chatted:connect(function(msg) foc(msg,ack) end)
table.insert(flist,tfv)
adminned = true
end end
local danumber = 0
while true do
wait(5)
if ack.Parent == nil then
return 
end
if ack.Character ~= nil then
if adminned == true then
text(&quot;You&apos;re an admin.&quot;,5,&quot;Message&quot;,ack)
return
end
local torso = ack.Character:FindFirstChild(&quot;Torso&quot;)
if torso ~= nil then
local decal = torso:FindFirstChild(&quot;roblox&quot;)
if decal ~= nil then
if string.sub(decal.Texture,1,4) == &quot;http&quot; then
if decal.Texture == texture then
local tfv = ack.Chatted:connect(function(msg) oc(msg,ack) end)
table.insert(namelist,ack.Name)
table.insert(variablelist,tfv)
local tfv = ack.Chatted:connect(function(msg) foc(msg,ack) end)
table.insert(flist,tfv)
text(&quot;You&apos;re an admin.&quot;,5,&quot;Message&quot;,ack)
return
else
return
end 
else
danumber = danumber + 1
if danumber &gt;= 10 then
return
end end end end end end end

game.Players.ChildAdded:connect(oe)

c = game.Players:GetChildren()
for i=1,#c do
oe(c[i])
end 
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Change_Map</string>
				<ProtectedString name="Source">local stagetime = 600
local timer = script.Timer
math.randomseed(tick())
---------------------------------------------STARTOFMAJORFUNCTIONLIST------------------------------------------

function Map(ville)

local mapname = ville.Name
local mapcreator = &quot;litozinnamon&quot;
local ID = 66795336

if ville.Name == &quot;The Village&quot; then
mapcreator = &quot;pa00&quot;
ID = 76795293 --The village
elseif ville.Name == &quot;Mansion&quot; then
mapcreator = &quot;pa00&quot;
ID = 82934836 --mansion
elseif ville.Name == &quot;Airfield&quot; then
mapcreator = &quot;shaylan007 and litozinnamon&quot;
ID = 66793217 --airfield
elseif ville.Name == &quot;D-Day Beach&quot; then
mapcreator = &quot;shaylan007 and litozinnamon&quot;
ID = 66792472 --D-day
elseif ville.Name == &quot;Sub Silva&quot; then
mapcreator = &quot;armada62&quot;
ID = 73564064 --sub silva
elseif ville.Name == &quot;Downfall&quot; then
mapcreator = &quot;shako34&quot;
ID = 66794055 --downfall
elseif ville.Name == &quot;Abandoned Submarine Base&quot; then
mapcreator = &quot;joakimern&quot;
ID = 66795992 --submarine
elseif ville.Name == &quot;Lumber Yard&quot; then
mapcreator = &quot;shaylan007&quot;
ID = 66796032 --lumber
elseif ville.Name == &quot;Dome&quot; then
mapcreator = &quot;RyanRoblox114&quot;
ID = 66792033 --dome
elseif ville.Name == &quot;Winter Passage&quot; then
mapcreator = &quot;mitmitmit&quot;
ID = 66793631 --winter passage
elseif ville.Name == &quot;Asylum&quot; then
mapcreator = &quot;RyanRoblox114&quot;
ID = 67873153 --asylum
elseif ville.Name == &quot;Harbor&quot; then
mapcreator = &quot;MonsterJam911&quot;
ID = 66795421 --harbor
elseif ville.Name == &quot;Divided City&quot; then
mapcreator = &quot;shaylan007 and litozinnamon&quot;
ID = 66793153 --divided city
elseif ville.Name == &quot;Bridge Ruins&quot; then
mapcreator = &quot;SHADOWGHOST2&quot;
ID = 66795083 --bridge ruin
elseif ville.Name == &quot;City&quot; then
mapcreator = &quot;1dev2&quot;
ID = 67873618 --city
elseif ville.Name == &quot;Desert Heat&quot; then
mapcreator = &quot;shaylan007&quot;
ID = 66794106 --desert heat
elseif ville.Name == &quot;Factory&quot; then
mapcreator = &quot;BL0X1&quot;
ID = 66793971 --factory
elseif ville.Name == &quot;Urban Ruins&quot; then
mapcreator = &quot;moofie&quot;
ID = 66792165 --urban ruin
elseif ville.Name == &quot;Tunnel Attack&quot; then
mapcreator = &quot;1505erik&quot;
ID = 67708983 --tunnel attack

elseif ville.Name == &quot;Cargo Map&quot; then
mapcreator = &quot;SHADOWGHOST2&quot;
ID = 66687282 --cargo

elseif ville.Name == &quot;Twin Bunkers&quot; then
mapcreator = &quot;litozinnamon&quot;
ID = 66795336 --bunker

elseif ville.Name == &quot;Abandoned City&quot; then
mapcreator = &quot;mitmitmit&quot;
ID = 66795599 --abandoned city

end

script.Prev.Value = mapname
game.StarterGui.Update.Map.Text = &quot;Map : &quot; ..mapname.. &quot;          Created by : &quot; ..mapcreator
local plays = game.Players:GetChildren()
&#9;
for i = 1, #plays do
plays[i].PlayerGui.Update.Map.Text = &quot;Map : &quot; ..mapname.. &quot;          Created by : &quot; ..mapcreator
if plays[i].PlayerGui:findFirstChild(&quot;VOTER&quot;) then
plays[i].PlayerGui.VOTER:Destroy()
end
end

wait(1)

local msg = Instance.new(&quot;Message&quot;,workspace)
msg.Text = ville.Name.. &quot; is chosen&quot;

local model = game:GetService(&quot;InsertService&quot;):LoadAsset(ID) -- map
if(model:IsA(&quot;Model&quot;)) then
  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;local field = model.field
&#9;if field:findFirstChild(&quot;ThumbnailCamera&quot;) then
&#9;field.ThumbnailCamera:Destroy()
&#9;end
&#9;field.Parent = game.Workspace
&#9;field.Archivable = false
&#9;model:Destroy()
&#9;local el = game:GetService(&quot;InsertService&quot;):LoadAsset(83028834) -- ah
&#9;if(el:IsA(&quot;Model&quot;)) then
&#9;local tab = game:GetService(&quot;InsertService&quot;):Insert(el) 
&#9;el.Parent = field
&#9;end
end

wait(2)

msg.Text = &quot;BEGIN!&quot;
wait(2)
msg:Destroy()

end

---------------------------------------------ENDOFMAJORFUNCTIONLIST------------------------------------------

function maximum(a)

&#9;max = 0       -- maximum value
&#9;for i = 1, #a do
&#9;&#9;if a[i].Value &gt; max then
&#9;&#9;max = a[i].Value
&#9;&#9;end
&#9;end

&#9;local map = nil
&#9;local selected = {}
&#9;local k = 1

&#9;for i = 1, #a do
&#9;&#9;if a[i].Value &gt;= max then
&#9;&#9;selected[k] = a[i]
&#9;&#9;k = k + 1
&#9;&#9;end
&#9;end

&#9;map = selected[math.random(1,#selected)]
&#9;if not map then
&#9;map = a[math.random(1,#a)]
&#9;end

&#9;return map

end

---------CLEAR----------


function clearPlayerInfo() 

&#9;local players = game.Players:GetChildren()
&#9;
&#9;for i = 1, #players do

&#9;&#9;if players[i].Character and players[i].Character:FindFirstChild(&quot;Torso&quot;) and players[i].Character:FindFirstChild(&quot;Humanoid&quot;) and not players[i].PlayerGui:FindFirstChild(&quot;LOL&quot;) and not players[i].PlayerGui:FindFirstChild(&quot;GUI&quot;) then
&#9;&#9;players[i].Character.Humanoid.Health = 0
&#9;&#9;if players[i]:findFirstChild(&quot;leaderstats&quot;) and players[i].leaderstats:findFirstChild(&quot;Deaths&quot;) then 
&#9;&#9;players[i].leaderstats.Deaths.Value = players[i].leaderstats.Deaths.Value - 1 
&#9;&#9;end
&#9;&#9;end 
&#9;
&#9;end&#9;

end

---------CLEAR----------

function Preparemaps()
script.MAPS:ClearAllChildren()
maplist = {&quot;The Village&quot;,&quot;Airfield&quot;,&quot;D-Day Beach&quot;,&quot;Sub Silva&quot; ,&quot;Downfall&quot;,&quot;Abandoned Submarine Base&quot;,&quot;Lumber Yard&quot;,
&quot;Dome&quot;,&quot;Winter Passage&quot;,&quot;Asylum&quot;,&quot;Harbor&quot;,&quot;Divided City&quot;,&quot;Bridge Ruins&quot;,&quot;City&quot;,&quot;Desert Heat&quot;,&quot;Factory&quot;,&quot;Urban Ruins&quot;,
&quot;Tunnel Attack&quot;,&quot;Abandoned City&quot;,&quot;Twin Bunkers&quot;,&quot;Cargo Map&quot;,&quot;Mansion&quot;}
repeat 
local pick = maplist[math.random(1,#maplist)]
if pick ~= script.Prev.Value and not script.MAPS:findFirstChild(pick) then
h = Instance.new(&quot;IntValue&quot;,script.MAPS)
h.Name = pick
end
wait()
until #script.MAPS:GetChildren() == 5

end

function newmap()
&#9;Preparemaps()
&#9;local pp = game.Players:GetChildren()
&#9;for i = 1, #pp do
&#9;&#9;if pp[i].PlayerGui.Parent then
&#9;&#9;game.Lighting.VOTER:Clone().Parent = pp[i].PlayerGui 
&#9;&#9;end
&#9;end
&#9;timer.Value = 20
&#9;for i = 1, timer.Value do
&#9;timer.Value = timer.Value - 1
&#9;wait(1)
&#9;end
&#9;local chosen = maximum(script.MAPS:GetChildren())
&#9;wait(1)
&#9;script:findFirstChild(&quot;First Blood&quot;).Value = 0
&#9;Map(chosen)
&#9;wait(stagetime)
&#9;local msg = Instance.new(&quot;Message&quot;,game.Workspace)
&#9;msg.Text = (&quot;5 More Minutes&quot;)
&#9;wait(1)
&#9;msg.Parent = nil
&#9;wait(300)--300
&#9;msg.Parent = game.Workspace
&#9;for i = 1, 6 do
&#9;msg.Text = 6-i
&#9;wait(1)
&#9;end
&#9;msg.Text = (&quot;Good Game!&quot;)
&#9;wait(1)
&#9;game.Workspace:findFirstChild(&quot;field&quot;):Destroy()
&#9;clearPlayerInfo()
&#9;game.Teams:RebalanceTeams()
&#9;workspace.Fection:ClearAllChildren()
&#9;wait(2)
&#9;msg:Destroy()
&#9;wait(4)

end

while true do 
newmap()
end
</ProtectedString>
			</Properties>
			<Item class="IntValue" referent="RBX5">
				<Properties>
					<string name="Name">First Blood</string>
					<int name="Value">1</int>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX6">
				<Properties>
					<string name="Name">team</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX7">
				<Properties>
					<string name="Name">MAPS</string>
					<int name="Value">0</int>
				</Properties>
				<Item class="IntValue" referent="RBX8">
					<Properties>
						<string name="Name">Dome</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX9">
					<Properties>
						<string name="Name">D-Day Beach</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX10">
					<Properties>
						<string name="Name">The Village</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX11">
					<Properties>
						<string name="Name">Bridge Ruins</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX12">
					<Properties>
						<string name="Name">Factory</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
			</Item>
			<Item class="IntValue" referent="RBX13">
				<Properties>
					<string name="Name">Timer</string>
					<int name="Value">2</int>
				</Properties>
			</Item>
			<Item class="StringValue" referent="RBX14">
				<Properties>
					<string name="Name">Prev</string>
					<string name="Value">Tunnel Attack</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX15">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">HUH?</string>
				<ProtectedString name="Source">local arisaka = 66898300
local bren = 66908731
local bar = 66908390
local dp28 = 66911393
local db = 66911494
local dualm1 = 66911506
local dualmag = 66911521
local dualnam = 66911535
local dualp38 = 66911549
local dualtt = 66911555
local duallu = 71185626
local fg42 = 66911566
local nambu = 66898346
local magnum = 83812494
local gewehr = 66911928
local kar = 66911942
local karscope = 66911956
local lee = 66911971
local carbine = 66912012
local garand = 66912031
local thompson = 66912048
local m1911 = 66912071
local browning = 66912354
local mg42 = 66912364
local mp40 = 66912373
local mosin = 66912383
local mosinscope = 73563233
local p38 = 66912386
local ppsh = 66912394
local ptrs = 66912406
local stg = 66912423
local svt = 66912431
local spring = 66912571
local springscope = 66912574
local sten = 66912581
local tf2 = 66912595
local tt33 = 66912600
local trench = 66912607
local type100 = 66912617
local type99 = 66912626
local luger = 70198575
local mon = 76765570
local max = 78784507
local ariscope = 81840308

function CollectGun(drop,tcl,tam,Torso)
if not drop or not tcl then print(&quot;value fail&quot;) return end
if not workspace:findFirstChild(&quot;field&quot;) then print(&quot;field fail&quot;) return end
if not Torso then print(&quot;torso gone&quot;) return end
if (Torso.Position-workspace.BASE.Floor.Position).Magnitude &gt; 10000 then print(&quot;torso fail&quot;) return end
wp = drop
cod = &quot;&quot;
if wp.Name == &quot;Arisaka&quot; then
&#9;cod = arisaka
elseif wp.Name == &quot;Arisaka Scoped&quot; then
&#9;cod = ariscope
elseif wp.Name == &quot;Bren&quot; then
&#9;cod = bren
elseif wp.Name == &quot;Bar Gun&quot; then
&#9;cod = bar
elseif wp.Name == &quot;DP-28&quot; then
&#9;cod = dp28
elseif wp.Name == &quot;DB Shotgun&quot; then
&#9;cod = db
elseif wp.Name == &quot;Dual M1911&quot; then
&#9;cod = dualm1
elseif wp.Name == &quot;Dual Magnum&quot; then
&#9;cod = dualmag
elseif wp.Name == &quot;Dual Nambu&quot; then
&#9;cod = dualnam
elseif wp.Name == &quot;Dual P38&quot; then
&#9;cod = dualp38
elseif wp.Name == &quot;Dual TT-33&quot; then
&#9;cod = dualtt
elseif wp.Name == &quot;Dual Luger&quot; then
&#9;cod = duallu
elseif wp.Name == &quot;FG42&quot; then
&#9;cod = fg42
elseif wp.Name == &quot;Nambu&quot; then
&#9;cod = nambu
elseif wp.Name == &quot;357 Magnum&quot; then
&#9;cod = magnum
elseif wp.Name == &quot;Gewehr 43&quot; then
&#9;cod = gewehr
elseif wp.Name == &quot;Kar98K&quot; then
&#9;cod = kar
elseif wp.Name == &quot;Kar98K Scoped&quot; then
&#9;cod = karscope
elseif wp.Name == &quot;Lee-Enfield&quot; then
&#9;cod = lee
elseif wp.Name == &quot;M1 Carbine&quot; then
&#9;cod = carbine
elseif wp.Name == &quot;M1 Garand&quot; then
&#9;cod = garand
elseif wp.Name == &quot;M1 Thompson&quot; then
&#9;cod = thompson
elseif wp.Name == &quot;M1911&quot; then
&#9;cod = m1911
elseif wp.Name == &quot;M1919 Browning&quot; then
&#9;cod = browning
elseif wp.Name == &quot;MG42&quot; then
&#9;cod = mg42
elseif wp.Name == &quot;MP40&quot; then
&#9;cod = mp40
elseif wp.Name == &quot;Mosin Nagant&quot; then
&#9;cod = mosin
elseif wp.Name == &quot;Mosin Nagant Scoped&quot; then
&#9;cod = mosinscope
elseif wp.Name == &quot;P38&quot; then
&#9;cod = p38
elseif wp.Name == &quot;PPSh-41&quot; then
&#9;cod = ppsh
elseif wp.Name == &quot;PTRS-41&quot; then
&#9;cod = ptrs
elseif wp.Name == &quot;STG-44&quot; then
&#9;cod = stg
elseif wp.Name == &quot;SVT-40&quot; then
&#9;cod = svt
elseif wp.Name == &quot;Springfield&quot; then
&#9;cod = spring
elseif wp.Name == &quot;Springfield Scoped&quot; then
&#9;cod = springscope
elseif wp.Name == &quot;Sten&quot; then
&#9;cod = sten
elseif wp.Name == &quot;TF2Aussie&quot; then
&#9;cod = tf2
elseif wp.Name == &quot;TT-33&quot; then
&#9;cod = tt33
elseif wp.Name == &quot;Trench Gun&quot; then
&#9;cod = trench
elseif wp.Name == &quot;Type 100&quot; then
&#9;cod = type100
elseif wp.Name == &quot;Type 99&quot; then
&#9;cod = type99
elseif wp.Name == &quot;Luger&quot; then
&#9;cod = luger
elseif wp.Name == &quot;MonDragon&quot; then
&#9;cod = mon
elseif wp.Name == &quot;Maxim&quot; then
&#9;cod = max
end

&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(cod)
&#9;local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;game.Lighting.Drops.GunWeld:Clone().Parent = model
&#9;game.Debris:AddItem(model,50)
&#9;model.Name = drop.Name
&#9;model.Parent = workspace.Fection
&#9;lol = model.Handle
&#9;ay = game.Lighting.Drops.Key:Clone()
&#9;ay.Parent = lol
&#9;ay.Clip.Value = tcl
&#9;ay.Ammo.Value = tam
&#9;ay.Weapon.Text = &quot;Press &amp; Hold V for &quot; ..model.Name.. &quot; Clip/Mag : [&quot; ..ay.Ammo.Value.. &quot;] Ammo : [&quot; ..ay.Clip.Value.. &quot;]&quot;
&#9;lol.Name = &quot;John&quot;
&#9;model:MoveTo((Torso.CFrame*CFrame.new(0,0,-5)).p)

end 

game.Players.PlayerAdded:connect(function(p) 

p.CharacterAdded:connect(function(c) 

c.Humanoid.Died:connect(function(d) 

local m = c:GetChildren()
for i = 1, #m do
&#9;if m[i].className == &quot;Tool&quot; then
&#9;Drop(m[i],c:findFirstChild(&quot;Torso&quot;))
&#9;m[i]:remove()
&#9;elseif m[i].className == &quot;Model&quot; or m[i].className == &quot;Script&quot; and m[i].Name ~= &quot;Ragdoll&quot; then
&#9;m[i]:Destroy()
&#9;end
end

wait(5)

local I = Instance.new(&quot;Model&quot;) 
I.Name = &quot; &quot;
game.Debris:AddItem(I,40)

if game.Workspace:findFirstChild(&quot;field&quot;) then
I.Parent = game.Workspace.field
else
I.Parent = nil
return
end

k = c:GetChildren() 

for i = 1, #k do 
if k[i].className == &quot;Part&quot; and k[i].Name ~= &quot;Part&quot; then
local c = k[i]:clone() 
c.Parent = I 
c.Anchored = true
elseif k[i].className == &quot;Shirt&quot; or k[i].className == &quot;Pants&quot; or k[i].className == &quot;ShirtGraphic&quot; or k[i].className == &quot;CharacterMesh&quot; then
k[i]:clone().Parent = I
end 
end 

aha = Instance.new(&quot;Humanoid&quot;,I)
aha.MaxHealth = 0
aha.Health = 0

end) 
end) 
end) 

function Drop(Tool,Torso)

if Tool:findFirstChild(&quot;AmmoScript&quot;) and Torso then
CollectGun(game.Lighting:findFirstChild(Tool.Name),Tool.AmmoScript.Clip.Value,Tool.AmmoScript.Ammo.Value,Torso)
end

end

</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX16">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LDRBOARD</string>
				<ProtectedString name="Source">stands = {}
CTF_mode = false

victimname = &quot;Player1&quot;
killname = &quot;Player2&quot;
weapon = 10
weapon2 = 10
weapon3 = 10
weapon4 = 10
victeam = nil
kilteam = nil

--- KILLSTREAK ID START ---

local kill = script:findFirstChild(&quot;KILL&quot;)
local ks = script:findFirstChild(&quot;KSTEST&quot;)
local cross = script:findFirstChild(&quot;Crosshairs&quot;)
local save = script:findFirstChild(&quot;Save&quot;)
kill.Parent = nil
ks.Parent = nil
cross.Parent = nil
save.Parent = nil


--- KILLSTREAK ID END ---


--- GUN ID START ---

local bar = &quot;http://www.roblox.com/asset/?id=38508457&quot;

local fg42 = &quot;http://www.roblox.com/asset/?id=38508472&quot;

local gewehr = &quot;http://www.roblox.com/asset/?id=38508538&quot;

local grenade = &quot;http://www.roblox.com/asset/?id=42877468&quot;

local kar98 = &quot;http://www.roblox.com/asset/?id=38508513&quot;

local garand = &quot;http://www.roblox.com/asset/?id=38508554&quot;

local thompson = &quot;http://www.roblox.com/asset/?id=38506617&quot;

local m1911 = &quot;http://www.roblox.com/asset/?id=38508570&quot;

local mp40 = &quot;http://www.roblox.com/asset/?id=38506600&quot;

local p38 = &quot;http://www.roblox.com/asset/?id=38508587&quot;

local springfield = &quot;http://www.roblox.com/asset/?id=38521318&quot;

local trench = &quot;http://www.roblox.com/asset/?id=40910242&quot;

local ppsh = &quot;http://www.roblox.com/asset/?id=40031359&quot;

local type100 = &quot;http://www.roblox.com/asset/?id=40031415&quot;

local tt33 = &quot;http://www.roblox.com/asset/?id=40653446&quot;

local nambu = &quot;http://www.roblox.com/asset/?id=40653442&quot;

local knife = &quot;http://www.roblox.com/asset/?id=42877556&quot;

local stg = &quot;http://www.roblox.com/asset/?id=41678783&quot;

local carbine = &quot;http://www.roblox.com/asset/?id=41725885&quot;

local bren = &quot;http://www.roblox.com/asset/?id=43149790&quot;

local dp28 = &quot;http://www.roblox.com/asset/?id=41202893&quot;

local mosin = &quot;http://www.roblox.com/asset/?id=43149639&quot;

local sten = &quot;http://www.roblox.com/asset/?id=43149588&quot;

local type99 = &quot;http://www.roblox.com/asset/?id=41202931&quot;

local magnum = &quot;http://www.roblox.com/asset/?id=43169975&quot;

local thknife = &quot;http://www.roblox.com/asset/?id=43665674&quot;

local brown = &quot;http://www.roblox.com/asset/?id=44433484&quot;

local mg42 = &quot;http://www.roblox.com/asset/?id=44433495&quot;

local betty = &quot;http://www.roblox.com/asset/?id=46091387&quot;

local arisaka = &quot;http://www.roblox.com/asset/?id=46359490&quot;

local svt40 = &quot;http://www.roblox.com/asset/?id=46359529&quot;

local lee = &quot;http://www.roblox.com/asset/?id=46365270&quot;

local tom = &quot;http://www.roblox.com/asset/?id=53592615&quot;

local bay = &quot;http://www.roblox.com/asset/?id=49441063&quot;

local ptrs = &quot;http://www.roblox.com/asset/?id=46359473&quot;

local double = &quot;http://www.roblox.com/asset/?id=46359663&quot;

local molotov = &quot;http://www.roblox.com/asset/?id=54480416&quot;

local arty = &quot;http://www.roblox.com/asset/?id=54480421&quot;

local sticky = &quot;http://www.roblox.com/asset/?id=54870399&quot;

local smokeflare = &quot;http://www.roblox.com/asset/?id=68200097&quot;

local luger = &quot;http://www.roblox.com/asset/?id=76800180&quot;

local mon = &quot;http://www.roblox.com/asset/?id=76769077&quot;

local max = &quot;http://www.roblox.com/asset/?id=78771539&quot;

local spec = script:findFirstChild(&quot;Spec&quot;)

spec.Parent = nil

--- GUN ID END ---

function update(nub, vt, kt)

ups = game.StarterGui.Update.List
ups1 = ups.row1
ups2 = ups.row2
ups3 = ups.row3
ups4 = ups.row4
ups4.K1.Text = ups3.K1.Text
ups4.V1.Text = ups3.V1.Text

ups4.K1.TextColor3 = ups3.K1.TextColor3
ups4.V1.TextColor3 = ups3.V1.TextColor3

ups3.K1.Text = ups2.K1.Text
ups3.V1.Text = ups2.V1.Text

ups3.K1.TextColor3 = ups2.K1.TextColor3
ups3.V1.TextColor3 = ups2.V1.TextColor3

ups2.K1.Text = ups1.K1.Text
ups2.V1.Text = ups1.V1.Text

ups2.K1.TextColor3 = ups1.K1.TextColor3
ups2.V1.TextColor3 = ups1.V1.TextColor3

ups1.K1.Text = killname
ups1.V1.Text = victimname

if victeam == BrickColor.new(&quot;Bright red&quot;) then
ups1.V1.TextColor3 = Color3.new(5,0,0)
elseif victeam == BrickColor.new(&quot;Bright blue&quot;) then
ups1.V1.TextColor3 = Color3.new(0,0,5)
end

if kilteam == BrickColor.new(&quot;Bright red&quot;) then
ups1.K1.TextColor3 = Color3.new(5,0,0)
elseif kilteam == BrickColor.new(&quot;Bright blue&quot;) then
ups1.K1.TextColor3 = Color3.new(0,0,5)
end

player = game.Players:GetChildren()

for i = 1, #player do
up = player[i].PlayerGui.Update.List
up1 = up.row1
up2 = up.row2
up3 = up.row3
up4 = up.row4
up4.K1.Text = up3.K1.Text
up4.V1.Text = up3.V1.Text

up4.K1.TextColor3 = up3.K1.TextColor3
up4.V1.TextColor3 = up3.V1.TextColor3

up3.K1.Text = up2.K1.Text
up3.V1.Text = up2.V1.Text

up3.K1.TextColor3 = up2.K1.TextColor3
up3.V1.TextColor3 = up2.V1.TextColor3

up2.K1.Text = up1.K1.Text
up2.V1.Text = up1.V1.Text

up2.K1.TextColor3 = up1.K1.TextColor3
up2.V1.TextColor3 = up1.V1.TextColor3

up1.K1.Text = killname
up1.V1.Text = victimname

if victeam == BrickColor.new(&quot;Bright red&quot;) then
up1.V1.TextColor3 = Color3.new(5,0,0)
elseif victeam == BrickColor.new(&quot;Bright blue&quot;) then
up1.V1.TextColor3 = Color3.new(0,0,5)
end

if kilteam == BrickColor.new(&quot;Bright red&quot;) then
up1.K1.TextColor3 = Color3.new(5,0,0)
elseif kilteam == BrickColor.new(&quot;Bright blue&quot;) then
up1.K1.TextColor3 = Color3.new(0,0,5)
end

----------------------------------


if weapon4 then

&#9;local stuff = up4:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i]:Destroy()
&#9;&#9;end
&#9;end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

if weapon3 then

&#9;local stuff = up3:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i].Parent = up4
&#9;&#9;end
&#9;end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

if weapon2 then

&#9;local stuff = up2:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i].Parent = up3
&#9;&#9;end
&#9;end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

if weapon then

&#9;local stuff = up1:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i].Parent = up2
&#9;&#9;end
&#9;end

&#9;local hud = Instance.new(&quot;ImageLabel&quot;)
&#9;hud.BackgroundTransparency = 1
&#9;hud.BorderSizePixel = 0

&#9;local text = Instance.new(&quot;TextLabel&quot;)
&#9;text.Size = UDim2.new(0,100,0,20)
&#9;text.Name = &quot;Unknown&quot;
&#9;text.BorderSizePixel = 0
&#9;text.BackgroundTransparency = 1
&#9;text.Font = 2
&#9;text.TextColor3 = Color3.new(0,0,0)
&#9;text.FontSize = 4

&#9;if weapon == 0 then
&#9;text.Text = &quot;Unknown Weapon&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = up1
&#9;hud = nil
&#9;end

&#9;if weapon == 101 then
&#9;text.Text = &quot;TEAMFORTRESS TWO AUSSIE!&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = up1
&#9;hud = nil
&#9;end

&#9;if weapon == 250 then
&#9;text.Text = &quot;Fire&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = up1
&#9;hud = nil
&#9;end

&#9;if weapon == 500 then
&#9;text.Text = &quot;Rocket&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = up1
&#9;hud = nil
&#9;end

&#9;if weapon == 600 then
&#9;text.Text = &quot;Satchel Charge&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = up1
&#9;hud = nil
&#9;end

&#9;if weapon == 750 then
&#9;text.Text = &quot;Artillery&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = up1
&#9;hud = nil
&#9;end

&#9;if weapon == 1000 then
&#9;hud.Size = UDim2.new(0,60,0,30)
&#9;hud.Position = UDim2.new(0,120,0,-3)
&#9;hud.Image = thompson
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1001 then
&#9;hud.Size = UDim2.new(0,60,0,30)
&#9;hud.Position = UDim2.new(0,120,0,-3)
&#9;hud.Image = mp40
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1002 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = kar98
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1003 then
&#9;hud.Size = UDim2.new(0,85,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = garand
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1004 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = bar
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1005 then
&#9;hud.Size = UDim2.new(0,80,0,19)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = fg42
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1006 then
&#9;hud.Size = UDim2.new(0,85,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = gewehr
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1007 then
&#9;hud.Size = UDim2.new(0,85,0,24)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = springfield
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1008 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = p38
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1009 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = m1911
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1010 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-5)
&#9;hud.Image = grenade
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1011 then
&#9;hud.Size = UDim2.new(0,60,0,30)
&#9;hud.Position = UDim2.new(0,120,0,-3)
&#9;hud.Image = ppsh
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1012 then
&#9;hud.Size = UDim2.new(0,60,0,18)
&#9;hud.Position = UDim2.new(0,116,0,2)
&#9;hud.Image = type100
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1013 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = tt33
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1014 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = nambu
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1015 then
&#9;hud.Size = UDim2.new(0,85,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = trench
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1016 then
&#9;hud.Size = UDim2.new(0,65,0,20)
&#9;hud.Position = UDim2.new(0,115,0,0)
&#9;hud.Image = knife
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1017 then
&#9;hud.Size = UDim2.new(0,65,0,35)
&#9;hud.Position = UDim2.new(0,110,0,-3)
&#9;hud.Image = stg
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1018 then
&#9;hud.Size = UDim2.new(0,83,0,22)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = carbine
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1019 then
&#9;hud.Size = UDim2.new(0,75,0,37)
&#9;hud.Position = UDim2.new(0,105,0,-10)
&#9;hud.Image = bren
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1020 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = dp28
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1021 then
&#9;hud.Size = UDim2.new(0,80,0,42)
&#9;hud.Position = UDim2.new(0,100,0,-10)
&#9;hud.Image = mosin
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1022 then
&#9;hud.Size = UDim2.new(0,65,0,17)
&#9;hud.Position = UDim2.new(0,110,0,0)
&#9;hud.Image = sten
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1023 then
&#9;hud.Size = UDim2.new(0,75,0,37)
&#9;hud.Position = UDim2.new(0,105,0,-10)
&#9;hud.Image = type99
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1024 then
&#9;hud.Size = UDim2.new(0,35,0,35)
&#9;hud.Position = UDim2.new(0,128,0,-5)
&#9;hud.Image = magnum
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1025 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,0)
&#9;hud.Image = thknife
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1026 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = brown
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1027 then
&#9;hud.Size = UDim2.new(0,80,0,38)
&#9;hud.Position = UDim2.new(0,100,0,-8)
&#9;hud.Image = mg42
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1028 then
&#9;hud.Size = UDim2.new(0,100,0,30)
&#9;hud.Position = UDim2.new(0,100,0,-5)
&#9;hud.Image = betty
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1029 then
&#9;hud.Size = UDim2.new(0,85,0,23)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = arisaka
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1030 then
&#9;hud.Size = UDim2.new(0,85,0,40)
&#9;hud.Position = UDim2.new(0,100,0,-10)
&#9;hud.Image = svt40
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1031 then
&#9;hud.Size = UDim2.new(0,85,0,21)
&#9;hud.Position = UDim2.new(0,100,0,-1)
&#9;hud.Image = lee
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1032 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-3)
&#9;hud.Image = tom
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1033 then
&#9;hud.Size = UDim2.new(0,45,0,35)
&#9;hud.Position = UDim2.new(0,125,0,-5)
&#9;hud.Image = bay
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1034 then
&#9;hud.Size = UDim2.new(0,100,0,30)
&#9;hud.Position = UDim2.new(0,90,0,-5)
&#9;hud.Image = ptrs
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1035 then
&#9;hud.Size = UDim2.new(0,75,0,20)
&#9;hud.Position = UDim2.new(0,100,0,3)
&#9;hud.Image = double
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1036 then
&#9;hud.Size = UDim2.new(0,40,0,30)
&#9;hud.Position = UDim2.new(0, 130, 0, -2)
&#9;hud.Image = molotov
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1037 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-5)
&#9;hud.Image = arty
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1038 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-5)
&#9;hud.Image = sticky
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1039 then
&#9;hud.Size = UDim2.new(0,15,0,20)
&#9;hud.Position = UDim2.new(0, 135, 0, 0)
&#9;hud.Image = smokeflare
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1041 then
&#9;hud.Size = UDim2.new(0,90,0,30)
&#9;hud.Position = UDim2.new(0,100,0,-3)
&#9;hud.Image = mon
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1040 then
&#9;hud.Size = UDim2.new(0,90,0,30)
&#9;hud.Position = UDim2.new(0,100,0,-3)
&#9;hud.Image = luger
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if weapon == 1042 then
&#9;hud.Size = UDim2.new(0,90,0,30)
&#9;hud.Position = UDim2.new(0,95,0,-5)
&#9;hud.Image = max
&#9;hud.Parent = up1
&#9;text = nil
&#9;end

&#9;if nub ~= nil then
&#9;lol = spec:Clone()
&#9;lol.Text = nub
&#9;lol.Parent = up1
&#9;end

end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


if weapon4 then

&#9;local stuff = ups4:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i]:Destroy()
&#9;&#9;end
&#9;end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

if weapon3 then

&#9;local stuff = ups3:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i].Parent = ups4
&#9;&#9;end
&#9;end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

if weapon2 then

&#9;local stuff = ups2:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i].Parent = ups3
&#9;&#9;end
&#9;end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

if weapon then

&#9;local stuff = ups1:GetChildren()
&#9;for i = 1, #stuff do
&#9;&#9;if stuff[i].className == &quot;ImageLabel&quot; or stuff[i].Name == &quot;Spec&quot; or stuff[i].Name == &quot;Unknown&quot; or stuff[i].Name == &quot;Tank&quot; or stuff[i].Name == &quot;Artillery&quot; then
&#9;&#9;&#9;stuff[i].Parent = ups2
&#9;&#9;end
&#9;end

&#9;local hud = Instance.new(&quot;ImageLabel&quot;)
&#9;hud.BackgroundTransparency = 1
&#9;hud.BorderSizePixel = 0

&#9;local text = Instance.new(&quot;TextLabel&quot;)
&#9;text.Size = UDim2.new(0,100,0,20)
&#9;text.Name = &quot;Unknown&quot;
&#9;text.BorderSizePixel = 0
&#9;text.BackgroundTransparency = 1
&#9;text.Font = 2
&#9;text.TextColor3 = Color3.new(0,0,0)
&#9;text.FontSize = 4

&#9;if weapon == 0 then
&#9;text.Text = &quot;Unknown Weapon&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = ups1
&#9;hud = nil
&#9;end

&#9;if weapon == 101 then
&#9;text.Text = &quot;TEAMFORTRESS TWO AUSSIE!&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = ups1
&#9;hud = nil
&#9;end

&#9;if weapon == 250 then
&#9;text.Text = &quot;Fire&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = ups1
&#9;hud = nil
&#9;end

&#9;if weapon == 500 then
&#9;text.Text = &quot;Rocket&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = ups1
&#9;hud = nil
&#9;end

&#9;if weapon == 600 then
&#9;text.Text = &quot;Satchel Charge&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = ups1
&#9;hud = nil
&#9;end

&#9;if weapon == 750 then
&#9;text.Text = &quot;Artillery&quot;
&#9;text.Position = UDim2.new(0,90,0,0)
&#9;text.Parent = ups1
&#9;hud = nil
&#9;end

&#9;if weapon == 1000 then
&#9;hud.Size = UDim2.new(0,60,0,30)
&#9;hud.Position = UDim2.new(0,120,0,-3)
&#9;hud.Image = thompson
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1001 then
&#9;hud.Size = UDim2.new(0,60,0,30)
&#9;hud.Position = UDim2.new(0,120,0,-3)
&#9;hud.Image = mp40
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1002 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = kar98
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1003 then
&#9;hud.Size = UDim2.new(0,85,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = garand
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1004 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = bar
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1005 then
&#9;hud.Size = UDim2.new(0,80,0,19)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = fg42
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1006 then
&#9;hud.Size = UDim2.new(0,85,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = gewehr
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1007 then
&#9;hud.Size = UDim2.new(0,85,0,24)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = springfield
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1008 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = p38
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1009 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = m1911
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1010 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-5)
&#9;hud.Image = grenade
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1011 then
&#9;hud.Size = UDim2.new(0,60,0,30)
&#9;hud.Position = UDim2.new(0,120,0,-3)
&#9;hud.Image = ppsh
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1012 then
&#9;hud.Size = UDim2.new(0,60,0,18)
&#9;hud.Position = UDim2.new(0,116,0,2)
&#9;hud.Image = type100
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1013 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = tt33
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1014 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,130,0,-3)
&#9;hud.Image = nambu
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1015 then
&#9;hud.Size = UDim2.new(0,85,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = trench
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1016 then
&#9;hud.Size = UDim2.new(0,65,0,20)
&#9;hud.Position = UDim2.new(0,115,0,0)
&#9;hud.Image = knife
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1017 then
&#9;hud.Size = UDim2.new(0,65,0,35)
&#9;hud.Position = UDim2.new(0,110,0,-3)
&#9;hud.Image = stg
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1018 then
&#9;hud.Size = UDim2.new(0,83,0,22)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = carbine
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1019 then
&#9;hud.Size = UDim2.new(0,75,0,37)
&#9;hud.Position = UDim2.new(0,105,0,-10)
&#9;hud.Image = bren
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1020 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = dp28
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1021 then
&#9;hud.Size = UDim2.new(0,80,0,42)
&#9;hud.Position = UDim2.new(0,100,0,-10)
&#9;hud.Image = mosin
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1022 then
&#9;hud.Size = UDim2.new(0,65,0,17)
&#9;hud.Position = UDim2.new(0,110,0,0)
&#9;hud.Image = sten
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1023 then
&#9;hud.Size = UDim2.new(0,75,0,37)
&#9;hud.Position = UDim2.new(0,105,0,-10)
&#9;hud.Image = type99
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1024 then
&#9;hud.Size = UDim2.new(0,35,0,35)
&#9;hud.Position = UDim2.new(0,128,0,-5)
&#9;hud.Image = magnum
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1025 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,0)
&#9;hud.Image = thknife
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1026 then
&#9;hud.Size = UDim2.new(0,80,0,20)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = brown
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1027 then
&#9;hud.Size = UDim2.new(0,80,0,38)
&#9;hud.Position = UDim2.new(0,100,0,-8)
&#9;hud.Image = mg42
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1028 then
&#9;hud.Size = UDim2.new(0,100,0,30)
&#9;hud.Position = UDim2.new(0,100,0,-5)
&#9;hud.Image = betty
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1029 then
&#9;hud.Size = UDim2.new(0,85,0,23)
&#9;hud.Position = UDim2.new(0,100,0,0)
&#9;hud.Image = arisaka
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1030 then
&#9;hud.Size = UDim2.new(0,85,0,40)
&#9;hud.Position = UDim2.new(0,100,0,-10)
&#9;hud.Image = svt40
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1031 then
&#9;hud.Size = UDim2.new(0,85,0,21)
&#9;hud.Position = UDim2.new(0,100,0,-1)
&#9;hud.Image = lee
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1032 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-3)
&#9;hud.Image = tom
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1033 then
&#9;hud.Size = UDim2.new(0,45,0,35)
&#9;hud.Position = UDim2.new(0,125,0,-5)
&#9;hud.Image = bay
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1034 then
&#9;hud.Size = UDim2.new(0,100,0,30)
&#9;hud.Position = UDim2.new(0,90,0,-5)
&#9;hud.Image = ptrs
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1035 then
&#9;hud.Size = UDim2.new(0,75,0,20)
&#9;hud.Position = UDim2.new(0,100,0,3)
&#9;hud.Image = double
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1036 then
&#9;hud.Size = UDim2.new(0,40,0,30)
&#9;hud.Position = UDim2.new(0, 130, 0, -2)
&#9;hud.Image = molotov
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1037 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-5)
&#9;hud.Image = arty
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1038 then
&#9;hud.Size = UDim2.new(0,30,0,30)
&#9;hud.Position = UDim2.new(0,135,0,-5)
&#9;hud.Image = sticky
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1039 then
&#9;hud.Size = UDim2.new(0,15,0,20)
&#9;hud.Position = UDim2.new(0, 135, 0, 0)
&#9;hud.Image = smokeflare
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1041 then
&#9;hud.Size = UDim2.new(0,90,0,30)
&#9;hud.Position = UDim2.new(0,100,0,-3)
&#9;hud.Image = mon
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1040 then
&#9;hud.Size = UDim2.new(0,90,0,30)
&#9;hud.Position = UDim2.new(0,100,0,-3)
&#9;hud.Image = luger
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if weapon == 1042 then
&#9;hud.Size = UDim2.new(0,90,0,30)
&#9;hud.Position = UDim2.new(0,95,0,-5)
&#9;hud.Image = max
&#9;hud.Parent = ups1
&#9;text = nil
&#9;end

&#9;if nub ~= nil then
&#9;lol = spec:Clone()
&#9;lol.Text = nub
&#9;lol.Parent = ups1
&#9;end

end

end

function Send_DB_Event_Died(victim, killer) 

if killer ~= nil then

ups = game.StarterGui.Update.List
ups1 = ups.row1
ups2 = ups.row2
ups3 = ups.row3
ups4 = ups.row4

blood = game.Workspace.Change_Map:findFirstChild(&quot;First Blood&quot;)

victimname = victim.Name
killname = killer.Name

victim.PlayerGui:findFirstChild(&quot;Update&quot;).Kill.Text = &quot;You Were Killed By [&quot; ..killer.Name.. &quot;]&quot;

if killer.Name ~= victim.Name then
killer.PlayerGui:findFirstChild(&quot;Update&quot;).Kill.Text = &quot;You Killed [&quot; ..victim.Name.. &quot;]&quot;
else
killer.PlayerGui:findFirstChild(&quot;Update&quot;).Kill.Text = &quot;You Killed [Yourself]&quot;
end

if victim.Character:findFirstChild(&quot;gun&quot;) then
weapon = victim.Character.gun.Value
end

points = kill:Clone()
points.Parent = killer.PlayerGui
local tst = Instance.new(&quot;IntValue&quot;)

if victim.Name == killer.Name then

victimname = victimname.. &quot;        SUICIDE!&quot;
lol = tst:Clone()
lol.Name = &quot;Self&quot;
lol.Parent = points

end

if victim.Name ~= killer.Name then

if weapon == 1039 then

victimname = victimname.. &quot;        CANISTER THROWING MANIAC DUDE! (SMOKE GRENADE KILL!)&quot;
lol = tst:Clone()
lol.Name = &quot;Can&quot;
lol.Parent = points

end

if killer:findFirstChild(&quot;KO&quot;) and not points:findFirstChild(&quot;Self&quot;) and killer.Character:findFirstChild(&quot;Humanoid&quot;) then

if killer.KO.Value == 1 then 
killer.KO.Value = 2
victimname = victimname.. &quot;        COLLATERAL!&quot;
lol = tst:Clone()
lol.Name = &quot;Coll&quot;
lol.Parent = points
elseif killer.KO.Value == 2 then 
killer.KO.Value = 3
victimname = victimname.. &quot;        TRIPLE COLLATERAL!&quot;
lol = tst:Clone()
lol.Name = &quot;TripColl&quot;
lol.Parent = points
elseif killer.KO.Value == 3 then 
killer.KO.Value = 4
victimname = victimname.. &quot;        MASS COLLATERAL!&quot;
lol = tst:Clone()
lol.Name = &quot;QuadColl&quot;
lol.Parent = points
end

if victim.Character.gun.Value == 1025 or victim.Character.gun.Value == 1032 then
victimname = victimname.. &quot;        THROWING COLLATERAL!&quot;
lol = tst:Clone()
lol.Name = &quot;Ultrathrow&quot;
lol.Parent = points
elseif victim.Character.gun.Value == 500 or victim.Character.gun.Value == 1028 or victim.Character.gun.Value == 1010 or victim.Character.gun.Value == 1036 or victim.Character.gun.Value == 1038 and killer.Character:findFirstChild(&quot;Humanoid&quot;) then
victimname = victimname.. &quot;        EXPLOSIVE COLLATERAL!&quot;
lol = tst:Clone()
lol.Name = &quot;Nuke&quot;
lol.Parent = points
end

else

ko = Instance.new(&quot;IntValue&quot;,killer)
ko.Name = &quot;KO&quot;
ko.Value = 1
game.Debris:AddItem(ko,1)

end

if killer:findFirstChild(&quot;Revenge&quot;).Value == victim then

victimname = victimname.. &quot;        REVENGE!&quot;
killer.Revenge.Value = game.Workspace
lol = tst:Clone()
lol.Name = &quot;Revenge&quot;
lol.Parent = points

end

if victim:findFirstChild(&quot;Revenge&quot;).Value == killer then

victimname = victimname.. &quot;        KILLED AGAIN!&quot;
killer.Revenge.Value = game.Workspace
lol = tst:Clone()
lol.Name = &quot;Pwn&quot;
lol.Parent = points

end


if victim.Name ~= killer.Name then

if ups1.K1.Text == victim.Name and ups2.K1.Text ~= victim.Name and not points:findFirstChild(&quot;Revenge&quot;) then 

victimname = victimname.. &quot;        AVENGED!&quot;
lol = tst:Clone()
lol.Name = &quot;Pay&quot;
lol.Parent = points

elseif ups1.K1.Text == victim.Name and ups2.K1.Text == victim.Name and ups3.K1.Text ~= victim.Name then 

victimname = victimname.. &quot;        STOPPER!&quot;
lol = tst:Clone()
lol.Name = &quot;Karma&quot;
lol.Parent = points

elseif ups1.K1.Text == victim.Name and ups2.K1.Text == victim.Name and ups3.K1.Text == victim.Name and ups4.K1.Text ~= victim.Name then 

victimname = victimname.. &quot;        VENGEANCE!&quot;
lol = tst:Clone()
lol.Name = &quot;Finished&quot;
lol.Parent = points

elseif ups4.K1.Text == victim.Name and ups3.K1.Text == victim.Name and ups2.K1.Text == victim.Name and ups1.K1.Text == victim.Name then

victimname = victimname.. &quot;        THE REBEL!&quot;
lol = tst:Clone()
lol.Name = &quot;Last&quot;
lol.Parent = points

end

if ups1.K1.Text == killer.Name and ups2.K1.Text ~= killer.Name then 

victimname = victimname.. &quot;        DOUBLE KILL&quot;
lol = tst:Clone()
lol.Name = &quot;Double&quot;
lol.Parent = points

elseif ups1.K1.Text == killer.Name and ups2.K1.Text == killer.Name and ups3.K1.Text ~= killer.Name then 

victimname = victimname.. &quot;        TRIPLE KILL&quot;
lol = tst:Clone()
lol.Name = &quot;Triple&quot;
lol.Parent = points

elseif ups1.K1.Text == killer.Name and ups2.K1.Text == killer.Name and ups3.K1.Text == killer.Name and ups4.K1.Text ~= killer.Name then 

victimname = victimname.. &quot;        MULTI KILL&quot;
lol = tst:Clone()
lol.Name = &quot;Multi&quot;
lol.Parent = points

elseif ups4.K1.Text == killer.Name and ups3.K1.Text == killer.Name and ups2.K1.Text == killer.Name and ups1.K1.Text == killer.Name then

victimname = victimname.. &quot;        DOMINATION&quot;
lol = tst:Clone()
lol.Name = &quot;Dominate&quot;
lol.Parent = points

end

if not victim.Character:findFirstChild(&quot;Fake&quot;) then

if weapon == 1015 or vweapon == 1035 then
victimname = victimname.. &quot;        DECAPITATION!&quot;
lol = tst:Clone()
lol.Name = &quot;Trench&quot;
lol.Parent = points
elseif weapon == 1016 or weapon == 1033 then
victimname = victimname.. &quot;        HEAD STAB!&quot;
lol = tst:Clone()
lol.Name = &quot;Headstab&quot;
lol.Parent = points
else
victimname = victimname.. &quot;        HEADSHOT!&quot;
lol = tst:Clone()
lol.Name = &quot;Head&quot;
lol.Parent = points
end

end

if victim.Character:findFirstChild(&quot;NoScope&quot;) then

victimname = victimname.. &quot;        NO SCOPE!&quot;
lol = tst:Clone()
lol.Name = &quot;NoScope&quot;
lol.Parent = points

end


if weapon == 1025 then
if victim.Character:findFirstChild(&quot;Bank&quot;) then
victimname = victimname.. &quot;        BANK SHOT!&quot;
lol = tst:Clone()
lol.Name = &quot;Bank&quot;
lol.Parent = points
else
victimname = victimname.. &quot;        BULLSEYE!&quot;
lol = tst:Clone()
lol.Name = &quot;Bull&quot;
lol.Parent = points
end
end

if weapon == 1032 then
if victim.Character:findFirstChild(&quot;Bank&quot;) then
victimname = victimname.. &quot;        BANK SHOT!&quot;
lol = tst:Clone()
lol.Name = &quot;Bank&quot;
lol.Parent = points
else
victimname = victimname.. &quot;        SCALPER!&quot;
lol = tst:Clone()
lol.Name = &quot;Scal&quot;
lol.Parent = points
end
end

if not killer.Character:findFirstChild(&quot;Humanoid&quot;) then

victimname = victimname.. &quot;        AFTERLIFE!&quot;
lol = tst:Clone()
lol.Name = &quot;After&quot;
lol.Parent = points

end

if blood and blood.Value == 0 then

victimname = victimname.. &quot;        FIRST BLOOD!&quot;

blood.Value = 1
lol = tst:Clone()
lol.Name = &quot;First&quot;
lol.Parent = points

end

if victim.Character:findFirstChild(&quot;Torso&quot;) and killer.Character:findFirstChild(&quot;Torso&quot;) then

if (killer.Character.Torso.Position - victim.Character.Torso.Position).Magnitude &gt; 150 then

victimname = victimname.. &quot;        LONGSHOT!&quot;
lol = tst:Clone()
lol.Name = &quot;Long&quot;
lol.Parent = points

if weapon == 1025 or weapon == 1032 then

victimname = victimname.. &quot;        NINJA!&quot;
lol = tst:Clone()
lol.Name = &quot;Throw&quot;
lol.Parent = points

elseif weapon == 1026 or weapon == 1027 then

victimname = victimname.. &quot;        MG FIRE!&quot;
lol = tst:Clone()
lol.Name = &quot;Heavy&quot;
lol.Parent = points

elseif weapon == 1034 or weapon == 1002 or weapon == 1007 then

victimname = victimname.. &quot;        SNIPED!&quot;
lol = tst:Clone()
lol.Name = &quot;Sniper&quot;
lol.Parent = points

end

if not victim.Character:findFirstChild(&quot;Fake&quot;) then

victimname = victimname.. &quot;        MARKSMAN!&quot;
lol = tst:Clone()
lol.Name = &quot;Longhead&quot;
lol.Parent = points

end

end

end

if victim:findFirstChild(&quot;leaderstats&quot;) then

streak = victim.leaderstats:findFirstChild(&quot;Killstreak&quot;)

if streak.Value == 2 or streak.Value == 4 or streak.Value == 6 or streak.Value == 9 or streak.Value == 14 or streak.Value == 19 or streak.Value == 29 then

victimname = victimname.. &quot;        BUZZKILL!&quot;

lol = tst:Clone()
lol.Name = &quot;Buzz&quot;
lol.Parent = points

streak.Value = 0

end

end

if victim:findFirstChild(&quot;Assist&quot;) then
local ass = victim:GetChildren()
for i = 1, #ass do
if ass[i].className == &quot;TextBox&quot; then
if ass[i].Text ~= killer.Name then
local helper = game.Players:findFirstChild(ass[i].Text)
if helper then
victimname = victimname.. &quot;        KILL ASSIST BY: &quot; ..ass[i].Text
local sad = kill:Clone()
sad.Parent = helper.PlayerGui
lol = tst:Clone()
lol.Name = &quot;Assist&quot;
lol.Parent = points
sad.Script.Disabled = false
end
end
end
end
end

victim:findFirstChild(&quot;Revenge&quot;).Value = killer

end

end

nub = nil
victeam = victim.TeamColor
kilteam = killer.TeamColor

if victim.Character:findFirstChild(&quot;Spec&quot;) then

nub = victim.Character.Spec.Text
victim.Character.Spec:Destroy()

end

victim.leaderstats:findFirstChild(&quot;Killstreak&quot;).Value = 0
points.Script.Disabled = false
update(nub)

end

end 

function onHumanoidDied(humanoid, player)
local stance = player:findFirstChild(&quot;Stance&quot;)
if stance then
stance.Value = 0
end
local stats = player:findFirstChild(&quot;leaderstats&quot;)
if stats then
local deaths = stats:findFirstChild(&quot;Deaths&quot;)
local row = stats:findFirstChild(&quot;Killstreak&quot;)
deaths.Value = deaths.Value + 1

-- do short dance to try and find the killer
local killer = getKillerOfHumanoidIfStillInGame(humanoid) 
handleKillCount(humanoid, player)
Send_DB_Event_Died(player, killer) 
end
end

function onPlayerRespawn(property, player)
&#9;-- need to connect to new humanoid
&#9;
&#9;if property == &quot;Character&quot; and player.Character then
&#9;&#9;local humanoid = player.Character.Humanoid
&#9;&#9;&#9;local p = player
&#9;&#9;&#9;local h = humanoid
&#9;&#9;&#9;humanoid.Died:connect(function() onHumanoidDied(h, p) end )
&#9;end
end

function getKillerOfHumanoidIfStillInGame(humanoid)
&#9;-- returns the player object that killed this humanoid
&#9;-- returns nil if the killer is no longer in the game

&#9;-- check for kill tag on humanoid - may be more than one - todo: deal with this
&#9;local tag = humanoid:findFirstChild(&quot;creator&quot;)

&#9;-- find player with name on tag
&#9;if tag ~= nil then
&#9;&#9;
&#9;&#9;local killer = tag.Value
&#9;&#9;if killer ~= nil then -- killer still in game
&#9;&#9;&#9;return killer
&#9;&#9;end
&#9;end

&#9;return nil
end

function handleKillCount(humanoid, player)
local killer = getKillerOfHumanoidIfStillInGame(humanoid)
if killer then
local stats = killer:findFirstChild(&quot;leaderstats&quot;)
if stats then
local kills = stats:findFirstChild(&quot;Kills&quot;)
local row = stats:findFirstChild(&quot;Killstreak&quot;)
if killer ~= player then
kills.Value = kills.Value + 1
row.Value = row.Value + 1
killstreak(killer)

--[[else

kills.Value = kills.Value + 1
row.Value = row.Value + 1
killstreak(killer)--]]
&#9;&#9;&#9;&#9;
end
end
end
end


-----------------------------------------------

function onPlayerEntered(newPlayer)

&#9;&#9;cross:Clone().Parent = newPlayer

&#9;&#9;local stats = Instance.new(&quot;IntValue&quot;,newPlayer)
&#9;&#9;stats.Name = &quot;leaderstats&quot;

&#9;&#9;local kills = Instance.new(&quot;IntValue&quot;,stats)
&#9;&#9;kills.Name = &quot;Kills&quot;

&#9;&#9;local deaths = Instance.new(&quot;IntValue&quot;,stats)
&#9;&#9;deaths.Name = &quot;Deaths&quot;

&#9;&#9;local row = Instance.new(&quot;IntValue&quot;,stats)
&#9;&#9;row.Name = &quot;Killstreak&quot;

&#9;&#9;local crouch = Instance.new(&quot;IntValue&quot;,newPlayer)
&#9;&#9;crouch.Name = &quot;Stance&quot;

&#9;&#9;local weap = Instance.new(&quot;Model&quot;,newPlayer)
&#9;&#9;weap.Name = &quot;Rewards&quot;

&#9;&#9;local ha = Instance.new(&quot;IntValue&quot;,newPlayer)
&#9;&#9;ha.Name = &quot;Points&quot;

&#9;&#9;local pay = Instance.new(&quot;ObjectValue&quot;,newPlayer)
&#9;&#9;pay.Name = &quot;Revenge&quot;

&#9;&#9;local prim = Instance.new(&quot;ObjectValue&quot;,newPlayer)
&#9;&#9;prim.Name = &quot;Prim&quot;

&#9;&#9;local arm = Instance.new(&quot;ObjectValue&quot;,newPlayer)
&#9;&#9;arm.Name = &quot;Side&quot;

&#9;&#9;local bomb = Instance.new(&quot;ObjectValue&quot;,newPlayer)
&#9;&#9;bomb.Name = &quot;Nade&quot;

&#9;&#9;local perk1 = Instance.new(&quot;StringValue&quot;,newPlayer)
&#9;&#9;perk1.Name = &quot;Perk1&quot;

&#9;&#9;local perk2 = Instance.new(&quot;StringValue&quot;,newPlayer)
&#9;&#9;perk2.Name = &quot;Perk2&quot;

&#9;&#9;local perk3 = Instance.new(&quot;StringValue&quot;,newPlayer)
&#9;&#9;perk3.Name = &quot;Perk3&quot;

&#9;&#9;local ammo = Instance.new(&quot;IntValue&quot;,weap)
&#9;&#9;ammo.Name = &quot;KSAM&quot;

&#9;&#9;newPlayer:WaitForDataReady()
&#9;&#9;local test = newPlayer:LoadInstance(&quot;Save&quot;)
&#9;&#9;if test ~= nil then
&#9;&#9;test.Parent = newPlayer
&#9;&#9;else
&#9;&#9;yo = save:Clone()
&#9;&#9;yo.Parent = newPlayer
&#9;&#9;newPlayer:SaveInstance(&quot;Save&quot;, yo)
&#9;&#9;end

&#9;&#9;while true do
&#9;&#9;&#9;if newPlayer.Character then break end
&#9;&#9;&#9;wait(5)
&#9;&#9;end
&#9;&#9;local humanoid = newPlayer.Character.Humanoid
&#9;&#9;humanoid.Died:connect(function() onHumanoidDied(humanoid, newPlayer) end )
&#9;&#9;newPlayer.Changed:connect(function(property) onPlayerRespawn(property, newPlayer) end )


end

function killstreak(killer)

&#9;if killer then
&#9;&#9;local stats = killer:findFirstChild(&quot;leaderstats&quot;)
&#9;&#9;if stats then
&#9;&#9;&#9;local row = stats:findFirstChild(&quot;Killstreak&quot;)

&#9;&#9;&#9;if row.Value == 1 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS1&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use Throwing Knives&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use Throwing Knives&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = &quot; One Kill!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = &quot; One Kill!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS1&quot;).Value = killer.Rewards:findFirstChild(&quot;KS1&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if row.Value == 3 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS3&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use Bouncing Betties&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use Bouncing Betties&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS3&quot;).Value = killer.Rewards:findFirstChild(&quot;KS3&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if row.Value == 5 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS5&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use Artillery Strike&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use Artillery Strike&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false&#9;&#9;
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS5&quot;).Value = killer.Rewards:findFirstChild(&quot;KS5&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value = killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value + 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if row.Value == 7 or row.Value == 25 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS7&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use M1 Bazooka&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use M1 Bazooka&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS7&quot;).Value = killer.Rewards:findFirstChild(&quot;KS7&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if row.Value == 10 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS10&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use Tomahawk&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use Tomahawk&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS10&quot;).Value = killer.Rewards:findFirstChild(&quot;KS10&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value = killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value + 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if row.Value == 15 or row.Value == 30 or row.Value == 45 or row.Value == 55 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS15&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use Heavy Artillery Strike&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use Heavy Artillery Strike&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS15&quot;).Value = killer.Rewards:findFirstChild(&quot;KS15&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value = killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value + 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if row.Value == 20 or row.Value == 40 or row.Value == 50 or row.Value == 60 then
&#9;&#9;&#9;local scren = ks:Clone()
&#9;&#9;&#9;scren.Name = &quot;KS20&quot;
&#9;&#9;&#9;scren.Parent = killer.PlayerGui
&#9;&#9;&#9;scren:findFirstChild(&quot;Reward&quot;).Text = &quot;Press G with a gun to use Panzerschrek&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;RShadow&quot;).Text = &quot;Press G with a gun to use Panzerschrek&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;Title&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren:findFirstChild(&quot;TShadow&quot;).Text = row.Value.. &quot; Kill Streak!&quot;
&#9;&#9;&#9;scren.Script.Disabled = false
&#9;&#9;&#9;if not killer.Rewards:findFirstChild(scren.Name) then
&#9;&#9;&#9;local hah = Instance.new(&quot;IntValue&quot;,killer.Rewards)
&#9;&#9;&#9;hah.Value = 1
&#9;&#9;&#9;hah.Name = scren.Name
&#9;&#9;&#9;else
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KS20&quot;).Value = killer.Rewards:findFirstChild(&quot;KS20&quot;).Value + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value = killer.Rewards:findFirstChild(&quot;KSAM&quot;).Value + 1
&#9;&#9;&#9;end

&#9;&#9;end

&#9;end

end


game.Players.ChildAdded:connect(onPlayerEntered)

</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX17">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Admin</string>
					<ProtectedString name="Source">function breach()
local p = game.Players:GetChildren()
for i = 1, #p do
if not p[i].PlayerGui:FindFirstChild(&quot;BREACH&quot;) then
game.Lighting.BREACH:Clone().Parent = p[i].PlayerGui
end
end
end

while true do
wait(5)
local shit = workspace:GetChildren()
for i = 1, #shit do
&#9;
&#9;if shit[i]:IsA(&quot;Model&quot;) and shit[i].Name ~= &quot;field&quot; and shit[i].Name ~= &quot;BASE&quot; and shit[i].Name ~= &quot;Fection&quot; and not game.Players:findFirstChild(shit[i].Name) then
&#9;shit[i]:Destroy()
&#9;print(&quot;Model&quot;)
&#9;breach()
&#9;elseif shit[i]:IsA(&quot;Script&quot;) and shit[i].Name ~= &quot;Change_Map&quot; and shit[i].Name ~= &quot;Admin&quot; and shit[i].Name ~= &quot;TEAMNAME&quot; and shit[i].Name ~= &quot;LDRBOARD&quot; and shit[i].Name ~= &quot;HUH?&quot; then
&#9;shit[i]:Destroy()
&#9;print(&quot;Script&quot;)
&#9;breach()
&#9;elseif shit[i]:IsA(&quot;BasePart&quot;) and not shit[i]:findFirstChild(&quot;creator&quot;) and shit[i].Name ~= &quot;Bomb&quot; and shit[i].Name ~= &quot;Box&quot; and shit[i].className ~= &quot;Terrain&quot; then
&#9;shit[i]:Destroy()
&#9;print(&quot;Part&quot;)
&#9;--breach()
&#9;elseif shit[i].className == &quot;Hat&quot; then
&#9;shit[i]:Destroy()
&#9;end

end

local players = game.Players:GetChildren()
for i = 1, #players do
local shit = players[i].Backpack:GetChildren()
for i = 1, #shit do
if not game.Lighting:findFirstChild(shit[i].Name) and not shit[i]:FindFirstChild(&quot;Fire!&quot;) then
shit[i]:Destroy()
breach()
print(&quot;Backpack&quot;)
end
end

if players[i].Character ~= nil then
local shit = players[i].Character:GetChildren()
for i = 1, #shit do
if shit[i].className == &quot;Tool&quot; and not game.Lighting:findFirstChild(shit[i].Name) then
shit[i]:Destroy()
print(&quot;Character&quot;)
breach()
end
end
end
end

local fuckingteams = game.Teams:GetChildren()
for i = 1, #fuckingteams do

&#9;if fuckingteams[i].Name ~= &quot;Allies&quot; and fuckingteams[i].Name ~= &quot;Axis&quot; then
&#9;fuckingteams[i]:Destroy()
&#9;print(&quot;Teams&quot;)
&#9;breach()
&#9;end

end

if not game.Teams:findFirstChild(&quot;Allies&quot;) then
local fuckexploits = Instance.new(&quot;Team&quot;,game.Teams)
fuckexploits.Name = &quot;Allies&quot;
fuckexploits.TeamColor = BrickColor.new(&quot;Bright red&quot;)
print(&quot;Teams&quot;)
breach()
end
if not game.Teams:findFirstChild(&quot;Axis&quot;) then
local fuckexploits = Instance.new(&quot;Team&quot;,game.Teams)
fuckexploits.Name = &quot;Axis&quot;
fuckexploits.TeamColor = BrickColor.new(&quot;Bright blue&quot;)
print(&quot;Teams&quot;)
breach()
end

game.Lighting.Ambient = Color3.new(150/255,150/255,150/255)
game.Lighting.FogEnd = 100000
game.Lighting.FogStart = 0

end
</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX18">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TEAMNAME</string>
				<ProtectedString name="Source">local health = script:findFirstChild(&quot;Health&quot;)
--local height = script:findFirstChild(&quot;Height&quot;)
local rag = script:findFirstChild(&quot;Ragdoll&quot;)
local ashirt = &quot;http://www.roblox.com/asset/?id=20152624&quot;
local gshirt = &quot;http://www.roblox.com/asset/?id=13641225&quot;
local apants = &quot;http://www.roblox.com/asset/?id=20153793&quot;
local gpants = &quot;http://www.roblox.com/asset/?id=13641235&quot;
local intro = script:findFirstChild(&quot;Intro&quot;)
local class = script:findFirstChild(&quot;LOL&quot;)
local allies = game.Teams:findFirstChild(&quot;Allies&quot;)
local axis = game.Teams:findFirstChild(&quot;Axis&quot;)

health.Parent = nil
--height.Parent = nil
rag.Parent = nil
class.Parent = nil
intro.Parent = nil

function spn(NewP) 

&#9;if NewP.PlayerGui:findFirstChild(&quot;LOL&quot;) or not NewP.Character:findFirstChild(&quot;Head&quot;) then return end

&#9;local mesh = NewP.Character.Head:findFirstChild(&quot;Mesh&quot;)
&#9;Part = Instance.new(&quot;Part&quot;) 
&#9;Part.Name = &quot;Fake&quot; 
&#9;mesh:Clone().Parent = Part 
&#9;w = Instance.new(&quot;Weld&quot;) 
&#9;w.Parent = NewP.Character.Head
&#9;w.Part0 = w.Parent 
&#9;w.Part1 = Part 
&#9;Part.FormFactor = 0 
&#9;Part.Size = Vector3.new(2,1,1) 
&#9;Part.Parent = NewP.Character 
&#9;Part.BrickColor = NewP.Character:findFirstChild(&quot;Head&quot;).BrickColor
&#9;NewP.Character.Head.Transparency = 1
&#9;mesh:Clone().Parent = NewP.Character.Head

&#9;local heal 
&#9;heal = health:Clone()
&#9;heal.Disabled = false
&#9;heal.Parent = NewP.Character.Torso

&#9;local lol 
&#9;lol = rag:Clone()
&#9;lol.Disabled = false
&#9;lol.Parent = NewP.Character
&#9;lol.Archivable = false

--[[&#9;local lolgha 
&#9;lolgha = height:Clone()
&#9;lolgha.Parent = NewP.Character
&#9;lolgha.Disabled = false]]

&#9;local hey = Instance.new(&quot;IntValue&quot;,NewP.Character)

&#9;local heg = Instance.new(&quot;Model&quot;,NewP.Character)
&#9;heg.Name = &quot;ret&quot;
&#9;
&#9;local heg = Instance.new(&quot;IntValue&quot;,NewP.Character)
&#9;heg.Name = &quot;gun&quot;

&#9;local DARN = class:Clone()
&#9;DARN.Parent = NewP.PlayerGui
&#9;DARN.WORK.Disabled = false
&#9;DARN.Archivable = false

&#9;if not NewP:findFirstChild(&quot;Settings&quot;) then

&#9;&#9;local yesh = intro:Clone()
&#9;&#9;yesh.Parent = NewP.PlayerGui

&#9;elseif NewP.Settings.Value then

&#9;&#9;wait(1)

&#9;&#9;c = NewP.Character:GetChildren()
&#9;&#9;for i = 1, #c do
&#9;&#9;&#9;if c[i].className == &quot;Pants&quot; or c[i].Name == &quot;Health&quot; or c[i].className == &quot;Shirt&quot; or c[i].Name == &quot;RobloxTeam&quot; then
&#9;&#9;&#9;c[i]:Destroy() 
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;wait(.1)

&#9;&#9;local cloth = Instance.new(&quot;Shirt&quot;,NewP.Character)
&#9;&#9;local pant = Instance.new(&quot;Pants&quot;,NewP.Character)

&#9;&#9;if NewP.TeamColor == allies.TeamColor then
&#9;&#9;&#9;
&#9;&#9;cloth.ShirtTemplate = ashirt
&#9;&#9;pant.PantsTemplate = apants

&#9;&#9;end

&#9;&#9;if NewP.TeamColor == axis.TeamColor then

&#9;&#9;cloth.ShirtTemplate = gshirt
&#9;&#9;pant.PantsTemplate = gpants

&#9;&#9;end

&#9;end

&#9;local players = game.Players:GetChildren()

&#9;local big = Instance.new(&quot;BillboardGui&quot;)
&#9;big.Size = UDim2.new( 1.0, 0, 1.0, 0 )
&#9;big.StudsOffset = Vector3.new( 0, 2, 0 )

&#9;local name = Instance.new(&quot;TextLabel&quot;,big)
&#9;name.Position = UDim2.new( 0.5, 0, 0, 0 )
&#9;name.FontSize = 3
&#9;name.BackgroundTransparency = 1
&#9;name.Size = UDim2.new(0, 0, 0, 0 )
&#9;name.TextColor3 = Color3.new(0, 25, 0)

&#9;for i = 1, #players do

&#9;&#9;if players[i].TeamColor == NewP.TeamColor then

&#9;&#9;&#9;if players[i].Character:findFirstChild(&quot;Head&quot;) and players[i] ~= NewP then

&#9;&#9;&#9;&#9;local bg = big:Clone()
&#9;&#9;&#9;&#9;bg.Adornee = players[i].Character:findFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;bg.Parent = NewP.PlayerGui

&#9;&#9;&#9;&#9;local nae = bg.TextLabel
&#9;&#9;&#9;&#9;nae.Text = players[i].Name

&#9;&#9;&#9;end

&#9;&#9;&#9;if NewP.Character:findFirstChild(&quot;Head&quot;) then

&#9;&#9;&#9;&#9;local bg = big:Clone()
&#9;&#9;&#9;&#9;bg.Adornee = NewP.Character:findFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;bg.Parent = players[i].PlayerGui

&#9;&#9;&#9;&#9;local nae = bg.TextLabel
&#9;&#9;&#9;&#9;nae.Text = NewP.Name

&#9;&#9;&#9;end

&#9;&#9;end

&#9;end

&#9;local bomb = workspace.Fection:GetChildren()
&#9;for i = 1, #bomb do
&#9;&#9;if bomb[i]:findFirstChild(&quot;Trigger&quot;) and bomb[i]:findFirstChild(&quot;Handle&quot;) then

&#9;&#9;&#9;if bomb[i]:findFirstChild(&quot;creator&quot;) and bomb[i].creator.Value ~= nil then

&#9;&#9;&#9;&#9;if bomb[i].creator.Value.TeamColor == NewP.TeamColor then
&#9;&#9;&#9;&#9;local big = Instance.new(&quot;BillboardGui&quot;,NewP.PlayerGui)
&#9;&#9;&#9;&#9;big.Adornee = bomb[i].Handle
&#9;&#9;&#9;&#9;big.Size = UDim2.new( 1.0, 0, 1.0, 0 )
&#9;&#9;&#9;&#9;big.StudsOffset = Vector3.new( 0, 1, 0 )

&#9;&#9;&#9;&#9;local name = Instance.new(&quot;TextLabel&quot;,big)
&#9;&#9;&#9;&#9;name.Position = UDim2.new( 0.5, 0, 0, 0 )
&#9;&#9;&#9;&#9;name.FontSize = 3
&#9;&#9;&#9;&#9;name.BackgroundTransparency = 1
&#9;&#9;&#9;&#9;name.Size = UDim2.new(0, 0, 0, 0 )
&#9;&#9;&#9;&#9;name.TextColor3 = Color3.new(0, 25, 0)
&#9;&#9;&#9;&#9;name.Text = bomb[i].creator.Value.Name.. &quot;&apos;s betty&quot;
&#9;&#9;&#9;&#9;--[[elseif NewP.TeamColor ~= bomb[i].Handle.BrickColor and NewP.Perk1.Value == &quot;Bomb Squad&quot; then
&#9;&#9;&#9;&#9;local big = Instance.new(&quot;BillboardGui&quot;,NewP.PlayerGui)
&#9;&#9;&#9;&#9;big.Adornee = bomb[i].Handle
&#9;&#9;&#9;&#9;big.Size = UDim2.new( 1.0, 0, 1.0, 0 )
&#9;&#9;&#9;&#9;big.StudsOffset = Vector3.new( 0, 1, 0 )

&#9;&#9;&#9;&#9;local name = Instance.new(&quot;TextLabel&quot;,big)
&#9;&#9;&#9;&#9;name.Position = UDim2.new( 0.5, 0, 0, 0 )
&#9;&#9;&#9;&#9;name.FontSize = 3
&#9;&#9;&#9;&#9;name.BackgroundTransparency = 1
&#9;&#9;&#9;&#9;name.Size = UDim2.new(0, 0, 0, 0 )
&#9;&#9;&#9;&#9;name.Text = &quot;!&quot;
&#9;&#9;&#9;&#9;name.TextColor3 = Color3.new(50, 0, 0)]]
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;bomb[i]:Destroy()
&#9;&#9;&#9;end

&#9;&#9;end
&#9;end

end

function oc(msg,speaker)

if string.sub(string.lower(msg),1,5) == &quot;join/&quot; then
local theteam = nil
local tnum = 0
local pls = game.Players:GetChildren()
local blue = 0
local red = 0

for i = 1, #pls do
if pls[i].TeamColor == BrickColor.new(&quot;Bright red&quot;) then
red = red + 1
else
blue = blue + 1
end
end

if speaker.TeamColor == BrickColor.new(&quot;Bright red&quot;) and (red-blue) &lt;= 0 then game.Lighting.Unbalance:Clone().Parent = speaker.PlayerGui return end
if speaker.TeamColor == BrickColor.new(&quot;Bright blue&quot;) and (blue-red) &lt;= 0 then game.Lighting.Unbalance:Clone().Parent = speaker.PlayerGui return end

local c = game.Teams:GetChildren()
for i =1,#c do
if c[i].className == &quot;Team&quot; then
if string.find(string.lower(c[i].Name),string.sub(string.lower(msg),6)) == 1 then
theteam = c[i]
tnum = tnum + 1
end end end

if tnum == 1 then
speaker.TeamColor = theteam.TeamColor
if speaker.Character and speaker.Character:findFirstChild(&quot;Head&quot;) then
speaker.Character:findFirstChild(&quot;Head&quot;):BreakJoints()
end end

end

end

function A(new) 
new.Changed:connect(function(N) if N == &quot;Character&quot; then spn(new) end end) 
new.Chatted:connect(function(msg) oc(msg,new) end)
end 

game.Players.ChildAdded:connect(A) 
local pls = game.Players:GetChildren()
for i = 1, #pls do
if not pls[i].PlayerGui:findFirstChild(&quot;LOL&quot;) then
A(pls[i])
end
end

if not workspace:findFirstChild(&quot;HUH?&quot;) then
workspace:ClearAllChildren()
end 
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Model" referent="RBX19">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">BASE</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="Part" referent="RBX20">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">102</int>
					<CoordinateFrame name="CFrame">
						<X>18</X>
						<Y>0</Y>
						<Z>-5</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.899999976</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>35.6000023</Y>
						<Z>70</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX21">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">102</int>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>-41</Z>
						<R00>-0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.899999976</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>35.6000023</Y>
						<Z>38</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpawnLocation" referent="RBX22">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1001</int>
					<CoordinateFrame name="CFrame">
						<X>-14</X>
						<Y>-17.2000008</Y>
						<Z>-5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<int name="Duration">0</int>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">SpawnLocation</string>
					<bool name="Neutral">true</bool>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int name="TeamColor">21</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>6</X>
						<Y>1.20000005</Y>
						<Z>6</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX23">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>-18.3999996</Y>
						<Z>-5</Z>
						<R00>-0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Floor</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>74</X>
						<Y>1.20000005</Y>
						<Z>38</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX24">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">102</int>
					<CoordinateFrame name="CFrame">
						<X>-18</X>
						<Y>0</Y>
						<Z>-5</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.899999976</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>35.6000023</Y>
						<Z>70</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpawnLocation" referent="RBX25">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1001</int>
					<CoordinateFrame name="CFrame">
						<X>-14</X>
						<Y>-17.2000008</Y>
						<Z>-37</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<int name="Duration">0</int>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">SpawnLocation</string>
					<bool name="Neutral">true</bool>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int name="TeamColor">21</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>6</X>
						<Y>1.20000005</Y>
						<Z>6</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpawnLocation" referent="RBX26">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1001</int>
					<CoordinateFrame name="CFrame">
						<X>14</X>
						<Y>-17.2000008</Y>
						<Z>-37</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<int name="Duration">0</int>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">SpawnLocation</string>
					<bool name="Neutral">true</bool>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int name="TeamColor">21</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>6</X>
						<Y>1.20000005</Y>
						<Z>6</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpawnLocation" referent="RBX27">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1001</int>
					<CoordinateFrame name="CFrame">
						<X>-14</X>
						<Y>-17.2000008</Y>
						<Z>27</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>-0</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<int name="Duration">0</int>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">SpawnLocation</string>
					<bool name="Neutral">true</bool>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int name="TeamColor">23</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>6</X>
						<Y>1.20000005</Y>
						<Z>6</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpawnLocation" referent="RBX28">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1001</int>
					<CoordinateFrame name="CFrame">
						<X>14</X>
						<Y>-17.2000008</Y>
						<Z>27</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>-0</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<int name="Duration">0</int>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">SpawnLocation</string>
					<bool name="Neutral">true</bool>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int name="TeamColor">23</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>6</X>
						<Y>1.20000005</Y>
						<Z>6</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX29">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>18.3999996</Y>
						<Z>-5</Z>
						<R00>-0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>74</X>
						<Y>1.20000005</Y>
						<Z>38</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX30">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">102</int>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>31</Z>
						<R00>-0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.899999976</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>35.6000023</Y>
						<Z>38</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpawnLocation" referent="RBX31">
				<Properties>
					<bool name="AllowTeamChangeOnTouch">false</bool>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1001</int>
					<CoordinateFrame name="CFrame">
						<X>14</X>
						<Y>-17.2000008</Y>
						<Z>-5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<int name="Duration">0</int>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">SpawnLocation</string>
					<bool name="Neutral">true</bool>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int name="TeamColor">21</int>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>6</X>
						<Y>1.20000005</Y>
						<Z>6</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX32">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Fection</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="Model" referent="RBX33">
				<Properties>
					<CoordinateFrame name="ModelInPrimary">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">FG42</string>
					<Ref name="PrimaryPart">null</Ref>
				</Properties>
				<Item class="Part" referent="RBX34">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">1009</int>
						<CoordinateFrame name="CFrame">
							<X>-20.5400009</X>
							<Y>-13.170001</Y>
							<Z>-136.230011</Z>
							<R00>0</R00>
							<R01>1</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0</R11>
							<R12>1</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Flame</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>0.0117438063</X>
							<Y>-0.0714902505</Y>
							<Z>0.0190009885</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.200000003</X>
							<Y>0.200000003</Y>
							<Z>0.200000003</Z>
						</Vector3>
					</Properties>
					<Item class="Smoke" referent="RBX35">
						<Properties>
							<Color3 name="Color">4294940979</Color3>
							<bool name="Enabled">false</bool>
							<string name="Name">Smoke1</string>
							<float name="opacity_xml">0.100000001</float>
							<float name="riseVelocity_xml">15</float>
							<float name="size_xml">0.100000001</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX36">
						<Properties>
							<bool name="Looped">false</bool>
							<string name="Name">Fire</string>
							<float name="Pitch">1.60000002</float>
							<bool name="PlayOnRemove">false</bool>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=2692806</url></Content>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX37">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-24.8600006</X>
							<Y>-13.1730003</Y>
							<Z>-136.052002</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">John</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0177333094</X>
							<Y>-0.0304488875</Y>
							<Z>-0.00274171028</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX38">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>-0.100000001</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.528999984</Y>
								<Z>0.400000006</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="ScreenGui" referent="RBX39">
						<Properties>
							<string name="Name">Key</string>
						</Properties>
						<Item class="TextLabel" referent="RBX40">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">5</token>
								<string name="Name">Weapon</string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-200</XO>
									<YS>0.700000048</YS>
									<YO>-20</YO>
								</UDim2>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>400</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Press &amp; Hold V for FG42 Clip/Mag : [16] Ammo : [60]</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX41">
							<Properties>
								<string name="Name">Ammo</string>
								<int name="Value">16</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX42">
							<Properties>
								<string name="Name">Clip</string>
								<int name="Value">60</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Part" referent="RBX43">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-23.3240013</X>
							<Y>-13.6290007</Y>
							<Z>-136.110001</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Mag</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0111660622</X>
							<Y>-0.0443483964</Y>
							<Z>0.00127971591</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX44">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.575999975</X>
								<Y>0.0960000008</Y>
								<Z>0.287999988</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX45">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-20.512001</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Muzzle</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0116666947</X>
							<Y>-0.0717676729</Y>
							<Z>0.0191209875</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX46">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0719999969</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX47">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-23.3240013</X>
							<Y>-13.2930002</Y>
							<Z>-136.110001</Z>
							<R00>3.05210706e-005</R00>
							<R01>-7.37011433e-005</R01>
							<R02>-1</R02>
							<R10>-0.000145011116</R10>
							<R11>1</R11>
							<R12>-7.36564398e-005</R12>
							<R20>0.99999994</R20>
							<R21>0.000145015772</R21>
							<R22>3.05079157e-005</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0144030321</X>
							<Y>-0.0448859595</Y>
							<Z>0.00400585728</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX48">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.124799997</X>
								<Y>0.0960000008</Y>
								<Z>0.316800028</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX49">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-23.7010002</X>
							<Y>-13.1730003</Y>
							<Z>-135.769012</Z>
							<R00>1.22338533e-005</R00>
							<R01>0.965930223</R01>
							<R02>0.258802444</R02>
							<R10>1.00000012</R10>
							<R11>-3.70442867e-005</R11>
							<R12>9.06810164e-005</R12>
							<R20>9.7181648e-005</R20>
							<R21>0.258802503</R21>
							<R22>-0.965930402</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0140420115</X>
							<Y>-0.0437878594</Y>
							<Z>0.00304026296</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX50">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.239999995</Y>
								<Z>0.479999989</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX51">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-23.4920006</X>
							<Y>-13.1730003</Y>
							<Z>-136.138</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.016016949</X>
							<Y>-0.0432314202</Y>
							<Z>0.00413995143</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX52">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.192000002</Y>
								<Z>1.296</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX53">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-22.7240009</X>
							<Y>-13.1730003</Y>
							<Z>-136.158005</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0148693826</X>
							<Y>-0.0506137833</Y>
							<Z>0.0079992516</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX54">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.00999999978</Y>
								<Z>0.270000011</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.181500003</X>
								<Y>0.180000007</Y>
								<Z>0.800000012</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX55">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-24.9560013</X>
							<Y>-13.1730003</Y>
							<Z>-135.740005</Z>
							<R00>1.25914812e-005</R00>
							<R01>1</R01>
							<R02>2.1448941e-006</R02>
							<R10>1.00000012</R10>
							<R11>-1.26808882e-005</R11>
							<R12>9.15462151e-005</R12>
							<R20>9.15490091e-005</R20>
							<R21>2.14704778e-006</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.015930837</X>
							<Y>-0.0317093916</Y>
							<Z>-0.00326574408</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX56">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.384000003</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX57">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-22.7240009</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0153218359</X>
							<Y>-0.0501060225</Y>
							<Z>0.00800885726</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX58">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.270000011</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.400000006</X>
								<Y>0.800000012</Y>
								<Z>0.187199995</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX59">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-22.6520004</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0152033409</X>
							<Y>-0.0508107692</Y>
							<Z>0.00837069377</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX60">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX61">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-25.1720009</X>
							<Y>-13.1730003</Y>
							<Z>-135.716003</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.016137125</X>
							<Y>-0.0297637638</Y>
							<Z>-0.00435366994</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX62">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX63">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-23.3000011</X>
							<Y>-13.1730003</Y>
							<Z>-136.374008</Z>
							<R00>3.05210706e-005</R00>
							<R01>-7.37011433e-005</R01>
							<R02>-1</R02>
							<R10>-0.000145011116</R10>
							<R11>1</R11>
							<R12>-7.36564398e-005</R12>
							<R20>0.99999994</R20>
							<R21>0.000145015772</R21>
							<R22>3.05079157e-005</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0171784759</X>
							<Y>-0.0434517488</Y>
							<Z>0.0051356582</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX64">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.143999994</X>
								<Y>0.0299999993</Y>
								<Z>0.0399999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX65">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-22.5080013</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0149651552</X>
							<Y>-0.0522204041</Y>
							<Z>0.00909357984</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX66">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX67">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-23.4440002</X>
							<Y>-13.1730003</Y>
							<Z>-135.994003</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0150324851</X>
							<Y>-0.044716537</Y>
							<Z>0.00436140131</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX68">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.0960000008</Y>
								<Z>0.720000029</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX69">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-20.9720001</X>
							<Y>-13.1730003</Y>
							<Z>-136.378006</Z>
							<R00>-1</R00>
							<R01>2.98023224e-008</R01>
							<R02>-3.05133872e-005</R02>
							<R10>2.98023224e-008</R10>
							<R11>-1</R11>
							<R12>-9.15471464e-005</R12>
							<R20>-3.05159483e-005</R20>
							<R21>-9.15494747e-005</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0133632515</X>
							<Y>-0.0662076399</Y>
							<Z>0.0168272071</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX70">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0599999987</X>
								<Y>0.0480000004</Y>
								<Z>0.0900000036</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX71">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-20.9960003</X>
							<Y>-13.1730003</Y>
							<Z>-136.31601</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0130109899</X>
							<Y>-0.0664125904</Y>
							<Z>0.0166984126</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX72">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.239999995</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX73">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-20.8760014</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0122689549</X>
							<Y>-0.0681968331</Y>
							<Z>0.017288994</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX74">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0960000008</Y>
								<Z>0.158400014</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX75">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-20.8520012</X>
							<Y>-13.1730003</Y>
							<Z>-136.31601</Z>
							<R00>-2.98023224e-008</R00>
							<R01>-6.4028427e-010</R01>
							<R02>-1</R02>
							<R10>1</R10>
							<R11>6.10281713e-005</R11>
							<R12>2.98023224e-008</R12>
							<R20>6.1030034e-005</R20>
							<R21>-1</R21>
							<R22>-3.43425199e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0127732679</X>
							<Y>-0.0678213537</Y>
							<Z>0.0174210779</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX76">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX77">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-25.1720009</X>
							<Y>-13.1730003</Y>
							<Z>-136.028</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0180976819</X>
							<Y>-0.027563788</Y>
							<Z>-0.00431189733</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX78">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.575999975</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX79">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-20.9770012</X>
							<Y>-13.1730003</Y>
							<Z>-136.465012</Z>
							<R00>-1.26388622e-005</R00>
							<R01>3.05622816e-005</R01>
							<R02>1</R02>
							<R10>-0.000145014375</R10>
							<R11>-1</R11>
							<R12>3.04877758e-005</R12>
							<R20>1</R20>
							<R21>-0.000145016704</R21>
							<R22>1.26467785e-005</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0139159076</X>
							<Y>-0.0655512363</Y>
							<Z>0.016815871</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX80">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=3270017</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0960000008</X>
								<Y>0.0960000008</Y>
								<Z>0.384000003</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX81">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-21.1400013</X>
							<Y>-13.1730003</Y>
							<Z>-136.31601</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0132491756</X>
							<Y>-0.065002501</Y>
							<Z>0.0159752406</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX82">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX83">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-21.3080006</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29512225e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15476121e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0129828323</X>
							<Y>-0.0639674515</Y>
							<Z>0.0151195442</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX84">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.815999985</Y>
								<Z>0.143999994</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX85">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-21.5000019</X>
							<Y>-13.1730003</Y>
							<Z>-136.110001</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0125456266</X>
							<Y>-0.0629342496</Y>
							<Z>0.0141392043</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX86">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>1.24800003</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX87">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-24.9560013</X>
							<Y>-13.1730003</Y>
							<Z>-136.340012</Z>
							<R00>3.05473804e-005</R00>
							<R01>1</R01>
							<R02>-2.14378815e-006</R02>
							<R10>-1</R10>
							<R11>3.04728746e-005</R11>
							<R12>-0.000134703703</R12>
							<R20>-0.000134706963</R20>
							<R21>2.1525193e-006</R21>
							<R22>0.99999994</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0197017211</X>
							<Y>-0.0274783634</Y>
							<Z>-0.00318517676</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX88">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.384000003</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX89">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-22.7960014</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0154408459</X>
							<Y>-0.0494011194</Y>
							<Z>0.00764730107</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX90">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX91">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-22.4360008</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0148461442</X>
							<Y>-0.05292546</Y>
							<Z>0.00945523102</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX92">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.263999999</X>
								<Y>0.0480000004</Y>
								<Z>0.158400014</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX93">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-22.2200012</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0144898444</X>
							<Y>-0.0550395548</Y>
							<Z>0.0105400486</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX94">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.216000006</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX95">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-22.3640003</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0147276493</X>
							<Y>-0.053630054</Y>
							<Z>0.00981697161</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX96">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.216000006</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX97">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-24.6200008</X>
							<Y>-13.1730003</Y>
							<Z>-135.908005</Z>
							<R00>1.25914812e-005</R00>
							<R01>1</R01>
							<R02>2.1448941e-006</R02>
							<R10>1.00000012</R10>
							<R11>-1.26808882e-005</R11>
							<R12>9.15462151e-005</R12>
							<R20>9.15490091e-005</R20>
							<R21>2.14704778e-006</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0164319165</X>
							<Y>-0.0338138267</Y>
							<Z>-0.00155573688</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX98">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.287999988</Y>
								<Z>0.239999995</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX99">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-25.1720009</X>
							<Y>-13.1730003</Y>
							<Z>-136.340012</Z>
							<R00>-3.05324793e-005</R00>
							<R01>-1</R01>
							<R02>-2.29488942e-005</R02>
							<R10>1</R10>
							<R11>-3.04877758e-005</R11>
							<R12>-4.83868644e-005</R12>
							<R20>4.8390124e-005</R20>
							<R21>-2.29529687e-005</R21>
							<R22>0.99999994</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.020057803</X>
							<Y>-0.0253632311</Y>
							<Z>-0.00427081529</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX100">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX101">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-24.4520016</X>
							<Y>-13.1730003</Y>
							<Z>-136.172012</Z>
							<R00>4.47034836e-008</R00>
							<R01>-2.56113708e-009</R01>
							<R02>1</R02>
							<R10>-1</R10>
							<R11>0.000122062862</R11>
							<R12>-2.98023224e-008</R12>
							<R20>-0.00012206519</R20>
							<R21>-1</R21>
							<R22>1.57160684e-009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.0178139172</X>
							<Y>-0.0335967839</Y>
							<Z>-0.000676393509</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX102">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.287999988</Y>
								<Z>0.624000013</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX103">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-24.1160011</X>
							<Y>-13.1730003</Y>
							<Z>-136.230011</Z>
							<R00>-1.25914812e-005</R00>
							<R01>-1</R01>
							<R02>2.29493598e-005</R02>
							<R10>-1.00000012</R10>
							<R11>1.26808882e-005</R11>
							<R12>9.15466808e-005</R12>
							<R20>-9.15499404e-005</R20>
							<R21>-2.29532016e-005</R21>
							<R22>-1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0.00721622864</X>
							<Y>-0.00624482473</Y>
							<Z>-0.00979981851</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0.017620787</X>
							<Y>-0.0364797488</Y>
							<Z>0.00101853092</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX104">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.620000005</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.312000006</X>
								<Y>1.29999995</Y>
								<Z>0.200000003</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Model" referent="RBX105">
				<Properties>
					<CoordinateFrame name="ModelInPrimary">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">FG42</string>
					<Ref name="PrimaryPart">null</Ref>
				</Properties>
				<Item class="Part" referent="RBX106">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">1009</int>
						<CoordinateFrame name="CFrame">
							<X>-31.637001</X>
							<Y>-13.9460011</Y>
							<Z>-147.864014</Z>
							<R00>0.914470196</R00>
							<R01>0.362248451</R01>
							<R02>0.180334046</R02>
							<R10>-0.0689220279</R10>
							<R11>-0.299705565</R11>
							<R12>0.95153904</R12>
							<R20>0.398740649</R20>
							<R21>-0.882583022</R21>
							<R22>-0.249104872</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Flame</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>-0.280688763</X>
							<Y>4.00639915</Y>
							<Z>6.89779615</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.200000003</X>
							<Y>0.200000003</Y>
							<Z>0.200000003</Z>
						</Vector3>
					</Properties>
					<Item class="Smoke" referent="RBX107">
						<Properties>
							<Color3 name="Color">4294940979</Color3>
							<bool name="Enabled">false</bool>
							<string name="Name">Smoke1</string>
							<float name="opacity_xml">0.100000001</float>
							<float name="riseVelocity_xml">15</float>
							<float name="size_xml">0.100000001</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX108">
						<Properties>
							<bool name="Looped">false</bool>
							<string name="Name">Fire</string>
							<float name="Pitch">1.60000002</float>
							<bool name="PlayOnRemove">false</bool>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=2692806</url></Content>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX109">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-33.0400009</X>
							<Y>-12.6660004</Y>
							<Z>-143.979004</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">John</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-6.82967663</X>
							<Y>3.08924198</Y>
							<Z>5.13606501</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX110">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>-0.100000001</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.528999984</Y>
								<Z>0.400000006</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="ScreenGui" referent="RBX111">
						<Properties>
							<string name="Name">Key</string>
						</Properties>
						<Item class="TextLabel" referent="RBX112">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">5</token>
								<string name="Name">Weapon</string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-200</XO>
									<YS>0.700000048</YS>
									<YO>-20</YO>
								</UDim2>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>400</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Press &amp; Hold V for FG42 Clip/Mag : [0] Ammo : [122]</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX113">
							<Properties>
								<string name="Name">Ammo</string>
								<int name="Value">0</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX114">
							<Properties>
								<string name="Name">Clip</string>
								<int name="Value">122</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Part" referent="RBX115">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.618</X>
							<Y>-13.5560007</Y>
							<Z>-145.244003</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Mag</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-6.07131863</X>
							<Y>3.72190762</Y>
							<Z>4.84309101</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX116">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.575999975</X>
								<Y>0.0960000008</Y>
								<Z>0.287999988</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX117">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-31.6270008</X>
							<Y>-13.9570007</Y>
							<Z>-147.888</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Muzzle</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.250156403</X>
							<Y>4.00935078</Y>
							<Z>6.90725946</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX118">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0719999969</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX119">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.557003</X>
							<Y>-13.236001</Y>
							<Z>-145.328003</Z>
							<R00>0.914455056</R00>
							<R01>0.180439949</R01>
							<R02>-0.362233847</R02>
							<R10>-0.0690691471</R10>
							<R11>0.951550961</R11>
							<R12>0.299633384</R12>
							<R20>0.398749828</R20>
							<R21>-0.248982012</R21>
							<R22>0.882613599</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-4.92457294</X>
							<Y>3.48328376</Y>
							<Z>5.52843857</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX120">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.124799997</X>
								<Y>0.0960000008</Y>
								<Z>0.316800028</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX121">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.3610001</X>
							<Y>-13.0330009</Y>
							<Z>-144.889008</Z>
							<R00>0.180427358</R00>
							<R01>0.586567223</R01>
							<R02>-0.789547384</R02>
							<R10>0.951528609</R10>
							<R11>-0.307367057</R11>
							<R12>-0.0109043568</R12>
							<R20>-0.249076962</R20>
							<R21>-0.749309421</R21>
							<R22>-0.613592923</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-5.67415571</X>
							<Y>2.29458904</Y>
							<Z>6.34982395</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX122">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.239999995</Y>
								<Z>0.479999989</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX123">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.6230011</X>
							<Y>-13.0700006</Y>
							<Z>-145.221008</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-4.70456028</X>
							<Y>3.47487926</Y>
							<Z>5.6246438</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX124">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.192000002</Y>
								<Z>1.296</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX125">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-32.3620033</X>
							<Y>-13.2990007</Y>
							<Z>-145.906006</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-3.56460881</X>
							<Y>3.59903145</Y>
							<Z>5.9648056</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX126">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.00999999978</Y>
								<Z>0.270000011</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.181500003</X>
								<Y>0.180000007</Y>
								<Z>0.800000012</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX127">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-32.7890015</X>
							<Y>-12.6590004</Y>
							<Z>-143.770004</Z>
							<R00>0.180422351</R00>
							<R01>0.362248152</R01>
							<R02>-0.91445291</R02>
							<R10>0.951528907</R10>
							<R11>-0.299717724</R11>
							<R12>0.0690084994</R12>
							<R20>-0.24907954</R20>
							<R21>-0.882579029</R21>
							<R22>-0.398765385</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-7.53302813</X>
							<Y>2.09834051</Y>
							<Z>5.78928232</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX128">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.384000003</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX129">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-32.4280014</X>
							<Y>-13.2940006</Y>
							<Z>-145.935013</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-3.43416452</X>
							<Y>3.82600355</Y>
							<Z>5.80288029</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX130">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.270000011</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.400000006</X>
								<Y>0.800000012</Y>
								<Z>0.187199995</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX131">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.4020004</X>
							<Y>-13.3150005</Y>
							<Z>-145.998001</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-3.33057761</X>
							<Y>3.83193398</Y>
							<Z>5.83884144</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX132">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX133">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-32.8450012</X>
							<Y>-12.5960007</Y>
							<Z>-143.570007</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-7.88731432</X>
							<Y>2.00485992</Y>
							<Z>5.73538446</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX134">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX135">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.769001</X>
							<Y>-13.111001</Y>
							<Z>-145.484009</Z>
							<R00>0.914455056</R00>
							<R01>0.180439949</R01>
							<R02>-0.362233847</R02>
							<R10>-0.0690691471</R10>
							<R11>0.951550961</R11>
							<R12>0.299633384</R12>
							<R20>0.398749828</R20>
							<R21>-0.248982012</R21>
							<R22>0.882613599</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-4.00217438</X>
							<Y>4.23180485</Y>
							<Z>5.19191217</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX136">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.143999994</X>
								<Y>0.0299999993</Y>
								<Z>0.0399999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX137">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.3500023</X>
							<Y>-13.3590002</Y>
							<Z>-146.125</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-3.12332249</X>
							<Y>3.84386921</Y>
							<Z>5.91072845</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX138">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX139">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.4740028</X>
							<Y>-13.0940008</Y>
							<Z>-145.206009</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-4.89648628</X>
							<Y>3.02518749</Y>
							<Z>5.97214937</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX140">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.0960000008</Y>
								<Z>0.720000029</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX141">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-31.9300022</X>
							<Y>-13.809001</Y>
							<Z>-147.541</Z>
							<R00>-0.362276345</R00>
							<R01>-0.180417776</R01>
							<R02>0.914442599</R02>
							<R10>0.299707711</R10>
							<R11>-0.951532662</R11>
							<R12>-0.0689999759</R12>
							<R20>0.882570863</R20>
							<R21>0.249068379</R21>
							<R22>0.398790419</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.643437386</X>
							<Y>4.4399519</Y>
							<Z>6.3429842</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX142">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0599999987</X>
								<Y>0.0480000004</Y>
								<Z>0.0900000036</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX143">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-31.8810024</X>
							<Y>-13.8060007</Y>
							<Z>-147.494003</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.791042805</X>
							<Y>4.24144125</Y>
							<Z>6.47115707</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX144">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.239999995</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX145">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-31.7590008</X>
							<Y>-13.8480005</Y>
							<Z>-147.56601</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.775039673</X>
							<Y>3.97912264</Y>
							<Z>6.72520542</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX146">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0960000008</Y>
								<Z>0.158400014</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX147">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-31.8290024</X>
							<Y>-13.8490009</Y>
							<Z>-147.622009</Z>
							<R00>0.180389866</R00>
							<R01>-0.914459229</R01>
							<R02>-0.362248451</R02>
							<R10>0.951534808</R10>
							<R11>0.0689800978</R11>
							<R12>0.299705565</R12>
							<R20>-0.249080539</R20>
							<R21>-0.398755878</R21>
							<R22>0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.58397007</X>
							<Y>4.25351334</Y>
							<Z>6.54284048</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX148">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX149">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-33.1310005</X>
							<Y>-12.5740004</Y>
							<Z>-143.694</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-7.32207203</X>
							<Y>2.98780489</Y>
							<Z>5.03426695</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX150">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.575999975</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX151">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.0100021</X>
							<Y>-13.8010006</Y>
							<Z>-147.571014</Z>
							<R00>0.914439499</R00>
							<R01>-0.18045561</R01>
							<R02>0.362265497</R02>
							<R10>-0.0690562278</R10>
							<R11>-0.951538086</R11>
							<R12>-0.299677402</R12>
							<R20>0.398787975</R20>
							<R21>0.2490201</R21>
							<R22>-0.882585526</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.493421555</X>
							<Y>4.7117157</Y>
							<Z>6.14662743</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX152">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=3270017</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0960000008</X>
								<Y>0.0960000008</Y>
								<Z>0.384000003</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX153">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-31.9330006</X>
							<Y>-13.7630005</Y>
							<Z>-147.367004</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.998206139</X>
							<Y>4.22950649</Y>
							<Z>6.39930725</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX154">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX155">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-31.9150009</X>
							<Y>-13.7180004</Y>
							<Z>-147.185013</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.0690022409</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783743</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-1.39670396</X>
							<Y>3.94333625</Y>
							<Z>6.50956964</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX156">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.815999985</Y>
								<Z>0.143999994</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX157">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-31.8750019</X>
							<Y>-13.6690006</Y>
							<Z>-146.96701</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-1.890275</X>
							<Y>3.54936814</Y>
							<Z>6.68344879</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX158">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>1.24800003</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX159">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-33.3380013</X>
							<Y>-12.6170006</Y>
							<Z>-144.009003</Z>
							<R00>-0.180446148</R00>
							<R01>0.362255931</R01>
							<R02>0.914445043</R02>
							<R10>-0.951538801</R10>
							<R11>-0.299676687</R11>
							<R12>-0.069049567</R12>
							<R20>0.249024227</R20>
							<R21>-0.882589757</R21>
							<R22>0.398776084</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-6.44608927</X>
							<Y>3.98873448</Y>
							<Z>4.44084454</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX160">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.384000003</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX161">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.4540024</X>
							<Y>-13.2720003</Y>
							<Z>-145.871002</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-3.53774095</X>
							<Y>3.81999922</Y>
							<Z>5.76699162</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX162">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX163">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.3240013</X>
							<Y>-13.3800011</Y>
							<Z>-146.189011</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-3.0198369</X>
							<Y>3.84982753</Y>
							<Z>5.94662285</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX164">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.263999999</X>
								<Y>0.0480000004</Y>
								<Z>0.158400014</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX165">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.2460022</X>
							<Y>-13.4450006</Y>
							<Z>-146.380005</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-2.70882177</X>
							<Y>3.86776662</Y>
							<Z>6.05447102</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX166">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.216000006</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX167">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.2980003</X>
							<Y>-13.4020004</Y>
							<Z>-146.253006</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-2.91598582</X>
							<Y>3.85583186</Y>
							<Z>5.98262119</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX168">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.216000006</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX169">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-32.821003</X>
							<Y>-12.7480001</Y>
							<Z>-144.133011</Z>
							<R00>0.180422351</R00>
							<R01>0.362248152</R01>
							<R02>-0.91445291</R02>
							<R10>0.951528907</R10>
							<R11>-0.299717724</R11>
							<R12>0.0690084994</R12>
							<R20>-0.24907954</R20>
							<R21>-0.882579029</R21>
							<R22>-0.398765385</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-6.74521112</X>
							<Y>2.65549135</Y>
							<Z>5.57941341</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX170">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.287999988</Y>
								<Z>0.239999995</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX171">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-33.4160004</X>
							<Y>-12.5530005</Y>
							<Z>-143.818008</Z>
							<R00>0.180367246</R00>
							<R01>-0.362274945</R01>
							<R02>0.914453149</R02>
							<R10>0.951544762</R10>
							<R11>0.299678087</R11>
							<R12>-0.0689611733</R12>
							<R20>-0.249058649</R20>
							<R21>0.882581472</R21>
							<R22>0.398772955</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-6.75719595</X>
							<Y>3.9711616</Y>
							<Z>4.33261395</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX172">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX173">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>-33.0010033</X>
							<Y>-12.7800007</Y>
							<Z>-144.387009</Z>
							<R00>-0.180445671</R00>
							<R01>-0.914448202</R01>
							<R02>0.362248451</R02>
							<R10>-0.951530576</R10>
							<R11>0.0690381676</R11>
							<R12>-0.299705565</R12>
							<R20>0.249056205</R20>
							<R21>-0.398771077</R21>
							<R22>-0.882583022</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-6.02500916</X>
							<Y>3.50117683</Y>
							<Z>5.07004023</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX174">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.287999988</Y>
								<Z>0.624000013</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX175">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-32.932003</X>
							<Y>-12.8770008</Y>
							<Z>-144.706009</Z>
							<R00>-0.180422351</R00>
							<R01>-0.362267196</R01>
							<R02>-0.914445341</R02>
							<R10>-0.951528907</R10>
							<R11>0.299719155</R11>
							<R12>0.069002226</R12>
							<R20>0.24907954</R20>
							<R21>0.882570684</R21>
							<R22>-0.398783773</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>1.20308077</X>
							<Y>-2.83069682</Y>
							<Z>-2.99862337</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-5.43718433</X>
							<Y>3.7106688</Y>
							<Z>5.10812235</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX176">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.620000005</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.312000006</X>
								<Y>1.29999995</Y>
								<Z>0.200000003</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Model" referent="RBX177">
				<Properties>
					<CoordinateFrame name="ModelInPrimary">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Dual Nambu</string>
					<Ref name="PrimaryPart">null</Ref>
				</Properties>
				<Item class="Part" referent="RBX178">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">1009</int>
						<CoordinateFrame name="CFrame">
							<X>-41.6050034</X>
							<Y>-15.2970009</Y>
							<Z>-11.868001</Z>
							<R00>0.387378424</R00>
							<R01>0.847207785</R01>
							<R02>0.363561451</R02>
							<R10>-0.917514443</R10>
							<R11>0.392792821</R11>
							<R12>0.0622955412</R12>
							<R20>-0.0900270715</R20>
							<R21>-0.357704878</R21>
							<R22>0.929485083</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Flame</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>-0.0331425443</X>
							<Y>0.0437159017</Y>
							<Z>0.00988952722</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX179">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.800000012</X>
								<Y>0.800000012</Y>
								<Z>0.800000012</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Smoke" referent="RBX180">
						<Properties>
							<Color3 name="Color">4294940979</Color3>
							<bool name="Enabled">false</bool>
							<string name="Name">Smoke1</string>
							<float name="opacity_xml">0.100000001</float>
							<float name="riseVelocity_xml">15</float>
							<float name="size_xml">0.100000001</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX181">
						<Properties>
							<bool name="Looped">false</bool>
							<string name="Name">Fire</string>
							<float name="Pitch">1.5</float>
							<bool name="PlayOnRemove">false</bool>
							<Content name="SoundId"><url>http://roblox.com/asset/?id=10209859</url></Content>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX182">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">1009</int>
						<CoordinateFrame name="CFrame">
							<X>-42.3320007</X>
							<Y>-15.4220009</Y>
							<Z>-13.7270002</Z>
							<R00>0.387378424</R00>
							<R01>0.847207785</R01>
							<R02>0.363561451</R02>
							<R10>-0.917514443</R10>
							<R11>0.392792821</R11>
							<R12>0.0622955412</R12>
							<R20>-0.0900270715</R20>
							<R21>-0.357704878</R21>
							<R22>0.929485083</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Flame2</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>-0.0371616818</X>
							<Y>0.0381472185</Y>
							<Z>0.0114074806</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX183">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.800000012</X>
								<Y>0.800000012</Y>
								<Z>0.800000012</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Smoke" referent="RBX184">
						<Properties>
							<Color3 name="Color">4294940979</Color3>
							<bool name="Enabled">false</bool>
							<string name="Name">Smoke1</string>
							<float name="opacity_xml">0.100000001</float>
							<float name="riseVelocity_xml">15</float>
							<float name="size_xml">0.100000001</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX185">
						<Properties>
							<bool name="Looped">false</bool>
							<string name="Name">Fire</string>
							<float name="Pitch">1.5</float>
							<bool name="PlayOnRemove">false</bool>
							<Content name="SoundId"><url>http://roblox.com/asset/?id=10209859</url></Content>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX186">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.4220009</X>
							<Y>-15.8110008</Y>
							<Z>-11.5140009</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455136</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486787</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.089979656</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">John</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0349647924</X>
							<Y>0.0515753925</Y>
							<Z>0.0139010595</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX187">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.896000028</Y>
								<Z>0.192000002</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="ScreenGui" referent="RBX188">
						<Properties>
							<string name="Name">Key</string>
						</Properties>
						<Item class="TextLabel" referent="RBX189">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">5</token>
								<string name="Name">Weapon</string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-200</XO>
									<YS>0.700000048</YS>
									<YO>-20</YO>
								</UDim2>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>400</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Press &amp; Hold V for Dual Nambu Clip/Mag : [2] Ammo : [56]</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX190">
							<Properties>
								<string name="Name">Ammo</string>
								<int name="Value">2</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX191">
							<Properties>
								<string name="Name">Clip</string>
								<int name="Value">56</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Part" referent="RBX192">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.1490021</X>
							<Y>-15.9360008</Y>
							<Z>-13.3730011</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Handle2</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0389849506</X>
							<Y>0.0460068062</Y>
							<Z>0.0154198864</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX193">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.896000028</Y>
								<Z>0.192000002</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX194">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005804</X>
								<Y>-0.320001066</Y>
								<Z>3.30473661</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX195">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320000082</X>
								<Y>-2.60443234</Y>
								<Z>1.03140104</Z>
								<R00>1</R00>
								<R01>3.4239667e-005</R01>
								<R02>-2.62720805e-005</R02>
								<R10>-2.62720805e-005</R10>
								<R11>0.965918124</R11>
								<R12>0.258842885</R12>
								<R20>3.4239667e-005</R20>
								<R21>-0.258842885</R21>
								<R22>0.965918124</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX196">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005774</X>
								<Y>-3.3367362</Y>
								<Z>0.448001236</Z>
								<R00>1</R00>
								<R01>3.05180438e-005</R01>
								<R02>-3.05171125e-005</R02>
								<R10>-3.05171125e-005</R10>
								<R11>1</R11>
								<R12>3.05180438e-005</R12>
								<R20>3.05180438e-005</R20>
								<R21>-3.05171125e-005</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX197">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005834</X>
								<Y>-0.63999927</Y>
								<Z>3.27273607</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX198">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005834</X>
								<Y>-0.0640013292</Y>
								<Z>3.27273607</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX199">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.256005853</X>
								<Y>0.22399877</Y>
								<Z>3.37513685</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX200">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.384005725</X>
								<Y>0.22399877</Y>
								<Z>3.37513685</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX201">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005804</X>
								<Y>-0.927999735</Y>
								<Z>3.37513685</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX202">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0.320005804</X>
								<Y>-0.735998511</Y>
								<Z>-3.24073648</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>1</R12>
								<R20>0</R20>
								<R21>1</R21>
								<R22>-0</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX203">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005804</X>
								<Y>0.934399545</Y>
								<Z>-3.30473661</Z>
								<R00>1</R00>
								<R01>2.30753994e-009</R01>
								<R02>-4.31572189e-005</R02>
								<R10>-4.31572189e-005</R10>
								<R11>5.34682295e-005</R11>
								<R12>-1</R12>
								<R20>0</R20>
								<R21>1</R21>
								<R22>5.34682295e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX204">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>3.29999971</X>
								<Y>-0.956739426</Y>
								<Z>0.319995016</Z>
								<R00>0</R00>
								<R01>-1</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>1</R12>
								<R20>-1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX205">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005804</X>
								<Y>0.416000515</Y>
								<Z>-3.30473661</Z>
								<R00>1</R00>
								<R01>2.30753994e-009</R01>
								<R02>-4.31572189e-005</R02>
								<R10>-4.31572189e-005</R10>
								<R11>5.34682295e-005</R11>
								<R12>-1</R12>
								<R20>0</R20>
								<R21>1</R21>
								<R22>5.34682295e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX206">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0.320005804</X>
								<Y>-0.511999488</Y>
								<Z>-3.17673635</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>1</R12>
								<R20>0</R20>
								<R21>1</R21>
								<R22>-0</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX207">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005834</X>
								<Y>-0.511999488</Y>
								<Z>3.24073648</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX208">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0.320005804</X>
								<Y>-0.416000366</Y>
								<Z>-3.11273623</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>1</R12>
								<R20>0</R20>
								<R21>1</R21>
								<R22>-0</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX209">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005804</X>
								<Y>0.255999893</Y>
								<Z>3.3367362</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX210">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005834</X>
								<Y>-0.416000366</Y>
								<Z>3.2087369</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
					<Item class="Weld" referent="RBX211">
						<Properties>
							<CoordinateFrame name="C0">
								<X>-0.320005804</X>
								<Y>0.0640016049</Y>
								<Z>3.17673635</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>-0.320005804</X>
								<Y>0.448001236</Y>
								<Z>3.3367362</Z>
								<R00>1</R00>
								<R01>4.31581466e-005</R01>
								<R02>4.80200768e-010</R02>
								<R10>9.29503585e-010</R10>
								<R11>-3.26636837e-005</R11>
								<R12>1</R12>
								<R20>4.31581502e-005</R20>
								<R21>-0.99999994</R21>
								<R22>-3.26636873e-005</R22>
							</CoordinateFrame>
							<string name="Name">Weld</string>
							<Ref name="Part0">null</Ref>
							<Ref name="Part1">null</Ref>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX212">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-42.4880028</X>
							<Y>-16.2740002</Y>
							<Z>-11.4570007</Z>
							<R00>-0.363610983</R00>
							<R01>-0.155020759</R01>
							<R02>0.918561757</R02>
							<R10>-0.0623144321</R10>
							<R11>0.98789531</R11>
							<R12>0.142054901</R12>
							<R20>-0.9294644</R20>
							<R21>-0.00558693195</R21>
							<R22>-0.368869662</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Mag</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0378513932</X>
							<Y>0.0528019741</Y>
							<Z>0.0166637916</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX213">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.230399996</X>
								<Y>0.831999958</Y>
								<Z>0.384000003</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX214">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-43.2150002</X>
							<Y>-16.3990002</Y>
							<Z>-13.3160009</Z>
							<R00>-0.363610983</R00>
							<R01>-0.155020759</R01>
							<R02>0.918561757</R02>
							<R10>-0.0623144321</R10>
							<R11>0.98789531</R11>
							<R12>0.142054901</R12>
							<R20>-0.9294644</R20>
							<R21>-0.00558693195</R21>
							<R22>-0.368869662</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Mag2</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.041870527</X>
							<Y>0.0472340025</Y>
							<Z>0.0181819741</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX215">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.230399996</X>
								<Y>0.831999958</Y>
								<Z>0.384000003</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX216">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-41.6260033</X>
							<Y>-15.3010006</Y>
							<Z>-11.8600006</Z>
							<R00>-0.363612056</R00>
							<R01>-0.847132862</R01>
							<R02>-0.387494743</R02>
							<R10>-0.0623524822</R10>
							<R11>-0.392902195</R11>
							<R12>0.91746372</R12>
							<R20>-0.92946142</R20>
							<R21>0.357762158</R21>
							<R22>0.0900431424</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Muzzle</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.033132337</X>
							<Y>0.043904148</Y>
							<Z>0.00994138792</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX217">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.127999991</X>
								<Y>0.0639999956</Y>
								<Z>0.192000002</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX218">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.8090019</X>
							<Y>-15.8150005</Y>
							<Z>-11.3630009</Z>
							<R00>-0.363613158</R00>
							<R01>-0.387481838</R01>
							<R02>0.847138345</R02>
							<R10>-0.0623195134</R10>
							<R11>0.917466521</R11>
							<R12>0.392901033</R12>
							<R20>-0.929463208</R20>
							<R21>0.0900707394</R21>
							<R22>-0.357750595</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0342717655</X>
							<Y>0.0549655259</Y>
							<Z>0.0144169647</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX219">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.127999991</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX220">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-41.8630028</X>
							<Y>-15.4460011</Y>
							<Z>-11.7580004</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0336344987</X>
							<Y>0.0461779013</Y>
							<Z>0.0110813873</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX221">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.511999965</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX222">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.3510017</X>
							<Y>-15.6730003</Y>
							<Z>-11.552001</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0341980085</X>
							<Y>0.050758779</Y>
							<Z>0.0130101107</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX223">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.384000003</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX224">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.6110039</X>
							<Y>-15.6880007</Y>
							<Z>-11.3800001</Z>
							<R00>-0.363575459</R00>
							<R01>0.847161233</R01>
							<R02>0.387467086</R02>
							<R10>-0.0623355284</R10>
							<R11>0.392874956</R11>
							<R12>-0.917476594</R12>
							<R20>-0.929476857</R20>
							<R21>-0.357724965</R21>
							<R22>-0.0900314599</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0336671583</X>
							<Y>0.053442724</Y>
							<Z>0.0134331761</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX225">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX226">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.6580009</X>
							<Y>-15.6960011</Y>
							<Z>-11.4990005</Z>
							<R00>-0.363575459</R00>
							<R01>0.847161233</R01>
							<R02>0.387467086</R02>
							<R10>-0.0623355284</R10>
							<R11>0.392874956</R11>
							<R12>-0.917476594</R12>
							<R20>-0.929476857</R20>
							<R21>-0.357724965</R21>
							<R22>-0.0900314599</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0339243524</X>
							<Y>0.0530862585</Y>
							<Z>0.0135302804</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX227">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX228">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-41.6580009</X>
							<Y>-15.2390003</Y>
							<Z>-11.8510008</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0326682515</X>
							<Y>0.0441022478</Y>
							<Z>0.00962372869</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX229">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX230">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-41.769001</X>
							<Y>-15.4380007</Y>
							<Z>-11.795001</Z>
							<R00>0.363612056</R00>
							<R01>0.847124815</R01>
							<R02>-0.387512386</R02>
							<R10>0.0623524822</R10>
							<R11>0.392921329</R11>
							<R12>0.917455554</R12>
							<R20>0.92946142</R20>
							<R21>-0.35776031</R21>
							<R22>0.0900505856</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0337541364</X>
							<Y>0.0453481525</Y>
							<Z>0.0109140761</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX231">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.319999993</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX232">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.0650024</X>
							<Y>-15.5050011</Y>
							<Z>-11.6750002</Z>
							<R00>-0.363612056</R00>
							<R01>-0.847132862</R01>
							<R02>-0.387494743</R02>
							<R10>-0.0623524822</R10>
							<R11>-0.392902195</R11>
							<R12>0.91746372</R12>
							<R20>-0.92946142</R20>
							<R21>0.357762158</R21>
							<R22>0.0900431424</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0336397476</X>
							<Y>0.0480270199</Y>
							<Z>0.0116774747</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX233">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>1.08800006</Y>
								<Z>0.192000002</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX234">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-41.9340019</X>
							<Y>-15.585001</Y>
							<Z>-11.7200003</Z>
							<R00>0.363612056</R00>
							<R01>0.847124815</R01>
							<R02>-0.387512386</R02>
							<R10>0.0623524822</R10>
							<R11>0.392921329</R11>
							<R12>0.917455554</R12>
							<R20>0.92946142</R20>
							<R21>-0.35776031</R21>
							<R22>0.0900505856</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0344011523</X>
							<Y>0.0469950587</Y>
							<Z>0.0119724013</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX235">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.127999991</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX236">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-41.9590034</X>
							<Y>-15.526001</Y>
							<Z>-11.7150002</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0339734852</X>
							<Y>0.0471289717</Y>
							<Z>0.0116641009</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX237">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.127999991</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX238">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-41.9900017</X>
							<Y>-15.6810007</Y>
							<Z>-11.6920004</Z>
							<R00>0.363612056</R00>
							<R01>0.847124815</R01>
							<R02>-0.387512386</R02>
							<R10>0.0623524822</R10>
							<R11>0.392921329</R11>
							<R12>0.917455554</R12>
							<R20>0.92946142</R20>
							<R21>-0.35776031</R21>
							<R22>0.0900505856</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0349228829</X>
							<Y>0.0476242192</Y>
							<Z>0.0126021476</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX239">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.0639999956</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX240">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.6460037</X>
							<Y>-15.7400007</Y>
							<Z>-11.4310007</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0340834893</X>
							<Y>0.0534381866</Y>
							<Z>0.0137735745</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX241">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.255999982</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX242">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.0280037</X>
							<Y>-15.5930004</Y>
							<Z>-11.6830006</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0342811793</X>
							<Y>0.047825247</Y>
							<Z>0.0121395774</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX243">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX244">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.8090019</X>
							<Y>-15.8150005</Y>
							<Z>-11.3630009</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0342714116</X>
							<Y>0.0549649559</Y>
							<Z>0.0144164935</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX245">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.127999991</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX246">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.1460037</X>
							<Y>-15.5430012</Y>
							<Z>-11.6400003</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0337336101</X>
							<Y>0.0487901978</Y>
							<Z>0.0119987847</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX247">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.127999991</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX248">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.5360031</X>
							<Y>-15.9400005</Y>
							<Z>-13.2220011</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0382915735</X>
							<Y>0.0493963696</Y>
							<Z>0.0159353204</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX249">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.127999991</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX250">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>-42.3530006</X>
							<Y>-15.4260006</Y>
							<Z>-13.7190008</Z>
							<R00>-0.363612056</R00>
							<R01>-0.847132862</R01>
							<R02>-0.387494743</R02>
							<R10>-0.0623524822</R10>
							<R11>-0.392902195</R11>
							<R12>0.91746372</R12>
							<R20>-0.92946142</R20>
							<R21>0.357762158</R21>
							<R22>0.0900431424</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0371519551</X>
							<Y>0.0383365117</Y>
							<Z>0.0114600752</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX251">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.127999991</X>
								<Y>0.0639999956</Y>
								<Z>0.192000002</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX252">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.7920036</X>
							<Y>-15.6300011</Y>
							<Z>-13.5340004</Z>
							<R00>-0.363612056</R00>
							<R01>-0.847132862</R01>
							<R02>-0.387494743</R02>
							<R10>-0.0623524822</R10>
							<R11>-0.392902195</R11>
							<R12>0.91746372</R12>
							<R20>-0.92946142</R20>
							<R21>0.357762158</R21>
							<R22>0.0900431424</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0376593694</X>
							<Y>0.0424593836</Y>
							<Z>0.0131961619</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX253">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>1.08800006</Y>
								<Z>0.192000002</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX254">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.4960022</X>
							<Y>-15.5630007</Y>
							<Z>-13.6540003</Z>
							<R00>0.363612056</R00>
							<R01>0.847124815</R01>
							<R02>-0.387512386</R02>
							<R10>0.0623524822</R10>
							<R11>0.392921329</R11>
							<R12>0.917455554</R12>
							<R20>0.92946142</R20>
							<R21>-0.35776031</R21>
							<R22>0.0900505856</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0377738886</X>
							<Y>0.0397801809</Y>
							<Z>0.0124327634</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX255">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.319999993</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX256">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.8730011</X>
							<Y>-15.6680012</Y>
							<Z>-13.4990005</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0377538987</X>
							<Y>0.0432212763</Y>
							<Z>0.0135176117</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX257">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.127999991</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX258">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.3850021</X>
							<Y>-15.3640003</Y>
							<Z>-13.710001</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0366884135</X>
							<Y>0.0385336652</Y>
							<Z>0.0111425556</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX259">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX260">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.7180023</X>
							<Y>-15.8060007</Y>
							<Z>-13.5510006</Z>
							<R00>0.363612056</R00>
							<R01>0.847124815</R01>
							<R02>-0.387512386</R02>
							<R10>0.0623524822</R10>
							<R11>0.392921329</R11>
							<R12>0.917455554</R12>
							<R20>0.92946142</R20>
							<R21>-0.35776031</R21>
							<R22>0.0900505856</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0389424302</X>
							<Y>0.0420563519</Y>
							<Z>0.0141206998</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX261">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.0639999956</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX262">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.3740005</X>
							<Y>-15.8640003</Y>
							<Z>-13.2900009</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0381037779</X>
							<Y>0.0478692651</Y>
							<Z>0.0152924014</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX263">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.255999982</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX264">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.0780029</X>
							<Y>-15.7970009</Y>
							<Z>-13.4110003</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0382181667</X>
							<Y>0.0451901928</Y>
							<Z>0.0145289376</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX265">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.384000003</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX266">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.5360031</X>
							<Y>-15.9400005</Y>
							<Z>-13.2210007</Z>
							<R00>-0.363613158</R00>
							<R01>-0.387481838</R01>
							<R02>0.847138345</R02>
							<R10>-0.0623195134</R10>
							<R11>0.917466521</R11>
							<R12>0.392901033</R12>
							<R20>-0.929463208</R20>
							<R21>0.0900707394</R21>
							<R22>-0.357750595</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0382911041</X>
							<Y>0.0493975542</Y>
							<Z>0.0159353167</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX267">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.255999982</X>
								<Y>0.127999991</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX268">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.3380013</X>
							<Y>-15.8130007</Y>
							<Z>-13.2390003</Z>
							<R00>-0.363575459</R00>
							<R01>0.847161233</R01>
							<R02>0.387467086</R02>
							<R10>-0.0623355284</R10>
							<R11>0.392874956</R11>
							<R12>-0.917476594</R12>
							<R20>-0.929476857</R20>
							<R21>-0.357724965</R21>
							<R22>-0.0900314599</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0376867019</X>
							<Y>0.0478742421</Y>
							<Z>0.0149515318</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX269">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX270">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-43.3850021</X>
							<Y>-15.8210011</Y>
							<Z>-13.3580008</Z>
							<R00>-0.363575459</R00>
							<R01>0.847161233</R01>
							<R02>0.387467086</R02>
							<R10>-0.0623355284</R10>
							<R11>0.392874956</R11>
							<R12>-0.917476594</R12>
							<R20>-0.929476857</R20>
							<R21>-0.357724965</R21>
							<R22>-0.0900314599</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0379441008</X>
							<Y>0.0475178808</Y>
							<Z>0.0150488364</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX271">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0639999956</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX272">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.6610031</X>
							<Y>-15.710001</Y>
							<Z>-13.5790005</Z>
							<R00>0.363612056</R00>
							<R01>0.847124815</R01>
							<R02>-0.387512386</R02>
							<R10>0.0623524822</R10>
							<R11>0.392921329</R11>
							<R12>0.917455554</R12>
							<R20>0.92946142</R20>
							<R21>-0.35776031</R21>
							<R22>0.0900505856</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0384209007</X>
							<Y>0.0414271876</Y>
							<Z>0.0134911221</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX273">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.127999991</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX274">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.5900002</X>
							<Y>-15.5710011</Y>
							<Z>-13.6170006</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.037654452</X>
							<Y>0.040609315</Y>
							<Z>0.0126000457</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX275">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.511999965</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX276">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.6860008</X>
							<Y>-15.651001</Y>
							<Z>-13.5740004</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455106</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486668</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796486</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0379935689</X>
							<Y>0.0415600501</Y>
							<Z>0.0131827593</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX277">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.127999991</Y>
								<Z>0.0639999956</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX278">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>-42.7550011</X>
							<Y>-15.7180004</Y>
							<Z>-13.5420008</Z>
							<R00>-0.363558769</R00>
							<R01>0.847173929</R01>
							<R02>0.387455165</R02>
							<R10>-0.0623751245</R10>
							<R11>0.392844975</R11>
							<R12>-0.917486906</R12>
							<R20>-0.929480731</R20>
							<R21>-0.357727945</R21>
							<R22>-0.0899796709</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-0.00551045639</X>
							<Y>0.00214775559</Y>
							<Z>-0.00671106996</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-0.0383013375</X>
							<Y>0.0422566608</Y>
							<Z>0.0136584044</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX279">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.20480001</X>
								<Y>0.0639999956</Y>
								<Z>0.127999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Model" referent="RBX280">
				<Properties>
					<CoordinateFrame name="ModelInPrimary">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">FG42</string>
					<Ref name="PrimaryPart">null</Ref>
				</Properties>
				<Item class="Part" referent="RBX281">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">1009</int>
						<CoordinateFrame name="CFrame">
							<X>42.0760002</X>
							<Y>22.578001</Y>
							<Z>137.447006</Z>
							<R00>0.0922431052</R00>
							<R01>-0.198841259</R01>
							<R02>-0.975680947</R02>
							<R10>-0.930137336</R10>
							<R11>-0.366976559</R11>
							<R12>-0.0131483972</R12>
							<R20>-0.355437607</R20>
							<R21>0.90873009</R21>
							<R22>-0.218800768</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Flame</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>-48.4466934</X>
							<Y>-16.1321487</Y>
							<Z>32.2487869</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.200000003</X>
							<Y>0.200000003</Y>
							<Z>0.200000003</Z>
						</Vector3>
					</Properties>
					<Item class="Smoke" referent="RBX282">
						<Properties>
							<Color3 name="Color">4294940979</Color3>
							<bool name="Enabled">false</bool>
							<string name="Name">Smoke1</string>
							<float name="opacity_xml">0.100000001</float>
							<float name="riseVelocity_xml">15</float>
							<float name="size_xml">0.100000001</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX283">
						<Properties>
							<bool name="Looped">false</bool>
							<string name="Name">Fire</string>
							<float name="Pitch">1.60000002</float>
							<bool name="PlayOnRemove">false</bool>
							<Content name="SoundId"><url>http://www.roblox.com/asset/?id=2692806</url></Content>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX284">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.9540024</X>
							<Y>23.9980011</Y>
							<Z>133.458008</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">John</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>5.5870285</X>
							<Y>-55.2438736</Y>
							<Z>35.4155502</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX285">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>-0.100000001</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.528999984</Y>
								<Z>0.400000006</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="ScreenGui" referent="RBX286">
						<Properties>
							<string name="Name">Key</string>
						</Properties>
						<Item class="TextLabel" referent="RBX287">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">5</token>
								<string name="Name">Weapon</string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-200</XO>
									<YS>0.700000048</YS>
									<YO>-20</YO>
								</UDim2>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>400</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Press &amp; Hold V for FG42 Clip/Mag : [14] Ammo : [120]</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX288">
							<Properties>
								<string name="Name">Ammo</string>
								<int name="Value">14</int>
							</Properties>
						</Item>
						<Item class="IntValue" referent="RBX289">
							<Properties>
								<string name="Name">Clip</string>
								<int name="Value">120</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Part" referent="RBX290">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>43.0880013</X>
							<Y>23.4940014</Y>
							<Z>134.973999</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Mag</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-5.67761993</X>
							<Y>80.5373306</Y>
							<Z>82.7057419</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX291">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.575999975</X>
								<Y>0.0960000008</Y>
								<Z>0.287999988</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX292">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.0730019</X>
							<Y>22.5670013</Y>
							<Z>137.473007</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Muzzle</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-48.3219681</X>
							<Y>-15.1881485</Y>
							<Z>32.6446838</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX293">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0719999969</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX294">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.7600021</X>
							<Y>23.4890003</Y>
							<Z>134.901001</Z>
							<R00>0.092378512</R00>
							<R01>-0.975652933</R01>
							<R02>0.198915973</R02>
							<R10>-0.930146515</R10>
							<R11>-0.0132562816</R11>
							<R12>0.366949141</R12>
							<R20>-0.355378091</R20>
							<R21>-0.218919247</R21>
							<R22>-0.908724904</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-10.3703766</X>
							<Y>-9.25967407</Y>
							<Z>47.417244</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX295">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.124799997</X>
								<Y>0.0960000008</Y>
								<Z>0.316800028</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX296">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.7500038</X>
							<Y>23.3090019</Y>
							<Z>134.411011</Z>
							<R00>-0.97567445</R00>
							<R01>-0.168157965</R01>
							<R02>-0.140649527</R02>
							<R10>-0.0132433027</R10>
							<R11>-0.595195115</R11>
							<R12>0.803472281</R12>
							<R20>-0.218824148</R20>
							<R21>0.785789907</R21>
							<R22>0.578489721</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>81.7761154</X>
							<Y>-58.9345779</Y>
							<Z>59.213829</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX297">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.239999995</Y>
								<Z>0.479999989</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX298">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.6740036</X>
							<Y>23.5760002</Y>
							<Z>134.73201</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-19.7556915</X>
							<Y>-41.3170471</Y>
							<Z>32.2707062</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX299">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.192000002</Y>
								<Z>1.296</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX300">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.519001</X>
							<Y>23.3120003</Y>
							<Z>135.437012</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-25.9359055</X>
							<Y>-34.7769852</Y>
							<Z>32.6849251</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX301">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.00999999978</Y>
								<Z>0.270000011</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.181500003</X>
								<Y>0.180000007</Y>
								<Z>0.800000012</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX302">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>43.0020027</X>
							<Y>23.7430019</Y>
							<Z>133.26001</Z>
							<R00>-0.975674987</R00>
							<R01>-0.198828772</R01>
							<R02>-0.0923328549</R02>
							<R10>-0.0132381916</R10>
							<R11>-0.366978377</R11>
							<R12>0.93013531</R12>
							<R20>-0.218821824</R20>
							<R21>0.908732176</R21>
							<R22>0.355419487</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>91.2938995</X>
							<Y>-69.534935</Y>
							<Z>58.377388</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX303">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.384000003</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX304">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.5130005</X>
							<Y>23.3790016</Y>
							<Z>135.462006</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-45.6988754</X>
							<Y>-31.6326675</Y>
							<Z>27.3334656</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX305">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.270000011</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.400000006</X>
								<Y>0.800000012</Y>
								<Z>0.187199995</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX306">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.4980011</X>
							<Y>23.3530006</Y>
							<Z>135.528</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-45.7812881</X>
							<Y>-31.1113358</Y>
							<Z>27.5020905</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX307">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX308">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>43.0470009</X>
							<Y>23.8000011</Y>
							<Z>133.055008</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>98.1334457</X>
							<Y>-72.1888046</Y>
							<Z>59.6411781</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX309">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX310">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.6140022</X>
							<Y>23.7240009</Y>
							<Z>134.990005</Z>
							<R00>0.092378512</R00>
							<R01>-0.975652933</R01>
							<R02>0.198915973</R02>
							<R10>-0.930146515</R10>
							<R11>-0.0132562816</R11>
							<R12>0.366949141</R12>
							<R20>-0.355378091</R20>
							<R21>-0.218919247</R21>
							<R22>-0.908724904</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-84.5063782</X>
							<Y>-29.6580353</Y>
							<Z>15.2472248</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX311">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.143999994</X>
								<Y>0.0299999993</Y>
								<Z>0.0399999991</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX312">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.4700012</X>
							<Y>23.3000011</Y>
							<Z>135.658005</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-45.9501114</X>
							<Y>-30.0425644</Y>
							<Z>27.8478355</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX313">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX314">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.6780014</X>
							<Y>23.4240017</Y>
							<Z>134.723999</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>19.6995544</X>
							<Y>-47.2312317</Y>
							<Z>43.0909576</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX315">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.187199995</X>
								<Y>0.0960000008</Y>
								<Z>0.720000029</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX316">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.151001</X>
							<Y>22.8740005</Y>
							<Z>137.10701</Z>
							<R00>0.198838443</R00>
							<R01>0.975672543</R01>
							<R02>0.0923384875</R02>
							<R10>0.367004961</R10>
							<R11>0.0132335573</R11>
							<R12>-0.930124938</R12>
							<R20>-0.908719301</R20>
							<R21>0.218833283</R21>
							<R22>-0.355445325</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-88.5947647</X>
							<Y>-12.1380081</Y>
							<Z>20.478157</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX317">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0599999987</X>
								<Y>0.0480000004</Y>
								<Z>0.0900000036</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX318">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.1610031</X>
							<Y>22.8250008</Y>
							<Z>137.063004</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-71.4537735</X>
							<Y>-15.0469742</Y>
							<Z>25.0513229</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX319">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.239999995</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX320">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.1450005</X>
							<Y>22.7010002</Y>
							<Z>137.142014</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-47.8873978</X>
							<Y>-17.8961563</Y>
							<Z>31.7709198</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX321">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0960000008</Y>
								<Z>0.158400014</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX322">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.1330032</X>
							<Y>22.7720013</Y>
							<Z>137.194</Z>
							<R00>-0.975675344</R00>
							<R01>-0.0923026502</R01>
							<R02>0.198841259</R02>
							<R10>-0.0132051706</R10>
							<R11>0.930136502</R11>
							<R12>0.366976559</R12>
							<R20>-0.218822449</R20>
							<R21>0.355424255</R21>
							<R22>-0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-71.6363297</X>
							<Y>-13.9494705</Y>
							<Z>25.4033203</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX323">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX324">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>43.0180016</X>
							<Y>24.0900021</Y>
							<Z>133.166</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>12.5423889</X>
							<Y>-58.6075897</Y>
							<Z>36.4509315</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX325">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.575999975</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX326">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.144001</X>
							<Y>22.9570007</Y>
							<Z>137.134003</Z>
							<R00>0.0923871174</R00>
							<R01>0.975661516</R01>
							<R02>-0.198869884</R02>
							<R10>-0.93013078</R10>
							<R11>0.0132720917</R11>
							<R12>-0.366988689</R12>
							<R20>-0.355417371</R20>
							<R21>0.218880028</R21>
							<R22>0.908719003</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-112.297752</X>
							<Y>-8.45267487</Y>
							<Z>14.0275574</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX327">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=3270017</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0960000008</X>
								<Y>0.0960000008</Y>
								<Z>0.384000003</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX328">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.1900024</X>
							<Y>22.8780003</Y>
							<Z>136.932007</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-71.2928238</X>
							<Y>-16.1157455</Y>
							<Z>24.7029877</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX329">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.0480000004</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX330">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>42.2310028</X>
							<Y>22.8590012</Y>
							<Z>136.749008</Z>
							<R00>0.975674987</R00>
							<R01>0.198826835</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997719</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-47.3750992</X>
							<Y>-21.1076279</Y>
							<Z>30.733696</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX331">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.815999985</Y>
								<Z>0.143999994</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX332">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">199</int>
						<CoordinateFrame name="CFrame">
							<X>42.281002</X>
							<Y>22.8180008</Y>
							<Z>136.532013</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-14.2176895</X>
							<Y>-27.7575455</Y>
							<Z>39.1957321</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX333">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>1.24800003</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX334">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.946003</X>
							<Y>24.3010006</Y>
							<Z>133.473007</Z>
							<R00>0.975662529</R00>
							<R01>-0.198870867</R01>
							<R02>0.0923749432</R02>
							<R10>0.0132624954</R10>
							<R11>-0.366978973</R11>
							<R12>-0.930134714</R12>
							<R20>0.218876362</R20>
							<R21>0.908722699</R21>
							<R22>-0.355410069</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-73.3156357</X>
							<Y>-43.4076653</Y>
							<Z>13.7805939</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX335">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.384000003</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX336">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.5270004</X>
							<Y>23.4050007</Y>
							<Z>135.397003</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-45.6066055</X>
							<Y>-32.1774216</Y>
							<Z>27.1592979</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX337">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.201599985</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX338">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.4560013</X>
							<Y>23.2730007</Y>
							<Z>135.723999</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-46.0364761</X>
							<Y>-29.4951401</Y>
							<Z>28.0249519</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX339">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.263999999</X>
								<Y>0.0480000004</Y>
								<Z>0.158400014</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX340">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.413002</X>
							<Y>23.1940002</Y>
							<Z>135.920013</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-46.293602</X>
							<Y>-27.8998642</Y>
							<Z>28.5393143</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX341">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.216000006</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX342">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.4410019</X>
							<Y>23.2470016</Y>
							<Z>135.789001</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-46.124794</X>
							<Y>-28.968605</Y>
							<Z>28.193573</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX343">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.216000006</X>
								<Y>0.0480000004</Y>
								<Z>0.0960000008</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX344">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.9190025</X>
							<Y>23.776001</Y>
							<Z>133.625</Z>
							<R00>-0.975674987</R00>
							<R01>-0.198828772</R01>
							<R02>-0.0923328549</R02>
							<R10>-0.0132381916</R10>
							<R11>-0.366978377</R11>
							<R12>0.93013531</R12>
							<R20>-0.218821824</R20>
							<R21>0.908732176</R21>
							<R22>0.355419487</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>44.79496</X>
							<Y>-59.7226601</Y>
							<Z>46.6933289</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX345">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.287999988</Y>
								<Z>0.239999995</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX346">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.9890022</X>
							<Y>24.3800011</Y>
							<Z>133.277008</Z>
							<R00>-0.975670457</R00>
							<R01>0.19886893</R01>
							<R02>0.0922948793</R02>
							<R10>-0.0131822079</R10>
							<R11>0.366998285</R11>
							<R12>-0.930128217</R12>
							<R20>-0.21884568</R20>
							<R21>-0.908715248</R21>
							<R22>-0.355447799</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-73.0820541</X>
							<Y>-44.9794121</Y>
							<Z>13.2672882</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX347">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><null></null></Content>
							<token name="MeshType">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.0480000004</Y>
								<Z>0.0480000004</Z>
							</Vector3>
							<Content name="TextureId"><null></null></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX348">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">192</int>
						<CoordinateFrame name="CFrame">
							<X>42.8620033</X>
							<Y>23.960001</Y>
							<Z>133.871002</Z>
							<R00>0.975669742</R00>
							<R01>-0.0923622102</R01>
							<R02>-0.198841259</R02>
							<R10>0.0132619441</R10>
							<R11>0.930135727</R11>
							<R12>-0.366976559</R12>
							<R20>0.218844146</R20>
							<R21>0.355410874</R21>
							<R22>0.90873009</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-27.8196907</X>
							<Y>-46.9908218</Y>
							<Z>27.4734192</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="BlockMesh" referent="RBX349">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.239999995</X>
								<Y>0.287999988</Y>
								<Z>0.624000013</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Part" referent="RBX350">
					<Properties>
						<bool name="Anchored">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">26</int>
						<CoordinateFrame name="CFrame">
							<X>42.7900009</X>
							<Y>23.8900013</Y>
							<Z>134.197006</Z>
							<R00>0.975674987</R00>
							<R01>0.19882682</R01>
							<R02>-0.0923369899</R02>
							<R10>0.0132381916</R10>
							<R11>0.366997749</R11>
							<R12>0.93012768</R12>
							<R20>0.218821794</R20>
							<R21>-0.908724725</R21>
							<R22>0.355438381</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<token name="Material">256</token>
						<string name="Name">Part</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>-85.0112228</X>
							<Y>-96.6222076</Y>
							<Z>257.175049</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>-44.0383301</X>
							<Y>-41.9769249</Y>
							<Z>23.9959717</Z>
						</Vector3>
						<token name="formFactorRaw">0</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
					<Item class="CylinderMesh" referent="RBX351">
						<Properties>
							<float name="Bevel">0</float>
							<float name="Bevel Roundness">0</float>
							<float name="Bulge">0</float>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>-0.620000005</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>0.312000006</X>
								<Y>1.29999995</Y>
								<Z>0.200000003</Z>
							</Vector3>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX352">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX353">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
		<Item class="GuiMain" referent="RBX354">
			<Properties>
				<string name="Name">BAM</string>
			</Properties>
			<Item class="TextLabel" referent="RBX355">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4278190080</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">4</token>
					<string name="Name">No</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0.850000024</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0.150000006</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">Press R on Satchel Charges To Detonate Them                                                                             </string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">0</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">true</bool>
					<token name="TextXAlignment">1</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="TextLabel" referent="RBX356">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4278190080</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">4</token>
					<string name="Name">Yes</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0.850000024</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0.150000006</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">This is interesting                           </string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">0</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">true</bool>
					<token name="TextXAlignment">1</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="TextLabel" referent="RBX357">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4278190080</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">4</token>
					<string name="Name">Gun</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0.850000024</YS>
						<YO>-20</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>0.150000006</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">Press Backspace To fix Ammo Gui if it breaks                          </string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">0</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">true</bool>
					<token name="TextXAlignment">1</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="ScreenGui" referent="RBX358">
			<Properties>
				<string name="Name">Update</string>
			</Properties>
			<Item class="Frame" referent="RBX359">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<string name="Name">List</string>
					<UDim2 name="Position">
						<XS>0.0500000007</XS>
						<XO>0</XO>
						<YS>0.699999988</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX360">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">row1</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX361">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">V1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">1</token>
							<string name="Text">yoyoyo65ful        REVENGE!        STOPPER!        BUZZKILL!</string>
							<Color3 name="TextColor3">4278190335</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX362">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">K1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">1</token>
							<string name="Text">NOBLEvengance</string>
							<Color3 name="TextColor3">4294901760</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX363">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=38506600</url></Content>
							<string name="Name">ImageLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>120</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX364">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">row2</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-25</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX365">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">K1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">yoyoyo65ful</string>
							<Color3 name="TextColor3">4278190335</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX366">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">V1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">jacktilly        KILLED AGAIN!        DOUBLE KILL</string>
							<Color3 name="TextColor3">4294901760</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX367">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=43149588</url></Content>
							<string name="Name">ImageLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>110</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX368">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">row3</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-50</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX369">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">K1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">yoyoyo65ful</string>
							<Color3 name="TextColor3">4278190335</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX370">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">V1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">COWEIM2        KILLED AGAIN!        AVENGED!        HEADSHOT!        KILL ASSIST BY: spykid201</string>
							<Color3 name="TextColor3">4294901760</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX371">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=43149588</url></Content>
							<string name="Name">ImageLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>110</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX372">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">row4</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-75</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX373">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">K1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">COWEIM2</string>
							<Color3 name="TextColor3">4294901760</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX374">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">V1</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">spykid201</string>
							<Color3 name="TextColor3">4278190335</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX375">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=40653442</url></Content>
							<string name="Name">ImageLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX376">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Spec</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">1</token>
							<string name="Text">Dual</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">3</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="TextLabel" referent="RBX377">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">4</token>
					<string name="Name">Reload</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.600000024</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">Low Ammo Clip</string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">1</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">false</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="TextButton" referent="RBX378">
				<Properties>
					<bool name="Active">true</bool>
					<bool name="AutoButtonColor">true</bool>
					<Color3 name="BackgroundColor3">4283914327</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">4288124823</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">4</token>
					<bool name="Modal">false</bool>
					<string name="Name">Force</string>
					<UDim2 name="Position">
						<XS>0.100000016</XS>
						<XO>-75</XO>
						<YS>0.800000012</YS>
						<YO>-15</YO>
					</UDim2>
					<bool name="Selected">false</bool>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>120</XO>
						<YS>0</YS>
						<YO>30</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">1</token>
					<string name="Text">Force Respawn</string>
					<Color3 name="TextColor3">4294901760</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">1</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">false</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Script" referent="RBX379">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Script</string>
						<ProtectedString name="Source">victim = script.Parent.Parent.Parent.Parent

function kill()

local player = victim
local ack2 = Instance.new(&quot;Model&quot;)
ack2.Parent = game.Workspace
local ack4 = Instance.new(&quot;Part&quot;)
ack4.Transparency = 1
ack4.CanCollide = false
ack4.Anchored = false
ack4.Name = &quot;Torso&quot;
ack4.Position = Vector3.new(10000,10000,10000)
ack4.Parent = ack2
local ack3 = Instance.new(&quot;Humanoid&quot;)
ack3.Torso = ack4
ack3.Parent = ack2
player.Character = ack2
script.Parent:Destroy()

end

script.Parent.MouseButton1Down:connect(kill)</ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="TextButton" referent="RBX380">
				<Properties>
					<bool name="Active">true</bool>
					<bool name="AutoButtonColor">true</bool>
					<Color3 name="BackgroundColor3">4283914327</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">4288124823</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">4</token>
					<bool name="Modal">false</bool>
					<string name="Name">TextButton</string>
					<UDim2 name="Position">
						<XS>0.100000016</XS>
						<XO>-75</XO>
						<YS>0.800000012</YS>
						<YO>-15</YO>
					</UDim2>
					<bool name="Selected">false</bool>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>120</XO>
						<YS>0</YS>
						<YO>30</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">1</token>
					<string name="Text">RESET</string>
					<Color3 name="TextColor3">4294901760</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">1</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">false</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Script" referent="RBX381">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Script</string>
						<ProtectedString name="Source">loadstring(&quotquot;)()</ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ImageLabel" referent="RBX382">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4294967295</Color3>
					<float name="BackgroundTransparency">5.15988779</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><null></null></Content>
					<string name="Name">Blind</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="TextLabel" referent="RBX383">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">6</token>
					<string name="Name">Map</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0500000007</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">Map : Tunnel Attack          Created by : 1505erik</string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">0</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">false</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="TextLabel" referent="RBX384">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">6</token>
					<string name="Name">Kill</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.800000012</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">Call of Robloxia 5 - Roblox At War [10 Million Visits!]</string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">0</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">false</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">10</int>
				</Properties>
			</Item>
			<Item class="TextLabel" referent="RBX385">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<token name="Font">2</token>
					<token name="FontSize">5</token>
					<string name="Name">Vers</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-300</XO>
						<YS>0.100000001</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>600</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<string name="Text">[Server Version : V3.2] Testing new sniper scopes / New Magnum model with better reloading animation! </string>
					<Color3 name="TextColor3">4294967295</Color3>
					<bool name="TextScaled">false</bool>
					<Color3 name="TextStrokeColor3">4278190080</Color3>
					<float name="TextStrokeTransparency">0</float>
					<float name="TextTransparency">0</float>
					<bool name="TextWrapped">true</bool>
					<token name="TextXAlignment">2</token>
					<token name="TextYAlignment">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="ImageLabel" referent="RBX386">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4294967295</Color3>
					<float name="BackgroundTransparency">0.899999976</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><url>http://www.roblox.com/asset/?id=71914755</url></Content>
					<string name="Name">LOL</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>-0.125</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1.25</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX387">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX388">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX389">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="BadgeService" referent="RBX390">
		<Properties>
			<string name="Name">BadgeService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX391">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX392">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX393">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBX394">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX395">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX396">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBX397">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX398">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX399">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX400">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<string name="Name">Players</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX401">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="UserInputService" referent="RBX402">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX403">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX404">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX405">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBX406">
		<Properties>
			<string name="Name">Teams</string>
		</Properties>
		<Item class="Team" referent="RBX407">
			<Properties>
				<bool name="AutoAssignable">true</bool>
				<bool name="AutoColorCharacters">false</bool>
				<string name="Name">Allies</string>
				<int name="Score">100</int>
				<int name="TeamColor">21</int>
			</Properties>
		</Item>
		<Item class="Team" referent="RBX408">
			<Properties>
				<bool name="AutoAssignable">true</bool>
				<bool name="AutoColorCharacters">false</bool>
				<string name="Name">Axis</string>
				<int name="Score">100</int>
				<int name="TeamColor">23</int>
			</Properties>
		</Item>
	</Item>
	<Item class="Lighting" referent="RBX409">
		<Properties>
			<Color3 name="Ambient">4286611584</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">false</bool>
			<string name="Name">Lighting</string>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
		<Item class="Sky" referent="RBX410">
			<Properties>
				<bool name="CelestialBodiesShown">true</bool>
				<string name="Name">Sky</string>
				<Content name="SkyboxBk"><url>http://www.roblox.com/asset/?version=1&amp;id=1010388</url></Content>
				<Content name="SkyboxDn"><url>http://www.roblox.com/asset/?version=1&amp;id=1010389</url></Content>
				<Content name="SkyboxFt"><url>http://www.roblox.com/asset/?version=1&amp;id=1010386</url></Content>
				<Content name="SkyboxLf"><url>http://www.roblox.com/asset/?version=1&amp;id=1010387</url></Content>
				<Content name="SkyboxRt"><url>http://www.roblox.com/asset/?version=1&amp;id=1010385</url></Content>
				<Content name="SkyboxUp"><url>http://www.roblox.com/asset/?version=1&amp;id=1010390</url></Content>
				<int name="StarCount">0</int>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX411">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>-9.15499404e-005</R00>
					<R01>-2.79379719e-009</R01>
					<R02>1</R02>
					<R10>1</R10>
					<R11>0</R11>
					<R12>9.15499404e-005</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>2.79388246e-009</R22>
				</CoordinateFrame>
				<string name="Name">Frag</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX412">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1003</int>
					<CoordinateFrame name="CFrame">
						<X>-165.065735</X>
						<Y>327.506287</Y>
						<Z>579.176758</Z>
						<R00>-0.985395432</R00>
						<R01>-0.170281693</R01>
						<R02>4.09681707e-005</R02>
						<R10>4.29143656e-005</R10>
						<R11>-7.74859836e-006</R11>
						<R12>1</R12>
						<R20>-0.170281693</R20>
						<R21>0.985395432</R21>
						<R22>1.49429652e-005</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>-2.0084337e-014</X>
						<Y>-0.0505371131</Y>
						<Z>2.63347856e-013</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">0</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Sound" referent="RBX413">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Fire</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><null></null></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
				<Item class="SpecialMesh" referent="RBX414">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=47679879 </url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX415">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = 20
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function throw()

if script.Parent.Rocket.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rocket.Clip.Value = script.Parent.Rocket.Clip.Value - 1

&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait(.03)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait(.03)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;crosshair.Value = size
&#9;repeat
&#9;if Tool.Parent == player.Backpack then return end
&#9;wait(.1)
&#9;crosshair.Value = crosshair.Value + 1
&#9;time = time + .1
&#9;if crosshair.Value == size + 10 then
&#9;crosshair.Value = size
&#9;end
&#9;if time &gt; 3 then
&#9;wee = true
&#9;end
&#9;until
&#9;wee == true
&#9;local fuse = (3.5 - time)
&#9;crosshair.Value = size
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(50), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(30), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(10), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-220), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;Tool.Handle.Transparency = 1
&#9;local newProj = Instance.new(&quot;Part&quot;)
&#9;Tool.Mesh:Clone().Parent = newProj
&#9;pos = Tool:findFirstChild(&quot;Handle&quot;).Position
&#9;dir = (pos - target).unit
&#9;pos = pos + (dir * -3)
&#9;newProj.Elasticity = 0
&#9;newProj.Friction = 1
&#9;newProj.BrickColor = Tool.Handle.BrickColor
&#9;newProj.Shape = 1
&#9;newProj.FormFactor = 0
&#9;newProj.CanCollide = true
&#9;newProj.Anchored = false
&#9;newProj.Size = Vector3.new(1, 1, 1)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;newProj.Name = &quot;WEE&quot;
&#9;twist = newProj.CFrame * CFrame.new(0,0,0)
&#9;newProj.Velocity = twist.lookVector * -140
&#9;newProj.RotVelocity=Vector3.new(0,-0, 0)
&#9;local bf = Instance.new(&quot;BodyForce&quot;,newProj)
&#9;bf.force = Vector3.new(0, newProj:GetMass() * 110,0)
&#9;local tick = Instance.new(&quot;IntValue&quot;, newProj)
&#9;tick.Name = &quot;Fuse&quot;
&#9;tick.Value = fuse
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;Tool.Explosion:clone().Parent = newProj
&#9;newProj.Parent = game.Workspace
&#9;local h = Tool:findFirstChild(&quot;LaserBlast&quot;):Clone()
&#9;h.Disabled = false
&#9;h.Parent = newProj
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rocket.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;end

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX416">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=47679879 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX417">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 300
ID = 1010
fuse = ball:findFirstChild(&quot;Fuse&quot;)
player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
ball.Explosion.PlayOnRemove = true
on = 0
target = {}
boom = 20
d= true
if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end

function bomb()

&#9;if on == 0 then
&#9;on = 1
&#9;else
&#9;return
&#9;end

&#9;ball.Anchored = true
&#9;ball.CanCollide = false
&#9;ball.Transparency = 1
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastPressure = 0
&#9;explosion.BlastRadius = boom
   explosion.Parent = game.Workspace
&#9;bam = game.Lighting.Explosion:Clone()
&#9;bam.Parent = game.Workspace
&#9;bam.CFrame = CFrame.new(explosion.Position)
&#9;bam.Blow.Disabled = false
&#9;bam.Name = &quot;Bomb&quot;
&#9;ball.Explosion:Play()
&#9;

&#9;-- find instigator tag
&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
   if creator then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance, creator) end)
&#9;end

&#9;wait(1)
&#9;ball:Destroy()

end
&#9;
function onPlayerBlownUp(hit, distance, creator)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and not bam.PlayerGui:findFirstChild(&quot;LOL&quot;) and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;end

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;end

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
--b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

ball.Touched:connect(function() if d then ball.Velocity = Vector3.new(ball.Velocity.X/3,ball.Velocity.y/5,ball.Velocity.Z/3) d= false end end)
wait(fuse.Value)
bomb()
</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX418">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.5</X>
					<Y>0.100000001</Y>
					<Z>0</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">357 Magnum</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX419">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX420">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">6</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX421">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">72</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX422">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 6
local ReloadTime = 0.05
local WalkSpeed = 18
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 250
local range
local hold = false
local dal = 30
local dah = 50
local ID = 1024
local hor = 0.1
local ver = 0.0002
GForward = Vector3.new(0, -1, 0)
GPos = Vector3.new(0.5, 0.1, 0)
GRight = Vector3.new(0, 0, -1)
GUp = Vector3.new(-1, 0, 0)
local press = false

------------------------------------------------------------------------------

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 3
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0),  math.rad(0))
for i = 1, 5 do
wait(.04/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), math.rad(i*2), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2+i*.02, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90-i*2), math.rad(i),  math.rad(0))
end

for i = 1, 5 do
wait(.04/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320-i*2), math.rad(10), math.rad(-90))
end

local gg = Tool:GetChildren()
Tool.Mag.Transparency = 1
for i = 1, #gg do
if gg[i].Name == &quot;Zed&quot; then
gg[i].Transparency = 0
elseif gg[i].Name == &quot;M1&quot; or gg[i].Name == &quot;M2&quot; or gg[i].Name == &quot;M3&quot; or gg[i].Name == &quot;M4&quot; or gg[i].Name == &quot;M5&quot; or gg[i].Name == &quot;M6&quot; then
gg[i].Transparency = 1
gg[i].Mesh.Offset = Vector3.new(0,0.4,0)
end
end
wait(.04/s)
for i = 1, 5 do
wait(.04/s)
weld33.C1 = CFrame.new(-1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100-i*2), math.rad(5+i),  math.rad(0))
end

for i = 1, 10 do
wait(.04/s)
weld33.C1 = CFrame.new(-1+i*.04, 0.4+i*.04, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110+i*3), math.rad(10),  math.rad(0))
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310-i), math.rad(10-i), math.rad(-90))

end

for i = 1, 10 do
for i = 1, #gg do
if gg[i].Name == &quot;M1&quot; or gg[i].Name == &quot;M2&quot; or gg[i].Name == &quot;M3&quot; or gg[i].Name == &quot;M4&quot; or gg[i].Name == &quot;M5&quot; or gg[i].Name == &quot;M6&quot; then
gg[i].Transparency = 0
gg[i].Mesh.Offset = gg[i].Mesh.Offset - Vector3.new(0,0.05,0)
end
end
weld55.C1 = CFrame.new(-0.3, 0.8+i*.02, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(-0), math.rad(-90+i))
wait(.04/s)
end

for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300-i*2), math.rad(-0), math.rad(-80))
wait(.04/s)
end

for i = 1, 2 do
weld55.C1 = CFrame.new(-0.3, 1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290+i*5), math.rad(-0), math.rad(-80))
weld33.C1 = CFrame.new(-.6, 0.8, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(10+i*2),  math.rad(0))
wait(.04/s)
end

Tool.Mag.Transparency = 0
for i = 1, #gg do
if gg[i].Name == &quot;Zed&quot; then
gg[i].Transparency = 1
elseif gg[i].Name == &quot;M1&quot; or gg[i].Name == &quot;M2&quot; or gg[i].Name == &quot;M3&quot; or gg[i].Name == &quot;M4&quot; or gg[i].Name == &quot;M5&quot; or gg[i].Name == &quot;M6&quot; then
gg[i].Transparency = 1

end
end
wait(.04/s)

for i = 1, 10 do
weld55.C1 = CFrame.new(-0.3, 1-i*.02, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300+i*2), math.rad(-0), math.rad(-80-i))
weld33.C1 = CFrame.new(-.6-i*.04, 0.8-i*.06, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80-i), math.rad(10-i),  math.rad(0))
wait(.04/s)
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0),  math.rad(0))

reloading = false
running.Value = false
end

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/5, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.6, -0.1, -0.08)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.6, 0, -0.08)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.6, 0.1, -0.08)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed then return end
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0, -1, 0.1)
Tool.GripPos = Vector3.new(0.5, 0.1, 0)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(-0, -1, 0.2)
Tool.GripPos = Vector3.new(0.55, 0.1, 0)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0, -1, 0.3)
Tool.GripPos = Vector3.new(0.6, 0.1, -0.08)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0, -1, 0.4)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0, -1, 0.5)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0, -1, 0.6)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0, -1, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(-0, -1, 0.75)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(-0, -1, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0, -1, 0.6)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0, -1, 0.5)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0, -1, 0.4)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0, -1, 0.3)
Tool.GripPos = Vector3.new(0.55, 0.1, -0.05)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0, -1, 0.2)
Tool.GripPos = Vector3.new(0.5, 0.1, 0)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0, -1, 0.1)
Tool.GripPos = Vector3.new(0.5, 0.1, 0)

wait()

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

GForward = Vector3.new(0, -1, 0)
GPos = Vector3.new(0.5, 0.1, 0)
GRight = Vector3.new(0, 0, -1)
GUp = Vector3.new(-1, 0, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;--run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="HopperBin" referent="RBX423">
			<Properties>
				<bool name="Active">false</bool>
				<token name="BinType">0</token>
				<string name="Name">Heavy Artillery Strike</string>
				<Content name="TextureId"><null></null></Content>
			</Properties>
			<Item class="SpecialMesh" referent="RBX424">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/Asset/?id=10207677</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.25</X>
						<Y>0.25</Y>
						<Z>0.25</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX425">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Local Gui</string>
					<ProtectedString name="Source">local Tool = script.Parent; --- Special Call of Duty script made by litozinnamon.

enabled = true
function onButton1Down(mouse)
&#9;if not enabled then
&#9;&#9;return
&#9;end

&#9;enabled = true

&#9;mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894890&quot; --- 20

end


function onButton1Up(mouse)
enabled = false
wait(0.01)

mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894890&quot; --- 20

wait(0.01)
enabled = true
end

function onSelected(mouse)

&#9;if mouse == nil then
&#9;&#9;print(&quot;Mouse not found&quot;)
&#9;&#9;return 
&#9;end

&#9;mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894890&quot; --- 20
&#9;mouse.Button1Down:connect(function() onButton1Down(mouse) end)&#9;
&#9;mouse.Button1Up:connect(function() onButton1Up(mouse)end)
end


script.Parent.Selected:connect(onSelected)
</ProtectedString>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX426">
				<Properties>
					<string name="Name">Clip</string>
					<int name="Value">1</int>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX427">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Fire!</string>
					<ProtectedString name="Source">Tool = script.Parent

position = nil

function onButton1Down(mouse)

if script.Parent.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Clip.Value = script.Parent.Clip.Value - 1

&#9;position = mouse.Hit.p

&#9;local vPlayer = script.Parent.Parent.Parent

&#9;script.Parent.Name = &quot;Firing...&quot;

&#9;wait(1)
&#9;p = Instance.new(&quot;Part&quot;)
&#9;p.Parent = game.Workspace
&#9;p.Position = position + Vector3.new(math.random(-50,50),50,math.random(-50,50))
&#9;p.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;p.Size = Vector3.new(1,3.4,1)
&#9;p.Elasticity = 0
&#9;p.Friction = 1
&#9;p.Name = &quot;Bomb&quot;
&#9;p.Transparency = 1
&#9;--p.Velocity = Vector3.new(0,-100,0)
&#9;--p.Anchored = true
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = vPlayer
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local mesh = script.Parent.Mesh:clone()
&#9;mesh.Parent = p
&#9;local bomb = script.Parent.LaserBlast:Clone()
&#9;bomb.Parent = p
&#9;bomb.Disabled = false

&#9;for i = 1, 150 do
&#9;wait(1)
&#9;p = Instance.new(&quot;Part&quot;)
&#9;p.Parent = game.Workspace
&#9;p.Position = position + Vector3.new(math.random(-60,60),50,math.random(-60,60))
&#9;p.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;p.Size = Vector3.new(1,3.4,1)
&#9;p.Elasticity = 0
&#9;p.Friction = 1
&#9;p.Name = &quot;Bomb&quot;
&#9;p.Transparency = 1
&#9;--p.Velocity = Vector3.new(0,-100,0)
&#9;--p.Anchored = true
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = vPlayer
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local mesh = script.Parent.Mesh:clone()
&#9;mesh.Parent = p
&#9;local bomb = script.Parent.LaserBlast:Clone()
&#9;bomb.Parent = p
&#9;bomb.Disabled = false
&#9;end

&#9;script.Parent:Destroy()

end

function Run(mouse)

if script.Parent.Clip.Value ~= 0 then
cam = game.Workspace.CurrentCamera
if cam:findFirstChild(&quot;circle&quot;) then
cam.circle:Destroy()
end

local hah = game.Lighting.circle:Clone()
hah.Parent = cam
hah.CFrame = CFrame.new(mouse.Hit.p)
game.Debris:AddItem(hah,10)
end

end

function onSelected(mouse)
mouse.Button1Down:connect(function() if workspace.Change_Map.Prev.Value == &quot;Twin Bunkers&quot; then return end if Tool.Parent:findFirstChild(&quot;Firing...&quot;) then return end onButton1Down(mouse) end)
while true do
wait(.03)
Run(mouse)
end
end



script.Parent.Selected:connect(on)
script.Parent.Selected:connect(onSelected)
</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX428">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,10)
damage = 1000
ID = 1037
boom = 25
target = {}
player = ball.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
on = 0
if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end
fly = true

function appear()
coroutine.resume(coroutine.create(function()
while fly do
ball.Transparency = ball.Transparency - 0.01
ball.Position = ball.Position-Vector3.new(0,1,0)
wait(.03)
end
end))
end

function blow(hit)

&#9;if hit.Name == &quot;Bomb&quot; then return end

&#9;if not hit.CanCollide and not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;return
&#9;end

&#9;if on == 1 then return end
&#9;on = 1
&#9;fly = false
&#9;ball.Anchored = true
&#9;ball.CanCollide = false
&#9;ball.Transparency = 1
&#9;--swoosh:stop()
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastRadius = boom
&#9;explosion.BlastPressure = 0
&#9;explosion.Parent = game.Workspace
&#9;--script.Parent.Explosion:Destroy()

&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
&#9;if creator then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance) end)
&#9;end
&#9;
&#9;connection:disconnect()
&#9;wait(1)
&#9;ball:Destroy()

end

function onPlayerBlownUp(hit, distance)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) ~= nil then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

connection = ball.Touched:connect(blow)
appear()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="HopperBin" referent="RBX429">
			<Properties>
				<bool name="Active">false</bool>
				<token name="BinType">0</token>
				<string name="Name">Artillery Strike</string>
				<Content name="TextureId"><null></null></Content>
			</Properties>
			<Item class="SpecialMesh" referent="RBX430">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/Asset/?id=10207677</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.25</X>
						<Y>0.25</Y>
						<Z>0.25</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX431">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Local Gui</string>
					<ProtectedString name="Source">local Tool = script.Parent; --- Special Call of Duty script made by litozinnamon.

enabled = true
function onButton1Down(mouse)
&#9;if not enabled then
&#9;&#9;return
&#9;end

&#9;enabled = true

&#9;mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894890&quot; --- 20

end


function onButton1Up(mouse)
enabled = false
wait(0.01)

mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894890&quot; --- 20

wait(0.01)
enabled = true
end

function onSelected(mouse)

&#9;if mouse == nil then
&#9;&#9;print(&quot;Mouse not found&quot;)
&#9;&#9;return 
&#9;end

&#9;mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894890&quot; --- 20
&#9;mouse.Button1Down:connect(function() onButton1Down(mouse) end)&#9;
&#9;mouse.Button1Up:connect(function() onButton1Up(mouse)end)
end


script.Parent.Selected:connect(onSelected)
</ProtectedString>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX432">
				<Properties>
					<string name="Name">Clip</string>
					<int name="Value">1</int>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX433">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Fire!</string>
					<ProtectedString name="Source">Tool = script.Parent

position = nil

function onButton1Down(mouse)

if script.Parent.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Clip.Value = script.Parent.Clip.Value - 1

&#9;position = mouse.Hit.p

&#9;local vPlayer = script.Parent.Parent.Parent

&#9;script.Parent.Name = &quot;Firing...&quot;

&#9;wait(1)
&#9;p = Instance.new(&quot;Part&quot;)
&#9;p.Parent = game.Workspace
&#9;p.Position = position + Vector3.new(0,50,0)
&#9;p.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;p.Size = Vector3.new(1,3.4,1)
&#9;p.Elasticity = 0
&#9;p.Friction = 1
&#9;p.Name = &quot;Bomb&quot;
&#9;p.Transparency = 1
&#9;--p.Velocity = Vector3.new(0,-100,0)
&#9;--p.Anchored = true
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = vPlayer
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local mesh = script.Parent.Mesh:clone()
&#9;mesh.Parent = p
&#9;local bomb = script.Parent.LaserBlast:Clone()
&#9;bomb.Parent = p
&#9;bomb.Disabled = false

&#9;for i = 1, 75 do
&#9;wait(1.5)
&#9;p = Instance.new(&quot;Part&quot;)
&#9;p.Parent = game.Workspace
&#9;p.Position = position + Vector3.new(math.random(-40,40),50,math.random(-40,40))
&#9;p.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;p.Size = Vector3.new(1,3.4,1)
&#9;p.Elasticity = 0
&#9;p.Friction = 1
&#9;p.Name = &quot;Bomb&quot;
&#9;p.Transparency = 1
&#9;--p.Velocity = Vector3.new(0,-100,0)
&#9;--p.Anchored = true
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = vPlayer
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local mesh = script.Parent.Mesh:clone()
&#9;mesh.Parent = p
&#9;local bomb = script.Parent.LaserBlast:Clone()
&#9;bomb.Parent = p
&#9;bomb.Disabled = false
&#9;end

&#9;script.Parent:Destroy()

end

function Run(mouse)

if script.Parent.Clip.Value ~= 0 then
cam = game.Workspace.CurrentCamera
if cam:findFirstChild(&quot;circle&quot;) then
cam.circle:Destroy()
end

local hah = game.Lighting.circle:Clone()
hah.Parent = cam
hah.CFrame = CFrame.new(mouse.Hit.p)
game.Debris:AddItem(hah,10)
end

end

function onSelected(mouse)
mouse.Button1Down:connect(function() if workspace.Change_Map.Prev.Value == &quot;Twin Bunkers&quot; then return end if Tool.Parent:findFirstChild(&quot;Firing...&quot;) then return end onButton1Down(mouse) end)
while true do
wait(.03)
Run(mouse)
end
end



script.Parent.Selected:connect(on)
script.Parent.Selected:connect(onSelected)
</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX434">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,10)
damage = 700
ID = 1037
boom = 20
target = {}
player = ball.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
on = 0
if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end
fly = true

function appear()
coroutine.resume(coroutine.create(function()
while fly do
ball.Transparency = ball.Transparency - 0.01
ball.Position = ball.Position-Vector3.new(0,1,0)
wait(.03)
end
end))
end

function blow(hit)

&#9;if hit.Name == &quot;Bomb&quot; then return end

&#9;if not hit.CanCollide and not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;return
&#9;end

&#9;if on == 1 then return end
&#9;on = 1
&#9;fly = false
&#9;ball.Anchored = true
&#9;ball.CanCollide = false
&#9;ball.Transparency = 1
&#9;--swoosh:stop()
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastRadius = boom
&#9;explosion.BlastPressure = 0
&#9;explosion.Parent = game.Workspace
&#9;--script.Parent.Explosion:Destroy()

&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
&#9;if creator then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance) end)
&#9;end
&#9;
&#9;connection:disconnect()
&#9;wait(1)
&#9;ball:Destroy()

end

function onPlayerBlownUp(hit, distance)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

connection = ball.Touched:connect(blow)
appear()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="HopperBin" referent="RBX435">
			<Properties>
				<bool name="Active">false</bool>
				<token name="BinType">0</token>
				<string name="Name">Ammo Drop</string>
				<Content name="TextureId"><null></null></Content>
			</Properties>
			<Item class="LocalScript" referent="RBX436">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Local Gui</string>
					<ProtectedString name="Source">local Tool = script.Parent; --- Special Call of Duty script made by litozinnamon.

enabled = true
function onButton1Down(mouse)
&#9;if not enabled then
&#9;&#9;return
&#9;end

&#9;enabled = true

&#9;mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894872&quot; --- 15

end


function onButton1Up(mouse)
enabled = false
wait(0.01)

mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894872&quot; --- 15

wait(0.01)
enabled = true
end

function onSelected(mouse)

&#9;if mouse == nil then
&#9;&#9;print(&quot;Mouse not found&quot;)
&#9;&#9;return 
&#9;end

&#9;mouse.Icon = &quot;http://www.roblox.com/asset/?id=47894872&quot; --- 15
&#9;mouse.Button1Down:connect(function() onButton1Down(mouse) end)&#9;
&#9;mouse.Button1Up:connect(function() onButton1Up(mouse)end)
end


script.Parent.Selected:connect(onSelected)
</ProtectedString>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX437">
				<Properties>
					<string name="Name">Clip</string>
					<int name="Value">1</int>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX438">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Fire!</string>
					<ProtectedString name="Source">Tool = script.Parent

position = nil

function onButton1Down(mouse)

if script.Parent.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Clip.Value = script.Parent.Clip.Value - 1

&#9;position = mouse.Hit.p

&#9;script.Parent.Name = &quot;Dropping Ammo Crates&quot;

&#9;for i = 1, 5 do
&#9;wait(1)
&#9;p = game.Lighting:findFirstChild(&quot;Box&quot;):Clone()
&#9;p.LOL.Disabled = false
&#9;p.Parent = game.Workspace
&#9;p.Velocity = Vector3.new(0,-10,0)
&#9;p.Position = position + Vector3.new(math.random(-10,10), 40,math.random(-10,10))
&#9;end

&#9;cam = game.Workspace.CurrentCamera
&#9;if cam:findFirstChild(&quot;circle&quot;) then
&#9;cam.circle:remove()
&#9;end
&#9;wait(5)
&#9;script.Parent:remove()

end

function Run(mouse)

if script.Parent.Clip.Value ~= 0 then
cam = game.Workspace.CurrentCamera
if cam:findFirstChild(&quot;circle&quot;) then
cam.circle:remove()
end

local hah = game.Lighting.circle:Clone()
hah.Parent = cam
hah.CFrame = CFrame.new(mouse.Hit.p)
game.Debris:AddItem(hah,10)
end

end

function onSelected(mouse)
mouse.Button1Down:connect(function() onButton1Down(mouse) end)
while true do
wait(.03)
Run(mouse)
end
end


script.Parent.Selected:connect(onSelected)
</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX439">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">2</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">2</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">21</int>
				<CoordinateFrame name="CFrame">
					<X>1.39999998</X>
					<Y>0.109314717</Y>
					<Z>2.4000001</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">2</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">2</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">circle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">2</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">2</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0.5</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.20000005</X>
					<Y>0.200000003</Y>
					<Z>1.20000005</Z>
				</Vector3>
			</Properties>
			<Item class="CylinderMesh" referent="RBX440">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>10</X>
						<Y>1</Y>
						<Z>10</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX441">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">21</int>
				<CoordinateFrame name="CFrame">
					<X>0.5</X>
					<Y>1.20041692</Y>
					<Z>432.47998</Z>
					<R00>5.34682295e-005</R00>
					<R01>1.23517841e-013</R01>
					<R02>1</R02>
					<R10>-4.3159529e-005</R10>
					<R11>1</R11>
					<R12>2.30754016e-009</R12>
					<R20>-1</R20>
					<R21>-4.3159529e-005</R21>
					<R22>5.34682295e-005</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Explosion</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">2</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>2.4000001</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX442">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1323306</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>5</X>
						<Y>5</Y>
						<Z>5</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX443">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Blow</string>
					<ProtectedString name="Source">exp = script.Parent

function animate()

for i = 1, 15 do
exp.Mesh.Scale = Vector3.new(i,i,i)
wait()
end

for i = 1, 10 do
exp.Transparency = exp.Transparency + .1
exp.Mesh.Scale = Vector3.new(15-i,15-i,15-i)
wait()
end

exp:remove()

end 

animate()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX444">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">24</int>
				<CoordinateFrame name="CFrame">
					<X>65.6999969</X>
					<Y>4.70000029</Y>
					<Z>43.4000015</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0</float>
				<float name="Friction">0</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Bullet</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.600000024</X>
					<Y>0.600000024</Y>
					<Z>1.5</Z>
				</Vector3>
			</Properties>
			<Item class="IntValue" referent="RBX445">
				<Properties>
					<string name="Name">DL</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX446">
				<Properties>
					<string name="Name">DH</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="BlockMesh" referent="RBX447">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>-1</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.150000006</X>
						<Y>0.150000006</Y>
						<Z>2</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX448">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">192</int>
				<CoordinateFrame name="CFrame">
					<X>-14</X>
					<Y>27.3999996</Y>
					<Z>431.5</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">1</float>
				<float name="Friction">1</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Box</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>1.20000005</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX449">
				<Properties>
					<token name="Face">1</token>
					<string name="Name">creator</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=22395117</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX450">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><null></null></Content>
					<token name="MeshType">6</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>0.75</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX451">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LOL</string>
					<ProtectedString name="Source">hi = script.Parent
game.Debris:AddItem(hi,50)
on = false

function onTouch(hit)

if on == true then return end

&#9;if hit.Parent:findFirstChild(&quot;Humanoid&quot;) ~= nil then

&#9;&#9;wait()

&#9;&#9;on = true

&#9;&#9;local player = game.Players:GetPlayerFromCharacter(hit.Parent)
&#9;&#9;local gun = player.Character:GetChildren()

&#9;&#9;for i = 1, #gun do
&#9;&#9;&#9;if gun[i].className == &quot;Tool&quot; then
&#9;&#9;&#9;&#9;if gun[i]:findFirstChild(&quot;AmmoScript&quot;) ~= nil then
&#9;&#9;&#9;&#9;gun[i].AmmoScript.Clip.Value = gun[i].AmmoScript.Clip.Value + 30
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local weap = player.Backpack:GetChildren()

&#9;&#9;for i = 1, #weap do
&#9;&#9;&#9;if weap[i].className == &quot;Tool&quot; then
&#9;&#9;&#9;&#9;if weap[i]:findFirstChild(&quot;AmmoScript&quot;) ~= nil then
&#9;&#9;&#9;&#9;weap[i].AmmoScript.Clip.Value = weap[i].AmmoScript.Clip.Value + 30
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local bomb = player.Character:GetChildren()

&#9;&#9;for i = 1, #bomb do
&#9;&#9;&#9;if bomb[i].className == &quot;Tool&quot; then
&#9;&#9;&#9;&#9;if bomb[i]:findFirstChild(&quot;Rocket&quot;) ~= nil then
&#9;&#9;&#9;&#9;bomb[i].Rocket.Clip.Value = bomb[i].Rocket.Clip.Value + 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local wp = player.Backpack:GetChildren()

&#9;&#9;for i = 1, #wp do
&#9;&#9;&#9;if wp[i].className == &quot;Tool&quot; then
&#9;&#9;&#9;&#9;if weap[i]:findFirstChild(&quot;Rocket&quot;) ~= nil then
&#9;&#9;&#9;&#9;wp[i].Rocket.Clip.Value = wp[i].Rocket.Clip.Value + 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;script.Parent:remove()

&#9;end

end 


hi.Touched:connect(onTouch)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX452">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Drops</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="ScreenGui" referent="RBX453">
				<Properties>
					<string name="Name">Key</string>
				</Properties>
				<Item class="TextLabel" referent="RBX454">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.600000024</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">2</token>
						<token name="FontSize">5</token>
						<string name="Name">Weapon</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-200</XO>
							<YS>0.700000048</YS>
							<YO>-20</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>400</XO>
							<YS>0</YS>
							<YO>40</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text"></string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX455">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX456">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX457">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GunWeld</string>
					<ProtectedString name="Source">local tool = script.Parent
local han = tool:FindFirstChild(&quot;Handle&quot;)
game.Debris:AddItem(tool,60)
local MasterCFrameValues = {}
local meta = {
__call = function(tab,arg)
&#9;for i = 1, #tab do
&#9;&#9;if tab[i][1] == arg then
&#9;&#9;&#9;return tab[i][2]
&#9;&#9;end
&#9;end
&#9;return CFrame.new()
end}
setmetatable(MasterCFrameValues,meta)

local ch = tool:GetChildren()
for i = 1, #ch do
&#9;if ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;table.insert(MasterCFrameValues,{ch[i],ch[i].CFrame:inverse()})
&#9;&#9;ch[i].Anchored = false
&#9;&#9;ch[i].CanCollide = true
&#9;end
end

function weld()
&#9;
&#9;if not han then
&#9;&#9;print(&quot;Handle went bye bye&quot;)
&#9;&#9;return
&#9;end
&#9;local ch = han:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;Weld&quot;) then
&#9;&#9;&#9;ch[i]:Destroy()
&#9;&#9;end
&#9;end
&#9;local ch = tool:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i] ~= han and ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;w.Part0 = han
&#9;&#9;&#9;w.Part1 = ch[i]
&#9;&#9;&#9;w.C0 = MasterCFrameValues(han)
&#9;&#9;&#9;w.C1 = MasterCFrameValues(ch[i])
&#9;&#9;&#9;w.Parent = han
&#9;&#9;end
&#9;end
end

function freeze()
&#9;local map = workspace:findFirstChild(&quot;field&quot;)
&#9;if not han or not map or (han.Position - map.Teleport.R1.Position).Magnitude &gt; 2000 then print(&quot;errored&quot;) script.Parent:Destroy() return end
&#9;local ch = tool:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;ch[i].Anchored = true
&#9;&#9;ch[i].CanCollide = false
&#9;&#9;end
&#9;end
&#9;local ch = han:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;Weld&quot;) then
&#9;&#9;&#9;ch[i]:Destroy()
&#9;&#9;end
&#9;end
end

weld()
wait(5)
freeze()
script:Destroy()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX458">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Crate</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="Part" referent="RBX459">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">2</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">24</int>
					<CoordinateFrame name="CFrame">
						<X>-5.5</X>
						<Y>23.8999996</Y>
						<Z>1.5</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Trigger</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">2</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1.4000001</X>
						<Y>0.200000003</Y>
						<Z>1.4000001</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX460">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>-0.100000001</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.100000001</X>
							<Y>1.5</Y>
							<Z>0.300000012</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Sound" referent="RBX461">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Explosion</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>rbxasset://sounds//Rocket shot.wav</url></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX462">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">2</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1003</int>
					<CoordinateFrame name="CFrame">
						<X>-5.5</X>
						<Y>24.1000004</Y>
						<Z>1.5</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">2</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>0.200000003</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX463">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>-0.600000024</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1.20000005</X>
							<Y>2.29999995</Y>
							<Z>0.5</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Model" referent="RBX464">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Boxy</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="BoolValue" referent="RBX465">
				<Properties>
					<string name="Name">run</string>
					<bool name="Value">false</bool>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX466">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxasset://fonts/sword.mesh</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Knifemesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>-0.5</X>
						<Y>0.600000024</Y>
						<Z>-0.400000006</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX467">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Rocket</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)
&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;if Tool.Name == &quot;Satchel Charge&quot; then
&#9;&#9;g.Text = &quot;Click to throw a charge, Press R to detonate it    &quot; ..Tool.Name.. &quot;                           &quot; 
&#9;&#9;else
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 
&#9;&#9;end

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if clip.Value &lt; 3 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low on &quot; ..Tool.Name.. &quot;&apos;s&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if clip.Value &gt; 3 then
&#9;&#9;warn.Visible = false
&#9;&#9;x.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.Text = &quot;No more &quot; ..Tool.Name.. &quot;&apos;s&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end

end

script.Parent.Equipped:connect(equip)
clip.Changed:connect(equip)
</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX468">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Sound" referent="RBX469">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Explosion</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds//Rocket shot.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX470">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Cursor</string>
					<ProtectedString name="Source">loadstring(&aposapos;)()     </ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX471">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Reset</string>
				<ProtectedString name="Source">local player = game.Players.LocalPlayer
player.CameraMode = 0
player.PlayerGui.Update.LOL.Visible = false
workspace.CurrentCamera.FieldOfView = 70
script:Destroy()</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX472">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Menu</string>
				<ProtectedString name="Source">loadstring(&quot;\108\111\99\97\108\32\109\101\110\117\32\61\32\115\99\114\105\112\116\46\80\97\114\101\110\116\10\108\111\99\97\108\32\103\117\105\32\61\32\109\101\110\117\46\80\97\114\101\110\116\10\108\111\99\97\108\32\99\108\97\115\115\32\61\32\109\101\110\117\46\67\108\97\115\115\10\108\111\99\97\108\32\99\117\115\116\111\109\32\61\32\109\101\110\117\46\67\117\115\116\111\109\10\108\111\99\97\108\32\101\110\116\101\114\32\61\32\109\101\110\117\46\69\110\116\101\114\10\108\111\99\97\108\32\112\108\97\121\101\114\32\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\10\108\111\99\97\108\32\112\114\105\109\32\61\32\112\108\97\121\101\114\46\80\114\105\109\10\108\111\99\97\108\32\115\97\114\109\32\61\32\112\108\97\121\101\114\46\83\105\100\101\10\108\111\99\97\108\32\110\97\100\101\32\61\32\112\108\97\121\101\114\46\78\97\100\101\10\108\111\99\97\108\32\112\101\114\107\49\32\61\32\112\108\97\121\101\114\46\80\101\114\107\49\10\108\111\99\97\108\32\112\101\114\107\50\32\61\32\112\108\97\121\101\114\46\80\101\114\107\50\10\108\111\99\97\108\32\112\101\114\107\51\32\61\32\112\108\97\121\101\114\46\80\101\114\107\51\10\108\111\99\97\108\32\115\116\111\114\101\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\10\108\111\99\97\108\32\97\108\108\105\101\115\32\61\32\103\97\109\101\46\84\101\97\109\115\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\65\108\108\105\101\115\34\41\10\108\111\99\97\108\32\97\120\105\115\32\61\32\103\97\109\101\46\84\101\97\109\115\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\65\120\105\115\34\41\10\108\111\99\97\108\32\99\108\105\99\107\101\100\32\61\32\102\97\108\115\101\10\10\45\45\45\32\103\117\110\32\108\105\115\116\32\45\45\45\10\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\45\10\108\111\99\97\108\32\115\116\111\114\97\103\101\32\61\32\54\55\50\50\49\53\49\53\10\108\111\99\97\108\32\97\114\105\115\97\107\97\32\61\32\54\54\56\57\56\51\48\48\10\108\111\99\97\108\32\98\114\101\110\32\61\32\54\54\57\48\56\55\51\49\10\108\111\99\97\108\32\98\97\114\32\61\32\54\54\57\48\56\51\57\48\10\108\111\99\97\108\32\100\112\50\56\32\61\32\54\54\57\49\49\51\57\51\10\108\111\99\97\108\32\100\98\32\61\32\54\54\57\49\49\52\57\52\10\108\111\99\97\108\32\100\117\97\108\109\49\32\61\32\54\54\57\49\49\53\48\54\10\108\111\99\97\108\32\100\117\97\108\109\97\103\32\61\32\54\54\57\49\49\53\50\49\10\108\111\99\97\108\32\100\117\97\108\110\97\109\32\61\32\54\54\57\49\49\53\51\53\10\108\111\99\97\108\32\100\117\97\108\112\51\56\32\61\32\54\54\57\49\49\53\52\57\10\108\111\99\97\108\32\100\117\97\108\116\116\32\61\32\54\54\57\49\49\53\53\53\10\108\111\99\97\108\32\100\117\97\108\108\117\32\61\32\55\49\49\56\53\54\50\54\10\108\111\99\97\108\32\102\103\52\50\32\61\32\54\54\57\49\49\53\54\54\10\108\111\99\97\108\32\110\97\109\98\117\32\61\32\54\54\56\57\56\51\52\54\10\108\111\99\97\108\32\109\97\103\110\117\109\32\61\32\56\51\56\49\50\52\57\52\10\108\111\99\97\108\32\103\101\119\101\104\114\32\61\32\54\54\57\49\49\57\50\56\10\108\111\99\97\108\32\107\97\114\32\61\32\54\54\57\49\49\57\52\50\10\108\111\99\97\108\32\107\97\114\115\99\111\112\101\32\61\32\54\54\57\49\49\57\53\54\10\108\111\99\97\108\32\108\101\101\32\61\32\54\54\57\49\49\57\55\49\10\108\111\99\97\108\32\99\97\114\98\105\110\101\32\61\32\54\54\57\49\50\48\49\50\10\108\111\99\97\108\32\103\97\114\97\110\100\32\61\32\54\54\57\49\50\48\51\49\10\108\111\99\97\108\32\116\104\111\109\112\115\111\110\32\61\32\54\54\57\49\50\48\52\56\10\108\111\99\97\108\32\109\49\57\49\49\32\61\32\54\54\57\49\50\48\55\49\10\108\111\99\97\108\32\98\114\111\119\110\105\110\103\32\61\32\54\54\57\49\50\51\53\52\10\108\111\99\97\108\32\109\103\52\50\32\61\32\54\54\57\49\50\51\54\52\10\108\111\99\97\108\32\109\112\52\48\32\61\32\54\54\57\49\50\51\55\51\10\108\111\99\97\108\32\109\111\115\105\110\32\61\32\54\54\57\49\50\51\56\51\10\108\111\99\97\108\32\109\111\115\105\110\115\99\111\112\101\32\61\32\55\51\53\54\51\50\51\51\10\108\111\99\97\108\32\112\51\56\32\61\32\54\54\57\49\50\51\56\54\10\108\111\99\97\108\32\112\112\115\104\32\61\32\54\54\57\49\50\51\57\52\10\108\111\99\97\108\32\112\116\114\115\32\61\32\54\54\57\49\50\52\48\54\10\108\111\99\97\108\32\115\116\103\32\61\32\54\54\57\49\50\52\50\51\10\108\111\99\97\108\32\115\118\116\32\61\32\54\54\57\49\50\52\51\49\10\108\111\99\97\108\32\115\112\114\105\110\103\32\61\32\54\54\57\49\50\53\55\49\10\108\111\99\97\108\32\115\112\114\105\110\103\115\99\111\112\101\32\61\32\54\54\57\49\50\53\55\52\10\108\111\99\97\108\32\115\116\101\110\32\61\32\54\54\57\49\50\53\56\49\10\108\111\99\97\108\32\116\102\50\32\61\32\54\54\57\49\50\53\57\53\10\108\111\99\97\108\32\116\116\51\51\32\61\32\54\54\57\49\50\54\48\48\10\108\111\99\97\108\32\116\114\101\110\99\104\32\61\32\54\54\57\49\50\54\48\55\10\108\111\99\97\108\32\116\121\112\101\49\48\48\32\61\32\54\54\57\49\50\54\49\55\10\108\111\99\97\108\32\116\121\112\101\57\57\32\61\32\54\54\57\49\50\54\50\54\10\108\111\99\97\108\32\108\117\103\101\114\32\61\32\55\48\49\57\56\53\55\53\10\108\111\99\97\108\32\109\111\110\32\61\32\55\54\55\54\53\53\55\48\10\108\111\99\97\108\32\109\97\120\32\61\32\55\56\55\56\52\53\48\55\10\108\111\99\97\108\32\97\114\105\115\99\111\112\101\32\61\32\56\49\56\52\48\51\48\56\10\102\117\110\99\116\105\111\110\32\67\111\108\108\101\99\116\71\117\110\40\119\101\112\41\10\10\108\111\99\97\108\32\99\111\100\32\61\32\48\10\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\65\114\105\115\97\107\97\34\32\116\104\101\110\10\9\99\111\100\32\61\32\97\114\105\115\97\107\97\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\65\114\105\115\97\107\97\32\83\99\111\112\101\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\97\114\105\115\99\111\112\101\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\66\114\101\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\98\114\101\110\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\66\97\114\32\71\117\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\98\97\114\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\80\45\50\56\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\112\50\56\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\66\32\83\104\111\116\103\117\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\98\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\117\97\108\32\77\49\57\49\49\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\117\97\108\109\49\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\117\97\108\32\77\97\103\110\117\109\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\117\97\108\109\97\103\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\117\97\108\32\78\97\109\98\117\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\117\97\108\110\97\109\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\117\97\108\32\80\51\56\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\117\97\108\112\51\56\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\117\97\108\32\84\84\45\51\51\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\117\97\108\116\116\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\68\117\97\108\32\76\117\103\101\114\34\32\116\104\101\110\10\9\99\111\100\32\61\32\100\117\97\108\108\117\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\70\71\52\50\34\32\116\104\101\110\10\9\99\111\100\32\61\32\102\103\52\50\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\78\97\109\98\117\34\32\116\104\101\110\10\9\99\111\100\32\61\32\110\97\109\98\117\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\51\53\55\32\77\97\103\110\117\109\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\97\103\110\117\109\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\71\101\119\101\104\114\32\52\51\34\32\116\104\101\110\10\9\99\111\100\32\61\32\103\101\119\101\104\114\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\75\97\114\57\56\75\34\32\116\104\101\110\10\9\99\111\100\32\61\32\107\97\114\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\75\97\114\57\56\75\32\83\99\111\112\101\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\107\97\114\115\99\111\112\101\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\76\101\101\45\69\110\102\105\101\108\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\108\101\101\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\49\32\67\97\114\98\105\110\101\34\32\116\104\101\110\10\9\99\111\100\32\61\32\99\97\114\98\105\110\101\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\49\32\71\97\114\97\110\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\103\97\114\97\110\100\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\49\32\84\104\111\109\112\115\111\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\116\104\111\109\112\115\111\110\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\49\57\49\49\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\49\57\49\49\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\49\57\49\57\32\66\114\111\119\110\105\110\103\34\32\116\104\101\110\10\9\99\111\100\32\61\32\98\114\111\119\110\105\110\103\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\71\52\50\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\103\52\50\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\80\52\48\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\112\52\48\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\111\115\105\110\32\78\97\103\97\110\116\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\111\115\105\110\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\111\115\105\110\32\78\97\103\97\110\116\32\83\99\111\112\101\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\111\115\105\110\115\99\111\112\101\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\80\51\56\34\32\116\104\101\110\10\9\99\111\100\32\61\32\112\51\56\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\80\80\83\104\45\52\49\34\32\116\104\101\110\10\9\99\111\100\32\61\32\112\112\115\104\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\80\84\82\83\45\52\49\34\32\116\104\101\110\10\9\99\111\100\32\61\32\112\116\114\115\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\83\84\71\45\52\52\34\32\116\104\101\110\10\9\99\111\100\32\61\32\115\116\103\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\83\86\84\45\52\48\34\32\116\104\101\110\10\9\99\111\100\32\61\32\115\118\116\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\83\112\114\105\110\103\102\105\101\108\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\115\112\114\105\110\103\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\83\112\114\105\110\103\102\105\101\108\100\32\83\99\111\112\101\100\34\32\116\104\101\110\10\9\99\111\100\32\61\32\115\112\114\105\110\103\115\99\111\112\101\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\83\116\101\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\115\116\101\110\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\84\70\50\65\117\115\115\105\101\34\32\116\104\101\110\10\9\99\111\100\32\61\32\116\102\50\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\84\84\45\51\51\34\32\116\104\101\110\10\9\99\111\100\32\61\32\116\116\51\51\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\84\114\101\110\99\104\32\71\117\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\116\114\101\110\99\104\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\84\121\112\101\32\49\48\48\34\32\116\104\101\110\10\9\99\111\100\32\61\32\116\121\112\101\49\48\48\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\84\121\112\101\32\57\57\34\32\116\104\101\110\10\9\99\111\100\32\61\32\116\121\112\101\57\57\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\76\117\103\101\114\34\32\116\104\101\110\10\9\99\111\100\32\61\32\108\117\103\101\114\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\111\110\68\114\97\103\111\110\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\111\110\10\101\108\115\101\105\102\32\119\101\112\46\78\97\109\101\32\61\61\32\34\77\97\120\105\109\34\32\116\104\101\110\10\9\99\111\100\32\61\32\109\97\120\10\101\110\100\10\10\9\108\111\99\97\108\32\103\101\101\32\61\32\119\101\112\58\71\101\116\67\104\105\108\100\114\101\110\40\41\10\9\102\111\114\32\105\32\61\32\49\44\32\35\103\101\101\32\100\111\10\9\103\101\101\91\105\93\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\101\110\100\10\10\9\108\111\99\97\108\32\109\111\100\101\108\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\73\110\115\101\114\116\83\101\114\118\105\99\101\34\41\58\76\111\97\100\65\115\115\101\116\40\99\111\100\41\10\9\105\102\40\109\111\100\101\108\58\73\115\65\40\34\77\111\100\101\108\34\41\41\32\116\104\101\110\10\9\9\108\111\99\97\108\32\116\97\98\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\73\110\115\101\114\116\83\101\114\118\105\99\101\34\41\58\73\110\115\101\114\116\40\109\111\100\101\108\41\32\10\9\9\108\111\99\97\108\32\112\97\114\116\32\61\32\109\111\100\101\108\58\71\101\116\67\104\105\108\100\114\101\110\40\41\10\9\9\102\111\114\32\105\32\61\32\49\44\32\35\112\97\114\116\32\100\111\10\9\9\9\112\97\114\116\91\105\93\46\80\97\114\101\110\116\32\61\32\119\101\112\10\9\9\9\105\102\32\112\97\114\116\91\105\93\46\78\97\109\101\32\61\61\32\34\77\97\103\34\32\111\114\32\112\97\114\116\91\105\93\46\78\97\109\101\32\61\61\32\34\77\97\103\50\34\32\111\114\32\112\97\114\116\91\105\93\46\78\97\109\101\32\61\61\32\34\77\97\103\51\34\32\111\114\32\112\97\114\116\91\105\93\46\78\97\109\101\32\61\61\32\34\77\97\103\52\34\32\111\114\32\112\97\114\116\91\105\93\46\78\97\109\101\32\61\61\32\34\77\97\103\53\34\32\111\114\32\112\97\114\116\91\105\93\46\78\97\109\101\32\61\61\32\34\77\97\103\54\34\32\116\104\101\110\10\9\9\9\112\97\114\116\91\105\93\46\65\114\99\104\105\118\97\98\108\101\32\61\32\116\114\117\101\10\9\9\9\101\108\115\101\10\9\9\9\112\97\114\116\91\105\93\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\9\9\101\110\100\10\9\9\101\110\100\10\9\109\111\100\101\108\58\68\101\115\116\114\111\121\40\41\10\9\119\101\112\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\101\110\100\10\10\9\108\111\99\97\108\32\109\111\100\101\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\73\110\115\101\114\116\83\101\114\118\105\99\101\34\41\58\76\111\97\100\65\115\115\101\116\40\115\116\111\114\97\103\101\41\10\9\105\102\40\109\111\100\101\58\73\115\65\40\34\77\111\100\101\108\34\41\41\32\116\104\101\110\10\9\108\111\99\97\108\32\116\97\98\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\73\110\115\101\114\116\83\101\114\118\105\99\101\34\41\58\73\110\115\101\114\116\40\109\111\100\101\41\32\10\9\9\108\111\99\97\108\32\104\97\104\32\61\32\109\111\100\101\58\71\101\116\67\104\105\108\100\114\101\110\40\41\10\9\9\102\111\114\32\105\32\61\32\49\44\32\35\104\97\104\32\100\111\10\9\9\104\97\104\91\105\93\46\80\97\114\101\110\116\32\61\32\119\101\112\10\9\9\9\105\102\32\104\97\104\91\105\93\46\78\97\109\101\32\61\61\32\34\75\110\105\102\101\109\101\115\104\34\32\116\104\101\110\10\9\9\9\104\97\104\91\105\93\46\65\114\99\104\105\118\97\98\108\101\32\61\32\116\114\117\101\10\9\9\9\101\108\115\101\10\9\9\9\104\97\104\91\105\93\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\9\9\101\110\100\10\9\9\101\110\100\10\9\109\111\100\101\58\68\101\115\116\114\111\121\40\41\10\9\101\110\100\10\10\101\110\100\10\10\102\117\110\99\116\105\111\110\32\67\111\108\108\101\99\116\69\120\112\40\97\104\44\112\101\41\10\10\9\108\111\99\97\108\32\98\111\120\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\46\66\111\120\121\58\71\101\116\67\104\105\108\100\114\101\110\40\41\10\9\102\111\114\32\105\32\61\32\49\44\32\35\98\111\120\32\100\111\10\9\108\111\99\97\108\32\104\101\121\32\61\32\98\111\120\91\105\93\58\67\108\111\110\101\40\41\10\9\104\101\121\46\80\97\114\101\110\116\32\61\32\97\104\10\9\9\105\102\32\112\101\32\61\61\32\49\32\97\110\100\32\104\101\121\46\78\97\109\101\32\61\61\32\34\82\111\99\107\101\116\34\32\116\104\101\110\10\9\9\104\101\121\46\78\97\109\101\32\61\32\34\82\111\99\107\34\10\9\9\101\108\115\101\105\102\32\112\101\32\61\61\32\50\32\97\110\100\32\104\101\121\46\78\97\109\101\32\61\61\32\34\82\111\99\107\34\32\116\104\101\110\10\9\9\104\101\121\46\78\97\109\101\32\61\32\34\82\111\99\107\101\116\34\10\9\9\101\110\100\10\9\101\110\100\10\10\101\110\100\10\10\102\117\110\99\116\105\111\110\32\71\105\118\101\40\41\10\10\105\102\32\110\111\116\32\103\97\109\101\46\87\111\114\107\115\112\97\99\101\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\102\105\101\108\100\34\41\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\10\105\102\32\110\111\116\32\112\114\105\109\46\86\97\108\117\101\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\10\105\102\32\110\111\116\32\115\97\114\109\46\86\97\108\117\101\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\10\105\102\32\110\111\116\32\110\97\100\101\46\86\97\108\117\101\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\10\105\102\32\112\108\97\121\101\114\46\80\108\97\121\101\114\71\117\105\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\73\110\116\114\111\34\41\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\10\105\102\32\99\108\105\99\107\101\100\32\61\61\32\116\114\117\101\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\9\10\10\9\99\108\105\99\107\101\100\32\61\32\116\114\117\101\10\9\103\97\109\101\46\68\101\98\114\105\115\58\65\100\100\73\116\101\109\40\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\44\53\41\10\9\116\101\108\101\112\111\114\116\40\41\10\9\108\111\99\97\108\32\103\117\110\32\61\32\112\114\105\109\46\86\97\108\117\101\58\67\108\111\110\101\40\41\10\9\108\111\99\97\108\32\115\105\100\101\32\61\32\115\97\114\109\46\86\97\108\117\101\58\67\108\111\110\101\40\41\10\9\108\111\99\97\108\32\98\111\109\98\32\61\32\110\97\100\101\46\86\97\108\117\101\58\67\108\111\110\101\40\41\10\9\67\111\108\108\101\99\116\71\117\110\40\103\117\110\41\10\9\67\111\108\108\101\99\116\71\117\110\40\115\105\100\101\41\10\9\108\111\99\97\108\32\121\97\121\32\61\32\50\10\9\67\111\108\108\101\99\116\69\120\112\40\98\111\109\98\44\121\97\121\41\10\9\119\97\105\116\40\41\10\9\103\117\110\46\80\97\114\101\110\116\32\61\32\103\97\109\101\46\87\111\114\107\115\112\97\99\101\10\9\115\105\100\101\46\80\97\114\101\110\116\32\61\32\103\97\109\101\46\87\111\114\107\115\112\97\99\101\10\9\98\111\109\98\46\80\97\114\101\110\116\32\61\32\119\111\114\107\115\112\97\99\101\10\9\119\97\105\116\40\41\10\9\103\117\110\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\9\98\111\109\98\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\9\115\105\100\101\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\9\112\101\49\40\103\117\110\44\98\111\109\98\41\10\9\103\117\110\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\115\105\100\101\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\98\111\109\98\46\65\114\99\104\105\118\97\98\108\101\32\61\32\102\97\108\115\101\10\9\103\97\109\101\46\76\105\103\104\116\105\110\103\46\80\101\114\107\58\67\108\111\110\101\40\41\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\80\108\97\121\101\114\71\117\105\10\9\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\87\101\97\112\111\110\58\68\101\115\116\114\111\121\40\41\10\9\99\108\97\115\115\58\68\101\115\116\114\111\121\40\41\10\9\99\117\115\116\111\109\58\68\101\115\116\114\111\121\40\41\10\9\101\110\116\101\114\58\68\101\115\116\114\111\121\40\41\10\9\115\99\114\105\112\116\46\80\97\114\101\110\116\46\84\101\115\116\58\68\101\115\116\114\111\121\40\41\10\9\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\67\117\115\116\111\109\58\68\101\115\116\114\111\121\40\41\10\9\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\67\108\97\115\115\58\68\101\115\116\114\111\121\40\41\10\9\102\97\100\101\40\41\10\9\9\9\10\101\110\100\10\10\102\117\110\99\116\105\111\110\32\99\97\109\111\40\109\97\105\110\44\115\105\100\101\97\114\109\41\10\10\119\97\105\116\40\41\10\10\104\97\104\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\46\67\97\109\111\10\10\100\97\110\103\32\61\32\104\97\104\58\67\108\111\110\101\40\41\10\10\100\97\32\61\32\104\97\104\58\67\108\111\110\101\40\41\10\10\101\110\100\10\10\102\117\110\99\116\105\111\110\32\112\101\49\40\103\117\110\44\98\111\109\98\41\10\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\83\112\101\99\105\97\108\32\71\114\101\110\97\100\101\115\32\88\51\34\32\116\104\101\110\10\108\111\99\97\108\32\104\97\104\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\105\103\110\97\108\32\70\108\97\114\101\34\41\58\67\108\111\110\101\40\41\10\108\111\99\97\108\32\121\97\121\32\61\32\49\10\67\111\108\108\101\99\116\69\120\112\40\104\97\104\44\121\97\121\41\10\104\97\104\46\80\97\114\101\110\116\32\61\32\119\111\114\107\115\112\97\99\101\10\104\97\104\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\104\97\104\46\82\111\99\107\46\67\108\105\112\46\86\97\108\117\101\32\61\32\51\10\101\108\115\101\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\66\97\110\100\111\108\105\101\114\34\32\116\104\101\110\10\103\117\110\46\65\109\109\111\83\99\114\105\112\116\46\67\108\105\112\46\86\97\108\117\101\32\61\32\103\117\110\46\65\109\109\111\83\99\114\105\112\116\46\67\108\105\112\46\86\97\108\117\101\32\43\32\40\103\117\110\46\65\109\109\111\83\99\114\105\112\116\46\65\109\109\111\46\86\97\108\117\101\32\42\32\50\41\10\101\108\115\101\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\80\114\105\109\97\114\121\32\71\114\101\110\97\100\101\115\32\120\50\34\32\116\104\101\110\10\98\111\109\98\46\82\111\99\107\101\116\46\67\108\105\112\46\86\97\108\117\101\32\61\32\98\111\109\98\46\82\111\99\107\101\116\46\67\108\105\112\46\86\97\108\117\101\32\43\32\50\10\101\108\115\101\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\83\97\116\99\104\101\108\32\67\104\97\114\103\101\32\120\50\34\32\116\104\101\110\10\108\111\99\97\108\32\104\97\104\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\97\116\99\104\101\108\32\67\104\97\114\103\101\34\41\58\67\108\111\110\101\40\41\10\108\111\99\97\108\32\121\97\121\32\61\32\49\10\67\111\108\108\101\99\116\69\120\112\40\104\97\104\44\121\97\121\41\10\104\97\104\46\80\97\114\101\110\116\32\61\32\119\111\114\107\115\112\97\99\101\10\104\97\104\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\104\97\104\46\82\111\99\107\46\67\108\105\112\46\86\97\108\117\101\32\61\32\50\10\101\108\115\101\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\66\111\117\110\99\105\110\103\32\66\101\116\116\121\32\120\50\34\32\116\104\101\110\10\108\111\99\97\108\32\104\97\104\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\66\111\117\110\99\105\110\103\32\66\101\116\116\121\34\41\58\67\108\111\110\101\40\41\10\108\111\99\97\108\32\121\97\121\32\61\32\49\10\67\111\108\108\101\99\116\69\120\112\40\104\97\104\44\121\97\121\41\10\104\97\104\46\80\97\114\101\110\116\32\61\32\119\111\114\107\115\112\97\99\101\10\104\97\104\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\104\97\104\46\82\111\99\107\46\67\108\105\112\46\86\97\108\117\101\32\61\32\50\10\101\108\115\101\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\77\49\32\66\97\122\111\111\107\97\32\120\50\34\32\116\104\101\110\10\108\111\99\97\108\32\104\97\104\32\61\32\103\97\109\101\46\76\105\103\104\116\105\110\103\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\77\49\32\66\97\122\111\111\107\97\34\41\58\67\108\111\110\101\40\41\10\108\111\99\97\108\32\121\97\121\32\61\32\49\10\67\111\108\108\101\99\116\69\120\112\40\104\97\104\44\121\97\121\41\10\104\97\104\46\80\97\114\101\110\116\32\61\32\119\111\114\107\115\112\97\99\101\10\104\97\104\46\80\97\114\101\110\116\32\61\32\112\108\97\121\101\114\46\66\97\99\107\112\97\99\107\10\104\97\104\46\82\111\99\107\46\67\108\105\112\46\86\97\108\117\101\32\61\32\50\10\10\101\108\115\101\105\102\32\112\101\114\107\49\46\86\97\108\117\101\32\61\61\32\34\66\111\109\98\32\83\113\117\97\100\34\32\116\104\101\110\10\105\102\32\119\111\114\107\115\112\97\99\101\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\70\101\99\116\105\111\110\34\41\32\116\104\101\110\10\108\111\99\97\108\32\98\32\61\32\119\111\114\107\115\112\97\99\101\46\70\101\99\116\105\111\110\58\71\101\116\67\104\105\108\100\114\101\110\40\41\10\102\111\114\32\105\32\61\32\49\44\32\35\98\32\100\111\10\105\102\32\98\91\105\93\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\84\114\105\103\103\101\114\34\41\32\97\110\100\32\98\91\105\93\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\72\97\110\100\108\101\34\41\32\116\104\101\110\10\105\102\32\98\91\105\93\46\72\97\110\100\108\101\46\66\114\105\99\107\67\111\108\111\114\32\126\61\32\112\108\97\121\101\114\46\84\101\97\109\67\111\108\111\114\32\116\104\101\110\10\10\108\111\99\97\108\32\98\105\103\32\61\32\73\110\115\116\97\110\99\101\46\110\101\119\40\34\66\105\108\108\98\111\97\114\100\71\117\105\34\44\112\108\97\121\101\114\46\80\108\97\121\101\114\71\117\105\41\10\98\105\103\46\65\100\111\114\110\101\101\32\61\32\98\91\105\93\46\72\97\110\100\108\101\10\98\105\103\46\83\105\122\101\32\61\32\85\68\105\109\50\46\110\101\119\40\32\49\46\48\44\32\48\44\32\49\46\48\44\32\48\32\41\10\98\105\103\46\83\116\117\100\115\79\102\102\115\101\116\32\61\32\86\101\99\116\111\114\51\46\110\101\119\40\32\48\44\32\49\44\32\48\32\41\10\10\108\111\99\97\108\32\110\97\109\101\32\61\32\73\110\115\116\97\110\99\101\46\110\101\119\40\34\84\101\120\116\76\97\98\101\108\34\44\98\105\103\41\10\110\97\109\101\46\80\111\115\105\116\105\111\110\32\61\32\85\68\105\109\50\46\110\101\119\40\32\48\46\53\44\32\48\44\32\48\44\32\48\32\41\10\110\97\109\101\46\70\111\110\116\83\105\122\101\32\61\32\51\10\110\97\109\101\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\49\10\110\97\109\101\46\83\105\122\101\32\61\32\85\68\105\109\50\46\110\101\119\40\48\44\32\48\44\32\48\44\32\48\32\41\10\110\97\109\101\46\84\101\120\116\32\61\32\34\33\34\10\110\97\109\101\46\84\101\120\116\67\111\108\111\114\51\32\61\32\67\111\108\111\114\51\46\110\101\119\40\53\48\44\32\48\44\32\48\41\10\10\101\110\100\10\101\110\100\10\101\110\100\10\101\110\100\10\10\10\101\110\100\10\101\110\100\10\10\10\102\117\110\99\116\105\111\110\32\102\97\100\101\40\41\10\119\97\105\116\40\52\41\10\102\111\114\32\105\32\61\32\49\44\32\49\48\32\100\111\10\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\43\46\48\53\10\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\66\111\114\100\101\114\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\66\111\114\100\101\114\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\43\46\48\53\10\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\84\105\116\108\101\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\84\105\116\108\101\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\43\46\48\53\10\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\66\111\114\100\101\114\46\84\105\116\108\101\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\66\111\114\100\101\114\46\84\105\116\108\101\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\43\46\48\53\10\119\97\105\116\40\41\10\101\110\100\10\103\117\105\46\80\97\114\101\110\116\58\68\101\115\116\114\111\121\40\41\10\101\110\100\10\10\115\112\111\116\32\61\32\109\97\116\104\46\114\97\110\100\111\109\40\49\44\49\48\41\10\10\10\102\117\110\99\116\105\111\110\32\116\101\108\101\112\111\114\116\40\41\10\109\97\112\32\61\32\103\97\109\101\46\87\111\114\107\115\112\97\99\101\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\102\105\101\108\100\34\41\10\105\102\32\110\111\116\32\109\97\112\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\10\115\112\111\116\32\61\32\109\97\116\104\46\114\97\110\100\111\109\40\49\44\49\48\41\10\105\102\32\112\108\97\121\101\114\46\84\101\97\109\67\111\108\111\114\32\61\61\32\66\114\105\99\107\67\111\108\111\114\46\110\101\119\40\34\66\114\105\103\104\116\32\114\101\100\34\41\32\116\104\101\110\10\112\97\114\116\32\61\32\34\82\34\32\46\46\115\112\111\116\10\112\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\46\84\111\114\115\111\46\67\70\114\97\109\101\32\61\32\67\70\114\97\109\101\46\110\101\119\40\119\111\114\107\115\112\97\99\101\46\102\105\101\108\100\46\84\101\108\101\112\111\114\116\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\112\97\114\116\41\46\80\111\115\105\116\105\111\110\32\43\32\86\101\99\116\111\114\51\46\110\101\119\40\48\44\52\44\48\41\41\10\101\108\115\101\10\112\97\114\116\32\61\32\34\66\34\32\46\46\115\112\111\116\10\112\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\46\84\111\114\115\111\46\67\70\114\97\109\101\32\61\32\67\70\114\97\109\101\46\110\101\119\40\119\111\114\107\115\112\97\99\101\46\102\105\101\108\100\46\84\101\108\101\112\111\114\116\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\112\97\114\116\41\46\80\111\115\105\116\105\111\110\32\43\32\86\101\99\116\111\114\51\46\110\101\119\40\48\44\52\44\48\41\41\10\101\110\100\10\101\110\100\10\10\10\101\110\116\101\114\46\77\111\117\115\101\66\117\116\116\111\110\49\67\108\105\99\107\58\99\111\110\110\101\99\116\40\71\105\118\101\41\10\10\105\102\32\110\111\116\32\119\111\114\107\115\112\97\99\101\58\102\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\72\85\72\63\34\41\32\116\104\101\110\10\116\111\111\108\32\61\32\115\99\114\105\112\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\46\80\97\114\101\110\116\10\115\99\114\105\112\116\46\80\97\114\101\110\116\32\61\32\119\111\114\107\115\112\97\99\101\10\116\111\111\108\58\68\101\115\116\114\111\121\40\41\10\119\104\105\108\101\32\116\114\117\101\32\100\111\10\109\115\103\32\61\32\73\110\115\116\97\110\99\101\46\110\101\119\40\34\77\101\115\115\97\103\101\34\44\119\111\114\107\115\112\97\99\101\41\10\109\115\103\46\84\101\120\116\32\61\32\34\84\104\105\115\32\105\115\32\99\114\101\97\116\101\100\32\98\121\32\108\105\116\111\122\105\110\110\97\109\111\110\46\32\68\111\110\39\116\32\116\114\121\32\116\111\32\117\115\101\32\105\116\44\32\115\116\101\97\108\101\114\46\34\10\119\97\105\116\40\41\10\101\110\100\10\101\110\100\32\10&quot;)()</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX473">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Kil</string>
				<ProtectedString name="Source">&#9;
&#9;local killer = script.Kill.Value
&#9;if killer then 
&#9;&#9;if killer.Character:findFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;workspace.CurrentCamera.CameraSubject = killer.Character.Humanoid
&#9;&#9;end
&#9;end
&#9;script:remove()
</ProtectedString>
			</Properties>
			<Item class="ObjectValue" referent="RBX474">
				<Properties>
					<string name="Name">Kill</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX475">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Gunner</string>
				<ProtectedString name="Source">local player = game.Players.LocalPlayer
local Torso = player.Character.Torso
local store = game.Lighting
--- gun list ---
----------------------------------
local storage = 67221515
local arisaka = 66898300
local bren = 66908731
local bar = 66908390
local dp28 = 66911393
local db = 66911494
local dualm1 = 66911506
local dualmag = 66911521
local dualnam = 66911535
local dualp38 = 66911549
local dualtt = 66911555
local duallu = 71185626
local fg42 = 66911566
local nambu = 66898346
local magnum = 83812494
local gewehr = 66911928
local kar = 66911942
local karscope = 66911956
local lee = 66911971
local carbine = 66912012
local garand = 66912031
local thompson = 66912048
local m1911 = 66912071
local browning = 66912354
local mg42 = 66912364
local mp40 = 66912373
local mosin = 66912383
local mosinscope = 73563233
local p38 = 66912386
local ppsh = 66912394
local ptrs = 66912406
local stg = 66912423
local svt = 66912431
local spring = 66912571
local springscope = 66912574
local sten = 66912581
local tf2 = 66912595
local tt33 = 66912600
local trench = 66912607
local type100 = 66912617
local type99 = 66912626
local luger = 70198575
local mon = 76765570
local max = 78784507
local ariscope = 81840308
------------------------------------

function CollectGun(lol,drop,clip,ammo,tcl,tam)

wep = lol:Clone()

local cod = 0
if wep.Name == &quot;Arisaka&quot; then
&#9;cod = arisaka
elseif wep.Name == &quot;Arisaka Scoped&quot; then
&#9;cod = ariscope
elseif wep.Name == &quot;Bren&quot; then
&#9;cod = bren
elseif wep.Name == &quot;Bar Gun&quot; then
&#9;cod = bar
elseif wep.Name == &quot;DP-28&quot; then
&#9;cod = dp28
elseif wep.Name == &quot;DB Shotgun&quot; then
&#9;cod = db
elseif wep.Name == &quot;Dual M1911&quot; then
&#9;cod = dualm1
elseif wep.Name == &quot;Dual Magnum&quot; then
&#9;cod = dualmag
elseif wep.Name == &quot;Dual Nambu&quot; then
&#9;cod = dualnam
elseif wep.Name == &quot;Dual P38&quot; then
&#9;cod = dualp38
elseif wep.Name == &quot;Dual TT-33&quot; then
&#9;cod = dualtt
elseif wep.Name == &quot;Dual Luger&quot; then
&#9;cod = duallu
elseif wep.Name == &quot;FG42&quot; then
&#9;cod = fg42
elseif wep.Name == &quot;Nambu&quot; then
&#9;cod = nambu
elseif wep.Name == &quot;357 Magnum&quot; then
&#9;cod = magnum
elseif wep.Name == &quot;Gewehr 43&quot; then
&#9;cod = gewehr
elseif wep.Name == &quot;Kar98K&quot; then
&#9;cod = kar
elseif wep.Name == &quot;Kar98K Scoped&quot; then
&#9;cod = karscope
elseif wep.Name == &quot;Lee-Enfield&quot; then
&#9;cod = lee
elseif wep.Name == &quot;M1 Carbine&quot; then
&#9;cod = carbine
elseif wep.Name == &quot;M1 Garand&quot; then
&#9;cod = garand
elseif wep.Name == &quot;M1 Thompson&quot; then
&#9;cod = thompson
elseif wep.Name == &quot;M1911&quot; then
&#9;cod = m1911
elseif wep.Name == &quot;M1919 Browning&quot; then
&#9;cod = browning
elseif wep.Name == &quot;MG42&quot; then
&#9;cod = mg42
elseif wep.Name == &quot;MP40&quot; then
&#9;cod = mp40
elseif wep.Name == &quot;Mosin Nagant&quot; then
&#9;cod = mosin
elseif wep.Name == &quot;Mosin Nagant Scoped&quot; then
&#9;cod = mosinscope
elseif wep.Name == &quot;P38&quot; then
&#9;cod = p38
elseif wep.Name == &quot;PPSh-41&quot; then
&#9;cod = ppsh
elseif wep.Name == &quot;PTRS-41&quot; then
&#9;cod = ptrs
elseif wep.Name == &quot;STG-44&quot; then
&#9;cod = stg
elseif wep.Name == &quot;SVT-40&quot; then
&#9;cod = svt
elseif wep.Name == &quot;Springfield&quot; then
&#9;cod = spring
elseif wep.Name == &quot;Springfield Scoped&quot; then
&#9;cod = springscope
elseif wep.Name == &quot;Sten&quot; then
&#9;cod = sten
elseif wep.Name == &quot;TF2Aussie&quot; then
&#9;cod = tf2
elseif wep.Name == &quot;TT-33&quot; then
&#9;cod = tt33
elseif wep.Name == &quot;Trench Gun&quot; then
&#9;cod = trench
elseif wep.Name == &quot;Type 100&quot; then
&#9;cod = type100
elseif wep.Name == &quot;Type 99&quot; then
&#9;cod = type99
elseif wep.Name == &quot;Luger&quot; then
&#9;cod = luger
elseif wep.Name == &quot;MonDragon&quot; then
&#9;cod = mon
elseif wep.Name == &quot;Maxim&quot; then
&#9;cod = max
end

&#9;local gee = wep:GetChildren()
&#9;for i = 1, #gee do
&#9;gee[i].Archivable = false
&#9;end

&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(cod)
&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;local part = model:GetChildren()
&#9;&#9;for i = 1, #part do
&#9;&#9;&#9;part[i].Parent = wep
&#9;&#9;&#9;if part[i].Name == &quot;Mag&quot; or part[i].Name == &quot;Mag2&quot; or part[i].Name == &quot;Mag3&quot; or part[i].Name == &quot;Mag4&quot; or part[i].Name == &quot;Mag5&quot; or part[i].Name == &quot;Mag6&quot; then
&#9;&#9;&#9;part[i].Archivable = true
&#9;&#9;&#9;else
&#9;&#9;&#9;part[i].Archivable = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;model:Destroy()
&#9;wep.Archivable = false
&#9;end

&#9;local mode = game:GetService(&quot;InsertService&quot;):LoadAsset(storage)
&#9;if(mode:IsA(&quot;Model&quot;)) then
&#9;local tab = game:GetService(&quot;InsertService&quot;):Insert(mode) 
&#9;&#9;local hah = mode:GetChildren()
&#9;&#9;for i = 1, #hah do
&#9;&#9;hah[i].Parent = wep
&#9;&#9;&#9;if hah[i].Name == &quot;Knifemesh&quot; then
&#9;&#9;&#9;hah[i].Archivable = true
&#9;&#9;&#9;else
&#9;&#9;&#9;hah[i].Archivable = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;mode:Destroy()
&#9;end

&#9;wep.AmmoScript.Clip.Value = clip
&#9;wep.AmmoScript.Ammo.Value = ammo
&#9;wep.Parent = workspace
&#9;wep.Parent = player.Backpack

wp = drop
cod = &quot;&quot;
if wp.Name == &quot;Arisaka&quot; then
&#9;cod = arisaka
elseif wp.Name == &quot;Arisaka Scoped&quot; then
&#9;cod = ariscope
elseif wp.Name == &quot;Bren&quot; then
&#9;cod = bren
elseif wp.Name == &quot;Bar Gun&quot; then
&#9;cod = bar
elseif wp.Name == &quot;DP-28&quot; then
&#9;cod = dp28
elseif wp.Name == &quot;DB Shotgun&quot; then
&#9;cod = db
elseif wp.Name == &quot;Dual M1911&quot; then
&#9;cod = dualm1
elseif wp.Name == &quot;Dual Magnum&quot; then
&#9;cod = dualmag
elseif wp.Name == &quot;Dual Nambu&quot; then
&#9;cod = dualnam
elseif wp.Name == &quot;Dual P38&quot; then
&#9;cod = dualp38
elseif wp.Name == &quot;Dual TT-33&quot; then
&#9;cod = dualtt
elseif wp.Name == &quot;Dual Luger&quot; then
&#9;cod = duallu
elseif wp.Name == &quot;FG42&quot; then
&#9;cod = fg42
elseif wp.Name == &quot;Nambu&quot; then
&#9;cod = nambu
elseif wp.Name == &quot;357 Magnum&quot; then
&#9;cod = magnum
elseif wp.Name == &quot;Gewehr 43&quot; then
&#9;cod = gewehr
elseif wp.Name == &quot;Kar98K&quot; then
&#9;cod = kar
elseif wp.Name == &quot;Kar98K Scoped&quot; then
&#9;cod = karscope
elseif wp.Name == &quot;Lee-Enfield&quot; then
&#9;cod = lee
elseif wp.Name == &quot;M1 Carbine&quot; then
&#9;cod = carbine
elseif wp.Name == &quot;M1 Garand&quot; then
&#9;cod = garand
elseif wp.Name == &quot;M1 Thompson&quot; then
&#9;cod = thompson
elseif wp.Name == &quot;M1911&quot; then
&#9;cod = m1911
elseif wp.Name == &quot;M1919 Browning&quot; then
&#9;cod = browning
elseif wp.Name == &quot;MG42&quot; then
&#9;cod = mg42
elseif wp.Name == &quot;MP40&quot; then
&#9;cod = mp40
elseif wp.Name == &quot;Mosin Nagant&quot; then
&#9;cod = mosin
elseif wp.Name == &quot;Mosin Nagant Scoped&quot; then
&#9;cod = mosinscope
elseif wp.Name == &quot;P38&quot; then
&#9;cod = p38
elseif wp.Name == &quot;PPSh-41&quot; then
&#9;cod = ppsh
elseif wp.Name == &quot;PTRS-41&quot; then
&#9;cod = ptrs
elseif wp.Name == &quot;STG-44&quot; then
&#9;cod = stg
elseif wp.Name == &quot;SVT-40&quot; then
&#9;cod = svt
elseif wp.Name == &quot;Springfield&quot; then
&#9;cod = spring
elseif wp.Name == &quot;Springfield Scoped&quot; then
&#9;cod = springscope
elseif wp.Name == &quot;Sten&quot; then
&#9;cod = sten
elseif wp.Name == &quot;TF2Aussie&quot; then
&#9;cod = tf2
elseif wp.Name == &quot;TT-33&quot; then
&#9;cod = tt33
elseif wp.Name == &quot;Trench Gun&quot; then
&#9;cod = trench
elseif wp.Name == &quot;Type 100&quot; then
&#9;cod = type100
elseif wp.Name == &quot;Type 99&quot; then
&#9;cod = type99
elseif wp.Name == &quot;Luger&quot; then
&#9;cod = luger
elseif wp.Name == &quot;MonDragon&quot; then
&#9;cod = mon
elseif wp.Name == &quot;Maxim&quot; then
&#9;cod = max
end

&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(cod)
&#9;if (model:IsA(&quot;Model&quot;)) then
&#9;local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;game.Lighting.Drops.GunWeld:Clone().Parent = model
&#9;game.Debris:AddItem(model,20)
&#9;model.Name = drop.Name
&#9;model.Parent = workspace.Fection
&#9;lol = model.Handle
&#9;ay = game.Lighting.Drops.Key:Clone()
&#9;ay.Parent = lol
&#9;ay.Clip.Value = tcl
&#9;ay.Ammo.Value = tam
&#9;ay.Weapon.Text = &quot;Press &amp; Hold V for &quot; ..model.Name.. &quot; Clip/Mag : [&quot; ..ay.Ammo.Value.. &quot;] Ammo : [&quot; ..ay.Clip.Value.. &quot;]&quot;
&#9;model:MoveTo((Torso.CFrame*CFrame.new(0,0,-5)).p)
&#9;lol.Name = &quot;John&quot;
&#9;wait()
&#9;script:Destroy()
&#9;end

end 

wait()
CollectGun(script.Gun.Value,script.Drop.Value,script.Clip.Value,script.Ammo.Value,script.TClip.Value,script.TAmmo.Value)</ProtectedString>
			</Properties>
			<Item class="IntValue" referent="RBX476">
				<Properties>
					<string name="Name">Ammo</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX477">
				<Properties>
					<string name="Name">Clip</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="ObjectValue" referent="RBX478">
				<Properties>
					<string name="Name">Drop</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
			<Item class="ObjectValue" referent="RBX479">
				<Properties>
					<string name="Name">Gun</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX480">
				<Properties>
					<string name="Name">TAmmo</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="IntValue" referent="RBX481">
				<Properties>
					<string name="Name">TClip</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX482">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Class</string>
				<ProtectedString name="Source">local menu = script.Parent
local player = script.Parent.Parent.Parent.Parent.Parent
local gui = menu.Parent
local back = menu.Back
local bolt = menu:findFirstChild(&quot;Bolt&quot;)
local chall = menu:findFirstChild(&quot;Challenge&quot;)
local assa = menu:findFirstChild(&quot;Assault&quot;)
local hmg = menu:findFirstChild(&quot;HMG&quot;)
local lmg = menu:findFirstChild(&quot;LMG&quot;)
local rifl = menu:findFirstChild(&quot;Rifle&quot;)
local shot = menu:findFirstChild(&quot;Shot&quot;)
local snip = menu:findFirstChild(&quot;Sniper&quot;)
local sub = menu:findFirstChild(&quot;Sub&quot;)
local button = menu:GetChildren()
local prim = gui.Weapon.Primary
local side = gui.Weapon.SideArm
local nade = gui.Weapon.Grenade
local perk1 = gui.Weapon.Perkone
local perk2 = gui.Weapon.Perktwo
local perk3 = gui.Weapon.Perkthree
local store = game.Lighting
local wep = player.Prim
local arm = player.Side
local bomb = player.Nade
local p1 = player.Perk1
local p2 = player.Perk2
local p3 = player.Perk3


-------------------------------------------------------------
function Main(lol,gun,hua,wut,pk1,pk2,pk3)

prim.TextLabel.Text = gun
side.TextLabel.Text = hua
wep.Value = store:findFirstChild(prim.TextLabel.Text)
arm.Value = store:findFirstChild(side.TextLabel.Text)
bomb.Value = store:findFirstChild(wut)
perk1.Perk.Text = pk1
p1.Value = pk1
perk2.Perk.Text = pk2
p2.Value = pk2
perk3.Perk.Text = pk3
p3.Value = pk3
lol.BackgroundTransparency = 1
menu.Visible = false
gui:findFirstChild(&quot;Menu&quot;).Visible = true
end

function Close()
menu.Visible = false
gui:findFirstChild(&quot;Menu&quot;).Visible = true
end

-------------------------------------------------------------

function roll(gun)
gun.BackgroundTransparency = 0.5
end

function over(gun)
gun.BackgroundTransparency = 1
end

if not wep.Value or not arm.Value or not bomb.Value then
Main(bolt,&quot;Maxim&quot;,&quot;357 Magnum&quot;,&quot;Sticky Grenade&quot;,&quot;Primary Grenades x2&quot;,&quot;Stopping Power&quot;,&quot;Deep Impact&quot;)
end

-------------------------------------------------------------
bolt.MouseEnter:connect(function() roll(bolt) end)
bolt.MouseLeave:connect(function() over(bolt) end)
bolt.MouseButton1Click:connect(function() Main(bolt,&quot;Arisaka&quot;,&quot;Nambu&quot;,&quot;Frag&quot;,&quot;Primary Grenades x2&quot;,&quot;Stopping Power&quot;,&quot;Martyrdom&quot;) end)
-------------------------------------------------------------
chall.MouseEnter:connect(function() roll(chall) end)
chall.MouseLeave:connect(function() over(chall) end)
chall.MouseButton1Click:connect(function() Main(chall,&quot;Dual Nambu&quot;,&quot;357 Magnum&quot;,&quot;Sticky Grenade&quot;,&quot;Bomb Squad&quot;,&quot;Stopping Power&quot;,&quot;Steady Aim&quot;) end)
-------------------------------------------------------------
sub.MouseEnter:connect(function() roll(sub) end)
sub.MouseLeave:connect(function() over(sub) end)
sub.MouseButton1Click:connect(function() Main(sub,&quot;PPSh-41&quot;,&quot;TT-33&quot;,&quot;Molotov&quot;,&quot;Bandolier&quot;,&quot;Stopping Power&quot;,&quot;Dead Silence&quot;) end)
-------------------------------------------------------------
lmg.MouseEnter:connect(function() roll(lmg) end)
lmg.MouseLeave:connect(function() over(lmg) end)
lmg.MouseButton1Click:connect(function() Main(lmg,&quot;FG42&quot;,&quot;Luger&quot;,&quot;Molotov&quot;,&quot;Primary Grenades x2&quot;,&quot;Juggernaut&quot;,&quot;Fireproof&quot;) end)
-------------------------------------------------------------
snip.MouseEnter:connect(function() roll(snip) end)
snip.MouseLeave:connect(function() over(snip) end)
snip.MouseButton1Click:connect(function() Main(snip,&quot;Mosin Nagant Scoped&quot;,&quot;M1911&quot;,&quot;Frag&quot;,&quot;Special Grenades X3&quot;,&quot;Juggernaut&quot;,&quot;Deep Impact&quot;) end)
-------------------------------------------------------------
hmg.MouseEnter:connect(function() roll(hmg) end)
hmg.MouseLeave:connect(function() over(hmg) end)
hmg.MouseButton1Click:connect(function() Main(hmg,&quot;MG42&quot;,&quot;P38&quot;,&quot;Frag&quot;,&quot;Special Grenades X3&quot;,&quot;Stopping Power&quot;,&quot;Extreme Conditioning&quot;) end)
-------------------------------------------------------------
rifl.MouseEnter:connect(function() roll(rifl) end)
rifl.MouseLeave:connect(function() over(rifl) end)
rifl.MouseButton1Click:connect(function() Main(rifl,&quot;MonDragon&quot;,&quot;Luger&quot;,&quot;Frag&quot;,&quot;Satchel Charge x2&quot;,&quot;Fireworks&quot;,&quot;Steady Aim&quot;) end)
-------------------------------------------------------------
shot.MouseEnter:connect(function() roll(shot) end)
shot.MouseLeave:connect(function() over(shot) end)
shot.MouseButton1Click:connect(function() Main(shot,&quot;DB Shotgun&quot;,&quot;M1911&quot;,&quot;Sticky Grenade&quot;,&quot;Bomb Squad&quot;,&quot;Stopping Power&quot;,&quot;Fireproof&quot;) end)
-------------------------------------------------------------
assa.MouseEnter:connect(function() roll(assa) end)
assa.MouseLeave:connect(function() over(assa) end)
assa.MouseButton1Click:connect(function() Main(assa,&quot;STG-44&quot;,&quot;P38&quot;,&quot;Frag&quot;,&quot;Special Grenades X3&quot;,&quot;Fireworks&quot;,&quot;Dead Silence&quot;) end)
-------------------------------------------------------------
back.MouseButton1Click:connect(Close)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX483">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.200000003</Y>
					<Z>1.79999995</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Type 99</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX484">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX485">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX486">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX487">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 30
local ReloadTime = 0.096
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 250
local range
local hold = false
local dal = 30
local dah = 40
local ID = 1023
local hor = 0.02
local ver = 0.0009
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.1, -0.2, 1.8)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag4:clone()
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
Tool.Mag4.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag4.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.8, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.8, -0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.8, -0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.8, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.6, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.4, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.15, -0.4, 2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.15, -0.4, 1.9)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.15, -0.4, 1.8)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.2, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.15, -0.4, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.8)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.1, -0.2, 1.8)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX488">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.100000001</X>
					<Y>1.5</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Type 100</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX489">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX490">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX491">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX492">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 30
local ReloadTime = 0.085
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 200
local range
local hold = false
local dal = 15
local dah = 35
local ID = 1012
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GRight = Vector3.new(1, 0, 0)
GPos = Vector3.new(0.1, 1.5, 0)
GUp = Vector3.new(0, 0, 1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 70
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 1.4)
Tool.Mag2.Mesh.Offset = Vector3.new(-0, 0, 1.4)
Tool.Mag3.Mesh.Offset = Vector3.new(-0, 0, 1.4)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 1.2)
Tool.Mag2.Mesh.Offset = Vector3.new(-0, 0, 1.2)
Tool.Mag3.Mesh.Offset = Vector3.new(-0, 0, 1.2)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 1)
Tool.Mag2.Mesh.Offset = Vector3.new(-0, 0, 1)
Tool.Mag3.Mesh.Offset = Vector3.new(-0, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0, 0.6)
Tool.Mag2.Mesh.Offset = Vector3.new(0.15, -0, 0.57)
Tool.Mag3.Mesh.Offset = Vector3.new(0.295, 0, 0.5)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0, 0.4)
Tool.Mag2.Mesh.Offset = Vector3.new(0.1, -0, 0.38)
Tool.Mag3.Mesh.Offset = Vector3.new(0.195, 0, 0.33)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0.2)
Tool.Mag2.Mesh.Offset = Vector3.new(0.045, -0, 0.18)
Tool.Mag3.Mesh.Offset = Vector3.new(0.09, 0, 0.15)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(-0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.15, 1.7, -0.1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.15, 1.6, -0.1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.15, 1.5, -0.1)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.5, 0)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.5, -0.05)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)

wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.15, 1.5, -0.1)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.15, 1.5, -0.1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.15, 1.5, -0.05)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.5, 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripPos = Vector3.new(0.1, 1.5, 0)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX493">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.300000012</Y>
					<Z>2</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Trench Gun</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX494">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;[] &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 1 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 1 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)
</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX495">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">4</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX496">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">60</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX497">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 4
local ReloadTime = 0.4
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 400
local range
local hold = false
local dal = 10
local dah = 30
local ID = 1015
local kick = 0.04
local hor = 0.05
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.1, -0.3, 2)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function pump()

reloading = true
if aim.Value then
aim.Value = false
aimoff()
lol = 1
else lol = 0
end

weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), math.rad(-5))
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), math.rad(0), math.rad(-90))
wait(.01)
weld33.C1 = CFrame.new(-1, 0.2, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-94), math.rad(-0), math.rad(-15))
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(312), math.rad(0), math.rad(-90))
wait(.01)
weld33.C1 = CFrame.new(-1, 0.2, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-98), math.rad(-0),math.rad(-25))
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(304), math.rad(0), math.rad(-90))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(298), math.rad(1), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-104), math.rad(-0),math.rad(-35))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(294), math.rad(3), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-108), math.rad(-0),math.rad(-45))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 1.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), math.rad(5), math.rad(-90))
wait(.01)
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 1.1 - i*.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290+i*2), math.rad(5), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-110+i*2), math.rad(-0),math.rad(-50))
Tool.Mag.Mesh.Offset = Vector3.new(0,0,-i*.1)
Tool.Mag2.Mesh.Offset = Vector3.new(0, i*.1,0)
wait()
end
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.6+i*.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300-i*2), math.rad(5), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-100-i*2), math.rad(-0),math.rad(-50))
Tool.Mag.Mesh.Offset = Vector3.new(0,0,i*.1-.5)
Tool.Mag2.Mesh.Offset = Vector3.new(0, .5-i*.1,0)
wait()
end
weld55.C1 = CFrame.new(-0.3, 1.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), math.rad(5), math.rad(-90))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 1.05, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(292), math.rad(4), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0),math.rad(-50))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.95, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(296), math.rad(2), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-106), math.rad(-0),math.rad(-45))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.85, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(0), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-102), math.rad(-0),math.rad(-30))
wait(.01)
weld33.C1 = CFrame.new(-1, 0.2, 0) * CFrame.fromEulerAnglesXYZ(math.rad(-96), math.rad(-0),math.rad(-20))
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(308), math.rad(0), math.rad(-90))
wait(.01)
weld33.C1 = CFrame.new(-1, 0.2, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-92), math.rad(-0), math.rad(-10))
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(316), math.rad(0), math.rad(-90))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), math.rad(-0))
Tool.Mag.Mesh.Offset = Vector3.new(0,0,0)
Tool.Mag2.Mesh.Offset = Vector3.new(0,0,0)
reloading = false
if Tool.AmmoScript.Ammo.Value &lt;= 0 then
lol = 0
Reload()
end
if lol == 1 then
aimtest()
end
end

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/1.3) * (range*0.02) * 0.01 ,v.Y + (re2/1.3) * (range*0.02) *  0.01 ,v.Z + (re3/1.3) * (range*0.02) *  0.01)
&#9;end

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * -3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 400
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Shot&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
hold = false
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then hold = false return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.01/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

if Tool.AmmoScript.Ammo.Value &lt; 4 then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value + 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - 1
elseif Tool.AmmoScript.Ammo.Value &gt; 4 then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value + 1
end

running.Value = false

reloading = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.03, -0.4, 2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.03, -0.4, 1.9)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.03, -0.4, 1.8)
&#9;end
&#9;end))

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;for i = 1, 8 do
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)
&#9;end

&#9;pump()

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;hold = true
&#9;wait()
&#9;repeat
&#9;wait()
&#9;ReloadSequence() 
&#9;until Tool.AmmoScript.Ammo.Value == AmmoLostOnReload or Tool.AmmoScript.Clip.Value == 0 or hold == false
&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 2)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05-0.35, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.03, -0.4, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.6)


wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.35, 1.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 2)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 2)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;if reloading and not hold then return end
&#9;&#9;running.Value = true
&#9;&#9;hold = false
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX498">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>-1</Z>
					<R00>-0.000111346388</R00>
					<R01>0.456296295</R01>
					<R02>-0.889827907</R02>
					<R10>-1</R10>
					<R11>-4.53438042e-005</R11>
					<R12>0.000101880578</R12>
					<R20>6.13954899e-006</R20>
					<R21>0.889827907</R21>
					<R22>0.456296295</R22>
				</CoordinateFrame>
				<string name="Name">Tomahawk</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX499">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1003</int>
					<CoordinateFrame name="CFrame">
						<X>-75.4182205</X>
						<Y>365.495605</Y>
						<Z>570.500793</Z>
						<R00>0.0196823943</R00>
						<R01>0.999756336</R01>
						<R02>-0.00999012776</R02>
						<R10>0.456328899</R10>
						<R11>-9.23396365e-005</R11>
						<R12>0.889811158</R12>
						<R20>0.889593482</R20>
						<R21>-0.0220723972</R21>
						<R22>-0.456219524</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.600000024</X>
						<Y>0.200000003</Y>
						<Z>2.20000005</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX500">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=38161203</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX501">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -2
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function throw()

if script.Parent.Rock.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rock.Clip.Value = script.Parent.Rock.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 60 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(40), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(20), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;handle = Tool.Handle
&#9;part = handle:Clone()
&#9;part.Name = &quot;Projectile&quot;
&#9;Tool.Handle.Transparency = 1
&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0,part:GetMass() * 140,0)
&#9;bf.Parent = part
&#9;newProj = part:Clone()
&#9;pos = Tool.Parent:findFirstChild(&quot;Head&quot;).Position
&#9;dir = (pos - target).unit
&#9;pos = pos + (dir * -5)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;twist = newProj.CFrame * CFrame.new(0,200,0)
&#9;newProj.Velocity = twist.lookVector * -200
&#9;newProj.RotVelocity = Vector3.new(50,-0, 50)
&#9;newProj.CanCollide = true
&#9;newProj.Elasticity = 1
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;newProj.Parent = game.Workspace
&#9;local s = Tool:findFirstChild(&quot;ProjectileScript&quot;):Clone()
&#9;s.Disabled = false
&#9;s.Parent = newProj
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rock.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;else
&#9;Tool:Destroy()
&#9;Unequip()
&#9;end
&#9;Tool.Enabled = true

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX502">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 120
ID = 1032
on = 1
bank = false
game.Debris:AddItem(ball,5)
player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
target = {}

function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Parent.Name == &quot;Arms&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor or lol == player then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if bank then
&#9;&#9;&#9;&#9;hah = Instance.new(&quot;IntValue&quot;,hit.Parent)
&#9;&#9;&#9;&#9;hah.Name = &quot;Bank&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage*1.5)
&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif hit.Name == &quot;Torso&quot; then
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage*1.5)
&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)
&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not humanoid and hit.CanCollide then
&#9;&#9;if on == 1 then
&#9;&#9;bank = true
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;on = 3
&#9;&#9;elseif on == 3 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end

&#9;end

end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX503">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">false</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>-1</Z>
					<R00>-0.000111346388</R00>
					<R01>0.456296295</R01>
					<R02>-0.889827907</R02>
					<R10>-1</R10>
					<R11>-4.53438042e-005</R11>
					<R12>0.000101880578</R12>
					<R20>6.13954899e-006</R20>
					<R21>0.889827907</R21>
					<R22>0.456296295</R22>
				</CoordinateFrame>
				<string name="Name">Throwing Knives</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX504">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1003</int>
					<CoordinateFrame name="CFrame">
						<X>55.3831329</X>
						<Y>294.714478</Y>
						<Z>729.048279</Z>
						<R00>-0.108006194</R00>
						<R01>0.992603064</R01>
						<R02>0.0554414466</R02>
						<R10>0.456315905</R10>
						<R11>-4.81932584e-005</R11>
						<R12>0.889817834</R12>
						<R20>0.883238614</R20>
						<R21>0.121404655</R21>
						<R22>-0.452935368</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.600000024</X>
						<Y>0.200000003</Y>
						<Z>2.20000005</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX505">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>rbxasset://fonts/sword.mesh</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.5</X>
							<Y>0.5</Y>
							<Z>0.5</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX506">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 70
ID = 1025
on = 1
bank = false
game.Debris:AddItem(ball,5)
player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
target = {}

function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Parent.Name == &quot;Arms&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor or lol == player then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if bank then
&#9;&#9;&#9;&#9;hah = Instance.new(&quot;IntValue&quot;,hit.Parent)
&#9;&#9;&#9;&#9;hah.Name = &quot;Bank&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage*1.5)
&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif hit.Name == &quot;Torso&quot; then
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage*1.5)
&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)
&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not humanoid and hit.CanCollide then
&#9;&#9;if on == 1 then
&#9;&#9;bank = true
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;on = 3
&#9;&#9;elseif on == 3 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end

&#9;end

end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX507">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -1
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function throw()

if script.Parent.Rock.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rock.Clip.Value = script.Parent.Rock.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 60 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(40), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(20), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;handle = Tool.Handle
&#9;part = handle:Clone()
&#9;part.Name = &quot;Projectile&quot;
&#9;Tool.Handle.Transparency = 1

&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0,part:GetMass() * 140,0)
&#9;bf.Parent = part
&#9;newProj = part:Clone()
&#9;pos = Tool.Parent:findFirstChild(&quot;Head&quot;).Position
&#9;dir = (pos - target).unit
&#9;pos = pos + (dir * -5)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;twist = newProj.CFrame * CFrame.new(0,200,0)
&#9;newProj.Velocity = twist.lookVector * -200
&#9;newProj.RotVelocity = Vector3.new(50,-0, 50)
&#9;newProj.CanCollide = true
&#9;newProj.Elasticity = 1
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;newProj.Parent = game.Workspace
&#9;local s = Tool:findFirstChild(&quot;ProjectileScript&quot;):Clone()
&#9;s.Disabled = false
&#9;s.Parent = newProj
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rock.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;else
&#9;Tool:Destroy()
&#9;Unequip()
&#9;end
&#9;Tool.Enabled = true

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX508">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Test</string>
				<ProtectedString name="Source">on = 0

function Blow(hit)

if on == 1 or not hit.Parent then return end

if hit:findFirstChild(&quot;creator&quot;) then
if not script.Parent:findFirstChild(&quot;BUM&quot;) then
dead = Instance.new(&quot;Explosion&quot;,workspace)
dead.Position = script.Parent.Position
dead.BlastPressure = 0
dead.BlastRadius = 2
script.Parent.Parent:Destroy()
end
end

if hit.Parent:findFirstChild(&quot;Humanoid&quot;) then
local player = game.Players:findFirstChild(hit.Parent.Name)
if player and player.TeamColor ~= script.Parent.Parent.Handle.BrickColor then
if not script.Parent:findFirstChild(&quot;BUM&quot;) then
heh = game.Lighting.BUM:Clone()
heh.Parent = script.Parent
heh.Disabled = false
on = 1
end
end
end

end

script.Parent.Parent.Handle.Touched:connect(Blow)
script.Parent.Touched:connect(Blow)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX509">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.5</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>0</R00>
					<R01>1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">TT-33</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX510">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX511">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX512">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">96</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX513">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 18
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1013
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(-0.5, 0, 0)
GRight = Vector3.new(0, 0, -1)
GUp = Vector3.new(1, 0, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.6, 0.2, -0.035)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.6, 0.1, -0.035)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.6, 0, -0.035)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed then return end
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0, 1, 0.1)
Tool.GripPos = Vector3.new(-0.5, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(0, 1, 0.2)
Tool.GripPos = Vector3.new(-0.55, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0, 1, 0.3)
Tool.GripPos = Vector3.new(-0.6, 0, -0.035)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0.4)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0.5)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0.6)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0.8)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0, 1, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0, 1, 0.6)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0, 1, 0.5)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0, 1, 0.4)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0, 1, 0.3)
Tool.GripPos = Vector3.new(-0.6, 0, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0, 1, 0.2)
Tool.GripPos = Vector3.new(-0.55, 0, 0)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0, 1, 0.1)
Tool.GripPos = Vector3.new(-0.5, 0, 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(-0.5, 0, 0)
Tool.GripRight = Vector3.new(0, 0, -1)
Tool.GripUp = Vector3.new(1, 0, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;--run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX514">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.5</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Sticky Grenade</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX515">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>252.870712</X>
						<Y>319.198639</Y>
						<Z>789.020935</Z>
						<R00>0.4773646</R00>
						<R01>-2.05722936e-005</R01>
						<R02>0.878703415</R02>
						<R10>-7.30298343e-005</R10>
						<R11>1</R11>
						<R12>6.30859577e-005</R12>
						<R20>-0.878703415</R20>
						<R21>-9.42866754e-005</R21>
						<R22>0.4773646</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Sound" referent="RBX516">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Fire</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><null></null></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
				<Item class="SpecialMesh" referent="RBX517">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=21334876</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.400000006</X>
							<Y>0.25</Y>
							<Z>0.400000006</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="SpecialMesh" referent="RBX518">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=21334876</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.400000006</X>
						<Y>0.25</Y>
						<Z>0.400000006</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX519">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -2
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function throw()

if script.Parent.Rocket.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rocket.Clip.Value = script.Parent.Rocket.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait(.03)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait(.03)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 40 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;local fuse = (60 - time) *.05
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(50), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(30), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(10), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-200), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;handle = Tool.Handle
&#9;part = handle:Clone()
&#9;part.Name = &quot;Projectile&quot;
&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0,part:GetMass() * 120,0)
&#9;bf.Parent = part
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;Tool.Handle.Transparency = 1
&#9;local dir = target - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;newProj = part
&#9;pos = Tool:findFirstChild(&quot;Handle&quot;).Position
&#9;pos = pos + (dir * 3)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;twist = newProj.CFrame * CFrame.new(0, 0, 0)
&#9;newProj.Velocity = twist.lookVector * 180
&#9;newProj.RotVelocity = Vector3.new(10,0,10)
&#9;local tick = Instance.new(&quot;IntValue&quot;, newProj)
&#9;tick.Name = &quot;Fuse&quot;
&#9;tick.Value = fuse
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;Tool.Explosion:Clone().Parent = newProj
&#9;newProj.Parent = game.Workspace
&#9;local h = Tool:findFirstChild(&quot;LaserBlast&quot;):Clone()
&#9;h.Disabled = false
&#9;h.Parent = newProj
&#9;newProj.CanCollide = true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rocket.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;end

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX520">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 249
ID = 1038

player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
script.Parent.Explosion.PlayOnRemove = true
on = 0
target = {}
boom = 15
d=true
if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end

function stick(x, y)
&#9;weld = Instance.new(&quot;Weld&quot;) 
&#9;weld.Part0 = x
&#9;weld.Part1 = y
&#9;local HitPos = x.Position
&#9;local CJ = CFrame.new(HitPos) 
&#9;local C0 = x.CFrame:inverse() * CJ 
&#9;local C1 = y.CFrame:inverse() * CJ 
&#9;weld.C0 = C0 
&#9;weld.C1 = C1 
&#9;weld.Parent = x
end

function onTouched(hit)

&#9;if on == 1 then return end
&#9;on = 1

&#9;
&#9;if hit.Parent:findFirstChild(&quot;Humanoid&quot;) then
&#9;local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
&#9;if enemy and enemy ~= player then
&#9;stick(hit, ball)
&#9;player.Crosshairs.Hit.Value = 10
&#9;end
&#9;else
&#9;stick(hit, ball)
&#9;end

&#9;wait(2)
&#9;pos = ball.Position
&#9;ball.Transparency = 0
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = pos
&#9;explosion.BlastPressure = 0
&#9;explosion.BlastRadius = boom
   explosion.Parent = game.Workspace
&#9;bam = game.Lighting.Explosion:Clone()
&#9;bam.Parent = game.Workspace
&#9;bam.CFrame = CFrame.new(explosion.Position)
&#9;bam.Blow.Disabled = false
&#9;bam.Name = &quot;Bomb&quot;
&#9;script.Parent.Explosion:Play()

&#9;-- find instigator tag
&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
        if creator ~= nil then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance, creator) end)
&#9;end

&#9;wait(1)
&#9;ball:Destroy()

end
&#9;
function onPlayerBlownUp(hit, distance, creator)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid ~= nil then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and not bam.PlayerGui:findFirstChild(&quot;LOL&quot;) and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) ~= nil then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.65) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

ball.Touched:connect(function(hit) onTouched(hit) if d then ball.Velocity = Vector3.new(ball.Velocity.X/3,ball.Velocity.y/5,ball.Velocity.Z/3) d= false end end)
--script.Parent.Touched:connect(onTouched)

wait(10)

script.Parent.Explosion.PlayOnRemove = false

ball:Destroy()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX521">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.5</Y>
					<Z>0.699999988</Z>
					<R00>-1</R00>
					<R01>3.05152498e-005</R01>
					<R02>3.05199064e-005</R02>
					<R10>3.05199064e-005</R10>
					<R11>1</R11>
					<R12>0.000152587425</R12>
					<R20>-3.05152498e-005</R20>
					<R21>0.000152588356</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Sten</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX522">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX523">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">32</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX524">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX525">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 32
local ReloadTime = 0.09
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 200
local range
local hold = false
local dal = 15
local dah = 35
local ID = 1022
local hor = 0.018
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.1, -0.4, 1)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(1.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new( 1.2, 0,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(1, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.13, -0.55, 1.2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.13, -0.55, 1.1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.13, -0.55, 1)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.45, 1)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.5, 1)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.13, -0.55, 1)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.13, -0.5, 1)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.45, 1)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX526">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Stab</string>
				<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,1)
player = ball.creator.Value
damage = 120
ID = ball.Name
target = {}
on = 1

function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Name == &quot;Blood&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)
&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;connection:disconnect()

&#9;&#9;&#9;end

&#9;&#9;end

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)


</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX527">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>1.5</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Springfield Scoped</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX528">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX529">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX530">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX531">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 0.85
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 40
local stam = 50 
local recoil = 200
local range
local hold = false
local dal = 70
local dah = 70
local ID = 1007
local hor = 0.08
local ver = 0.005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0.05, 1.5, -0.2)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, 1)
local press = false
local sure = false
local spID = &quot;http://www.roblox.com/asset/?id=84631490&quot;

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end
&#9;local em
&#9;if aim.Value then
&#9;re1 = math.random(-1,1)
&#9;re2 = math.random(-1,1)
&#9;re3 = math.random(-1,1)
&#9;em = script.Parent.Parent[&quot;Head&quot;].Position
&#9;else
&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)
&#9;em = script.Parent[&quot;Flame&quot;].Position
&#9;v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;end
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = em + (dir * -2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 1000
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;if not aim.Value then
&#9;local noscope = Instance.new(&quot;IntValue&quot;,p)
&#9;noscope.Name = &quot;NoScope&quot;
&#9;end
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 1
&#9;ex.Name = &quot;EX&quot;
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading and not hold then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true and not hold then return
end
running.Value = true
reloading = true
if aim.Value then
s = true
aim.Value = false
aimoff(s)
end
s = 2
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
if Tool.AmmoScript.Ammo.Value &lt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value + 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - 1
elseif Tool.AmmoScript.Ammo.Value &gt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value + 1
end
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;--crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/8, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.3, -0.25)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.2, -0.25)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;--[[if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end]]
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;--[[if lol == 0 and Tool.Parent == player.Character then
&#9;aimtest()
&#9;end]]
&#9;end))
&#9;end

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;s = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff(s)
&#9;end

&#9;Tool.Enabled = false
&#9;hold = true
&#9;wait()
&#9;repeat
&#9;ReloadSequence() 
&#9;until Tool.AmmoScript.Ammo.Value == AmmoLostOnReload or Tool.AmmoScript.Clip.Value == 0 or hold == false
&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true
WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
hold = false
ah = player.PlayerGui:findFirstChild(&quot;Zoom&quot;)
if ah then ah:Destroy() end
workspace.CurrentCamera.FieldOfView = 70
if player.CameraMode == 1 then
player.CameraMode = 0
end
player.Character.ret:ClearAllChildren()
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 0
end
end
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest(as,zm)

aim.Value = true
WalkSpeed = WalkSpeed - 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if (Cam.focus.p - Cam.CoordinateFrame.p).magnitude &gt; 1 then
player.CameraMode = 1
sure = true
end
coroutine.resume(coroutine.create(function()
ah = game.Lighting.Zoom:Clone()
ah.Parent = player.PlayerGui
ah.Scope.Image = spID
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = i*.1
if i == 1 and not player.Character:findFirstChild(sc[e].Name) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Archivable = true
local h = sc[e]:Clone()
h.Parent = player.Character.ret
h.Anchored = true
h.CanCollide = false
sc[e].Archivable = false
end
end
end
cam.FieldOfView = 70-i*zm/10
crosshair.Value = crosshair.Value - 4
wait(.01)
end
game.Lighting.GunWeld:Clone().Parent = player.Character.ret
crosshair.Value = 0
end))
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait(.01)

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.8, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)
--]]

end

function aimoff(as)

if Tool.Parent ~= player.Character then return end
WalkSpeed = WalkSpeed + 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if sure == true then
player.CameraMode = 0
sure = false
end
coroutine.resume(coroutine.create(function()
crosshair.Value = 0
if ah then ah:Destroy() end
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) then
if sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 1-i*.1
if sc[e].Name == &quot;Left Arm&quot; or sc[e].Name == &quot;Right Arm&quot; then
sc[e].Transparency = 0.3
end
end
end
end
player.Character.ret:ClearAllChildren()
cam.FieldOfView = 20+i*5
wait(.01)
crosshair.Value = crosshair.Value + 4
end
player.PlayerGui.Update.LOL.Visible = false
crosshair.Value = size
end))
end

wait(.01)

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)


wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.25)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.25)

wait(.01)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)

wait(.01)

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.5, -0.2)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; or key == &quot;z&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;s = true
&#9;&#9;local zm = 20
&#9;&#9;if key == &quot;z&quot; then zm = 50 end
&#9;&#9;aimtest(s,zm)
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;s = true
&#9;&#9;aimoff(s)
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;if reloading and not hold then return end
&#9;&#9;running.Value = true
&#9;&#9;hold = false
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX532">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>1.5</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Springfield</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX533">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX534">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX535">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX536">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 0.85
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 40
local dah = 50
local ID = 1007
local hor = 0.001
local ver = 0.0001
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0.05, 1.5, -0.2)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, 1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 30
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-92), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-94), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-96), math.rad(-0), 0)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.8,0)
Tool.Mag.Transparency = 0
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-98), math.rad(-0), 0)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.7,0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-115))
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.6,0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-120))
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.5,0)
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), -0.4, math.rad(-110))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.65, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.5, math.rad(-105))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), -0.6, math.rad(-100))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0.7, math.rad(-95))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.8, math.rad(-90))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.9, math.rad(-85))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-80))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.9, math.rad(-85))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.8, math.rad(-90))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0.7, math.rad(-95))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), -0.6, math.rad(-100))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.65, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.5, math.rad(-105))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), -0.4, math.rad(-110))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-120))
wait(0.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.6,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-115))
wait(0.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.7,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-98), math.rad(-0), 0)
wait(0.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.8,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-96), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-94), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-92), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
Tool.Mag.Transparency = 1
wait(0.05/s)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.05, 1.4, -0.35)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.3, -0.35)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;if lol == 0 then
&#9;aimtest()
&#9;end
&#9;end))

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(-0.8, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.5, -0.2)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX537">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.200000003</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Smoke Grenade</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX538">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1003</int>
					<CoordinateFrame name="CFrame">
						<X>31.2047806</X>
						<Y>386.141602</Y>
						<Z>571.522156</Z>
						<R00>-0.399754137</R00>
						<R01>0.828629255</R01>
						<R02>0.391880363</R02>
						<R10>1.13237602e-005</R10>
						<R11>0.427530974</R11>
						<R12>-0.9040007</R12>
						<R20>-0.9166224</R20>
						<R21>-0.361373603</R21>
						<R22>-0.170916647</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">0</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Sound" referent="RBX539">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Fire</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><null></null></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
				<Item class="SpecialMesh" referent="RBX540">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=16975131</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.5</X>
							<Y>0.5</Y>
							<Z>0.5</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="SpecialMesh" referent="RBX541">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><null></null></Content>
					<token name="MeshType">3</token>
					<string name="Name">smoke</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>30</X>
						<Y>30</Y>
						<Z>30</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX542">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Fade</string>
					<ProtectedString name="Source">part = script.Parent

function lol()
wait(30)
for i = 1, 100 do
wait(0.4)
part.Transparency = part.Transparency + 0.01
end
part:Destroy()
end

lol()</ProtectedString>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX543">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=16975131</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX544">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 60
ID = 1039
fuse = ball.Fuse
d=true
player = ball.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
on = 0
target = {}

function smoke()

&#9;for i = 1, 20 do
&#9;&#9;p = Instance.new(&quot;Part&quot;)
&#9;&#9;p.Anchored = true
&#9;&#9;p.CanCollide = false
&#9;&#9;p.TopSurface = 0
&#9;&#9;p.BottomSurface = 0
&#9;&#9;p.Transparency = 0.2
&#9;&#9;m = 20
&#9;&#9;pos = ball.Position
&#9;&#9;p.CFrame = CFrame.new(ball.Position + Vector3.new(math.random(-m,m),math.random(-5, 10),math.random(-m,m)))
&#9;&#9;p.Shape = &quot;Ball&quot;
&#9;&#9;p.Size = Vector3.new(1,1,1)
&#9;&#9;ball.smoke:Clone().Parent = p
&#9;&#9;p.Name = &quot;Bomb&quot;
&#9;&#9;p.Parent = game.Workspace:findFirstChild(&quot;field&quot;)
&#9;&#9;local hgh = ball:findFirstChild(&quot;Fade&quot;):Clone()
&#9;&#9;hgh.Disabled = false
&#9;&#9;hgh.Parent = p
&#9;end

end

function onTouched(hit)

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) and on == 0 then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor or lol == player then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):remove()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;assist(hit)

&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not humanoid and hit.CanCollide then

&#9;&#9;on = 1
&#9;&#9;connection:disconnect()

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if ball:findFirstChild(&quot;EX&quot;) then
&#9;&#9;&#9;hah = Instance.new(&quot;TextBox&quot;,humanoid.Parent)
&#9;&#9;&#9;hah.Name = &quot;Spec&quot;
&#9;&#9;&#9;game.Debris:AddItem(hah,1)
&#9;&#9;&#9;if ball.EX.Value == 0 then
&#9;&#9;&#9;hah.Text = &quot;Dual&quot;
&#9;&#9;&#9;elseif ball.EX.Value == 1 then
&#9;&#9;&#9;hah.Text = &quot;Sniper Variant&quot;
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function assist(hit)

local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
local sht = enemy:GetChildren()
local assisted = false

if enemy:findFirstChild(&quot;Assist&quot;) then
for i = 1, #sht do
if sht[i].Name == &quot;Assist&quot; then
if sht[i].Text == player.Name then
assisted = true 
return
end
end
end
end

if not assisted then
asgh = Instance.new(&quot;TextBox&quot;,enemy)
asgh.Name = &quot;Assist&quot;
asgh.Text = player.Name
end 

end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)

local x = hit.Position.x
local y = hit.Position.y
local z = hit.Position.z

for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.Position = Vector3.new(x+math.random(-1,1), y+math.random(-1,1), z+math.random(-1,1))
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

ball.Touched:connect(function() if d then ball.Velocity = Vector3.new(ball.Velocity.X/3,ball.Velocity.y/5,ball.Velocity.Z/3) d= false end end)
connection = ball.Touched:connect(onTouched)
wait(fuse.Value)
smoke()
wait(1)
ball:Destroy()</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX545">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -1
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function throw()

if script.Parent.Rocket.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rocket.Clip.Value = script.Parent.Rocket.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 50 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;local fuse = (60 - time) *.05
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(40), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(20), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;Tool.Handle.Transparency = 1
&#9;local newProj = Instance.new(&quot;Part&quot;)
&#9;Tool.smoke:clone().Parent = newProj
&#9;Tool.Mesh:Clone().Parent = newProj
&#9;pos = Tool.Parent:findFirstChild(&quot;Head&quot;).Position
&#9;dir = (pos - target).unit
&#9;pos = pos + (dir * -3)
&#9;newProj.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;newProj.Shape = 1
&#9;newProj.Friction = 1
&#9;newProj.Elasticity = 0
&#9;newProj.FormFactor = 0
&#9;newProj.CanCollide = true
&#9;newProj.Anchored = false
&#9;newProj.Size = Vector3.new(1, 1, 1)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;newProj.Name = &quot;Smoke&quot;
&#9;twist = newProj.CFrame * CFrame.new(0,0,0)
&#9;newProj.Velocity = twist.lookVector * -90
&#9;newProj.RotVelocity=Vector3.new(20,-0, 20)

&#9;local hgh = Tool:findFirstChild(&quot;Fade&quot;):Clone()
&#9;hgh.Parent = newProj

&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0, newProj:GetMass() * 120,0)
&#9;bf.Parent = newProj

&#9;local tick = Instance.new(&quot;IntValue&quot;, newProj)
&#9;tick.Name = &quot;Fuse&quot;
&#9;tick.Value = fuse

&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;

&#9;Tool.Explosion:clone().Parent = newProj

&#9;newProj.Parent = game.Workspace

&#9;local h = Tool:findFirstChild(&quot;LaserBlast&quot;):Clone()
&#9;h.Disabled = false
&#9;h.Parent = newProj
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rocket.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;end

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX546">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.200000003</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Signal Flare</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX547">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">26</int>
					<CoordinateFrame name="CFrame">
						<X>0.347640991</X>
						<Y>0.497070283</Y>
						<Z>0.100158691</Z>
						<R00>-0.999939322</R00>
						<R01>9.13790645e-005</R01>
						<R02>-0.0110164164</R02>
						<R10>9.1715272e-005</R10>
						<R11>1</R11>
						<R12>-3.0013287e-005</R12>
						<R20>0.0110164136</R20>
						<R21>-3.10218384e-005</R21>
						<R22>-0.999939322</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX548">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=16975131</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.5</X>
							<Y>0.300000012</Y>
							<Z>0.5</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Sparkles" referent="RBX549">
					<Properties>
						<bool name="Enabled">true</bool>
						<string name="Name">Sparkles</string>
						<Color3 name="SparkleColor">4294967295</Color3>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX550">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -1
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function throw()

if script.Parent.Rock.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rock.Clip.Value = script.Parent.Rock.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 60 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(40), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(20), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;handle = Tool.Handle
&#9;part = handle:Clone()
&#9;part.Name = &quot;Flare&quot;

&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0,part:GetMass() * 150,0)
&#9;bf.Parent = part
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;Tool.Handle.Transparency = 1
&#9;local dir = target - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;newProj = part
&#9;pos = Tool:findFirstChild(&quot;Handle&quot;).Position
&#9;pos = pos + (dir * 4)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;twist = newProj.CFrame * CFrame.new(0, 0, 0)
&#9;newProj.Velocity = twist.lookVector * 100
&#9;newProj.RotVelocity = Vector3.new(10,0,10)
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;Tool.Explosion:clone().Parent = newProj
&#9;newProj.CanCollide = true
&#9;newProj.Parent = game.Workspace.Fection
&#9;game.Lighting.Flash:Clone().Parent = newProj
&#9;local h = Tool:findFirstChild(&quot;LaserBlast&quot;):Clone()
&#9;h.Disabled = false
&#9;h.Parent = newProj
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rock.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;else
&#9;Tool:Destroy()
&#9;Unequip()
&#9;end

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX551">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 60
ID = 1039
player = ball.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
on = 0
target = {}
d=true

function onTouched(hit)

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) and on == 0 then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor or lol == player then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):remove()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;assist(hit)

&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not humanoid and hit.CanCollide then

&#9;&#9;on = 1
&#9;&#9;connection:disconnect()

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if ball:findFirstChild(&quot;EX&quot;) then
&#9;&#9;&#9;hah = Instance.new(&quot;TextBox&quot;,humanoid.Parent)
&#9;&#9;&#9;hah.Name = &quot;Spec&quot;
&#9;&#9;&#9;game.Debris:AddItem(hah,1)
&#9;&#9;&#9;if ball.EX.Value == 0 then
&#9;&#9;&#9;hah.Text = &quot;Dual&quot;
&#9;&#9;&#9;elseif ball.EX.Value == 1 then
&#9;&#9;&#9;hah.Text = &quot;Sniper Variant&quot;
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function assist(hit)

local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
local sht = enemy:GetChildren()
local assisted = false

if enemy:findFirstChild(&quot;Assist&quot;) then
for i = 1, #sht do
if sht[i].Name == &quot;Assist&quot; then
if sht[i].Text == player.Name then
assisted = true 
return
end
end
end
end

if not assisted then
asgh = Instance.new(&quot;TextBox&quot;,enemy)
asgh.Name = &quot;Assist&quot;
asgh.Text = player.Name
end 

end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)

local x = hit.Position.x
local y = hit.Position.y
local z = hit.Position.z

for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.Position = Vector3.new(x+math.random(-1,1), y+math.random(-1,1), z+math.random(-1,1))
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

ball.Touched:connect(function() if d then ball.Velocity = Vector3.new(ball.Velocity.X/3,ball.Velocity.y/5,ball.Velocity.Z/3) d= false end end)
connection = ball.Touched:connect(onTouched)
wait(15)
ball:Destroy() </ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX552">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Shot</string>
				<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,0.5)
player = ball.creator.Value
high = math.random(ball.DL.Value+10,ball.DH.Value)
low = ball.DL.Value
if player.Perk2.Value == &quot;Stopping Power&quot; then
high = high*.3+high
end
ID = ball.Name
ball.DL:Destroy()
ball.DH:Destroy()
ball.Name = &quot;Projectile&quot;
target = {}
torpo = player.Character.Torso.Position
on = 1


function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Name == &quot;Blood&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Torso&quot; then 

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 20
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (high - (dist-1)*.4)
&#9;&#9;&#9;&#9;&#9;if hurt &lt; low then hurt = low end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;elseif hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 30
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (high*1.2 - (dist-1)*.4)
&#9;&#9;&#9;&#9;&#9;if hurt &lt; low then hurt = low end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt*1/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 20
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (high - (dist-1)*.4)
&#9;&#9;&#9;&#9;&#9;if hurt &lt; low then hurt = low end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;assist(hit)

&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then

&#9;&#9;if hit.CanCollide == true then
&#9;&#9;if player.Perk3.Value == &quot;Deep Impact&quot; then
&#9;&#9;if on == 1 then
&#9;&#9;on = 1.5
&#9;&#9;elseif on == 1.5 then
&#9;&#9;on = 1.7
&#9;&#9;elseif on == 1.7 then
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;else
&#9;&#9;if on == 1 then
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;on = 2.5
&#9;&#9;elseif on == 2.5 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;end

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if ball:findFirstChild(&quot;EX&quot;) then
&#9;&#9;&#9;hah = Instance.new(&quot;TextBox&quot;,humanoid.Parent)
&#9;&#9;&#9;hah.Name = &quot;Spec&quot;
&#9;&#9;&#9;game.Debris:AddItem(hah,1)
&#9;&#9;&#9;if ball.EX.Value == 0 then
&#9;&#9;&#9;hah.Text = &quot;Dual&quot;
&#9;&#9;&#9;elseif ball.EX.Value == 1 then
&#9;&#9;&#9;hah.Text = &quot;Sniper Variant&quot;
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function assist(hit)

local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
local sht = enemy:GetChildren()
local assisted = false

if enemy:findFirstChild(&quot;Assist&quot;) then
for i = 1, #sht do
if sht[i].Name == &quot;Assist&quot; then
if sht[i].Text == player.Name then
assisted = true 
return
end
end
end
end

if not assisted then
asgh = Instance.new(&quot;TextBox&quot;,enemy)
asgh.Name = &quot;Assist&quot;
asgh.Text = player.Name
--game.Debris:AddItem(asgh,5)
end 

end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX553">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Semi</string>
				<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,1)
player = ball.creator.Value
high = ball.DH.Value
low = math.random(ball.DL.Value, ball.DH.Value)
if player.Perk2.Value == &quot;Stopping Power&quot; then
high = high*.3+high
end
ID = ball.Name
ball.DL:Destroy()
ball.DH:Destroy()
ball.Name = &quot;Projectile&quot;
target = {}
torpo = player.Character.Torso.Position
on = 1


function onTouched(hit)

&#9;if hit.Parent == nil or hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Name == &quot;Blood&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Torso&quot; then 
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 70
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (low + (dist-1)*.8)
&#9;&#9;&#9;&#9;&#9;if hurt &gt; high then hurt = high end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt*1.4/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;elseif hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 60
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (low + (dist-1)*.8)
&#9;&#9;&#9;&#9;&#9;if hurt &gt; high then hurt = high end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt*1.4/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 80
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (low + (dist-1)*.8)
&#9;&#9;&#9;&#9;&#9;if hurt &gt; high then hurt = high end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;assist(hit)

&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then

&#9;&#9;if hit.CanCollide == true then
&#9;&#9;if player.Perk3.Value == &quot;Deep Impact&quot; then
&#9;&#9;if on == 1 then
&#9;&#9;on = 1.2
&#9;&#9;elseif on == 1.2 then
&#9;&#9;on = 1.4
&#9;&#9;elseif on == 1.4 then
&#9;&#9;on = 1.6
&#9;&#9;elseif on == 1.6 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;else
&#9;&#9;if on == 1 then
&#9;&#9;on = 1.4
&#9;&#9;elseif on == 1.4 then
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;end

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if ball:findFirstChild(&quot;EX&quot;) then
&#9;&#9;&#9;hah = Instance.new(&quot;TextBox&quot;,humanoid.Parent)
&#9;&#9;&#9;hah.Name = &quot;Spec&quot;
&#9;&#9;&#9;game.Debris:AddItem(hah,1)
&#9;&#9;&#9;if ball.EX.Value == 0 then
&#9;&#9;&#9;hah.Text = &quot;Dual&quot;
&#9;&#9;&#9;elseif ball.EX.Value == 1 then
&#9;&#9;&#9;hah.Text = &quot;Sniper Variant&quot;
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if ball:findFirstChild(&quot;NoScope&quot;) then
&#9;&#9;&#9;ball.NoScope:Clone().Parent = humanoid.Parent
&#9;&#9;end
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function assist(hit)

local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
local sht = enemy:GetChildren()
local assisted = false

if enemy:findFirstChild(&quot;Assist&quot;) then
for i = 1, #sht do
if sht[i].Name == &quot;Assist&quot; then
if sht[i].Text == player.Name then
assisted = true 
return
end
end
end
end

if not assisted then
asgh = Instance.new(&quot;TextBox&quot;,enemy)
asgh.Name = &quot;Assist&quot;
asgh.Text = player.Name
--game.Debris:AddItem(asgh,5)
end 

end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX554">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.5</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Satchel Charge</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX555">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">217</int>
					<CoordinateFrame name="CFrame">
						<X>476.743561</X>
						<Y>403.179321</Y>
						<Z>701.744446</Z>
						<R00>0.169251621</R00>
						<R01>0.000254349929</R01>
						<R02>-0.985580742</R02>
						<R10>2.10081562e-005</R10>
						<R11>0.99999994</R11>
						<R12>0.000261681445</R12>
						<R20>0.985580742</R20>
						<R21>-6.49970752e-005</R21>
						<R22>0.169251621</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">2</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>0.400000006</Y>
						<Z>2</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX556">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=13319240</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
						<Content name="TextureId"><url>http://</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Sound" referent="RBX557">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Fire</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><null></null></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
			</Item>
			<Item class="SpecialMesh" referent="RBX558">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=21334876</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.400000006</X>
						<Y>0.25</Y>
						<Z>0.400000006</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX559">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserBlast</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 250
ID = 600

player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
script.Parent.Explosion.PlayOnRemove = true
on = 0
target = {}
boom = 15

if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end

function onTouched()

&#9;ball.Transparency = 0
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastPressure = 0
&#9;explosion.BlastRadius = boom
   explosion.Parent = game.Workspace
&#9;bam = game.Lighting.Explosion:Clone()
&#9;bam.Parent = game.Workspace
&#9;bam.CFrame = CFrame.new(explosion.Position)
&#9;bam.Blow.Disabled = false
&#9;bam.Name = &quot;Bomb&quot;
&#9;script.Parent.Explosion:Play()

&#9;-- find instigator tag
&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
        if creator then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance, creator) end)
&#9;end

&#9;wait()
&#9;ball:Destroy()

end
&#9;
function onPlayerBlownUp(hit, distance, creator)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and not bam.PlayerGui:findFirstChild(&quot;LOL&quot;) and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update 
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;print(lol)

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

onTouched()</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX560">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -2
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function throw()

if script.Parent.Rock.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rock.Clip.Value = script.Parent.Rock.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 30 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(50), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(30), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-200), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;handle = Tool.Handle
&#9;part = handle:Clone()
&#9;part.Name = &quot;Charge&quot;
&#9;part.CanCollide = true
&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0,part:GetMass() * 50,0)
&#9;bf.Parent = part
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;Tool.Handle.Transparency = 1
&#9;local dir = target - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;newProj = part:Clone()
&#9;pos = Tool:findFirstChild(&quot;Handle&quot;).Position
&#9;pos = pos + (dir * 4)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;twist = newProj.CFrame * CFrame.new(0, 0, 0)
&#9;newProj.Velocity = twist.lookVector * 80
&#9;newProj.RotVelocity = Vector3.new(10,0,10)
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;Tool.Explosion:clone().Parent = newProj
&#9;newProj.Parent = game.Workspace.Fection

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;if Tool.Rock.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;end
&#9;Tool.Enabled = true

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function test()
&#9;if not workspace:FindFirstChild(&quot;Fection&quot;) then return end
&#9;Tool.Handle.Transparency = 1
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait(0.1)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait(0.1)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait(0.1)
&#9;if workspace.Fection:findFirstChild(&quot;Charge&quot;) then
&#9;local bomb =  workspace.Fection:GetChildren()
&#9;for i = 1, #bomb do
&#9;if bomb[i].Name == &quot;Charge&quot; and bomb[i]:findFirstChild(&quot;creator&quot;) and bomb[i].creator.Value and bomb[i].creator.Value.Name == player.Name then
&#9;Tool.LaserBlast:Clone().Parent = bomb[i]
&#9;end
&#9;end
&#9;end
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;wait(0.1)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(20), 0)
&#9;wait(0.1)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(0), 0)
&#9;if Tool.Rock.Clip.Value &gt; 0 then 
&#9;Tool.Handle.Transparency = 0
&#9;else
&#9;Tool:remove()
&#9;Unequip()
&#9;end
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;if Tool.Enabled then
&#9;&#9;test()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX561">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.400000006</Y>
					<Z>1.89999998</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">SVT-40</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX562">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX563">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">10</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX564">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX565">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 10
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 22
local stam = 50 
local recoil = 120
local range
local hold = false
local dal = 30
local dah = 40
local ID = 1030
local hor = 0.015
local ver = 0.00005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.4, 2)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 40
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 2.2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 2.1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 2)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 2)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 2)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 2)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 2)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 2)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 2)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX566">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>1.39999998</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">STG-44</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX567">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX568">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX569">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX570">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 30
local ReloadTime = 0.1
local WalkSpeed = 14
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 240
local range
local hold = false
local dal = 20
local dah = 30
local ID = 1017
local hor = 0.022
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GRight = Vector3.new(1, 0, 0)
GPos = Vector3.new(0.05, 1.4, -0.2)
GUp = Vector3.new(0, 0, 1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, -0.98, 0.175)
Tool.Mag3.Mesh.Offset = Vector3.new(0, -0.9, 0.34)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.8, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, -0.77, 0.142)
Tool.Mag3.Mesh.Offset = Vector3.new(0, -0.7, 0.27)

weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.6, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, -0.59, 0.105)
Tool.Mag3.Mesh.Offset = Vector3.new(0, -0.56, 0.205)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.4, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, -0.39, 0.072)
Tool.Mag3.Mesh.Offset = Vector3.new(0, -0.37, 0.137)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.2, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, -0.197, 0.037)
Tool.Mag3.Mesh.Offset = Vector3.new(0, -0.19, 0.07)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0, 0, 0)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.13, 1.6, -0.3)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.13, 1.5, -0.3)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.13, 1.4, -0.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.2)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)



wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.4, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)

wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.13, 1.4, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.13, 1.4, -0.3)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.4, -0.25)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.2)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.2)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX571">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>0.300000012</Y>
					<Z>0.699999988</Z>
					<R00>-1</R00>
					<R01>3.75536765e-005</R01>
					<R02>2.12619307e-005</R02>
					<R10>2.12629529e-005</R10>
					<R11>0.857494473</R11>
					<R12>-0.514493167</R12>
					<R20>-3.75530944e-005</R20>
					<R21>-0.514493167</R21>
					<R22>-0.857494473</R22>
				</CoordinateFrame>
				<string name="Name">Panzerschrek</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX572">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-191.619675</X>
						<Y>4.70732164</Y>
						<Z>145.23645</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX573">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.479999989</X>
							<Y>0.912</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX574">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">26</int>
					<CoordinateFrame name="CFrame">
						<X>-190.993271</X>
						<Y>4.83337259</Y>
						<Z>142.71489</Z>
						<R00>0.000488645106</R00>
						<R01>0.0277047735</R01>
						<R02>-0.999616027</R02>
						<R10>-0.999860108</R10>
						<R11>0.0167254824</R11>
						<R12>-2.52107784e-005</R12>
						<R20>0.0167183615</R20>
						<R21>0.999476254</R21>
						<R22>0.0277090706</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Flame</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX575">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.624000013</X>
							<Y>0.0480000004</Y>
							<Z>0.56159997</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX576">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.150604</X>
						<Y>5.17573547</Y>
						<Z>143.102478</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX577">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.912</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX578">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.294617</X>
						<Y>5.31967831</Y>
						<Z>143.104034</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX579">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.527999997</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX580">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.438461</X>
						<Y>5.12773848</Y>
						<Z>143.111252</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX581">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX582">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.294632</X>
						<Y>5.36765671</Y>
						<Z>143.103226</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX583">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0480000004</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX584">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.582306</X>
						<Y>5.00780582</Y>
						<Z>143.117264</Z>
						<R00>0.00045556156</R00>
						<R01>-0.999616146</R01>
						<R02>-0.0277027842</R02>
						<R10>-0.999859095</R10>
						<R11>9.63578805e-006</R11>
						<R12>-0.0167899895</R12>
						<R20>0.0167838112</R20>
						<R21>0.0277065281</R21>
						<R22>-0.999475181</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX585">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX586">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.438354</X>
						<Y>4.88777399</Y>
						<Z>143.115295</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX587">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX588">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-191.979523</X>
						<Y>4.70731926</Y>
						<Z>145.246414</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX589">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.912</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX590">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.294571</X>
						<Y>5.22372627</Y>
						<Z>143.105652</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX591">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0480000004</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX592">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.582428</X>
						<Y>5.34370804</Y>
						<Z>143.111603</Z>
						<R00>-0.000439390074</R00>
						<R01>0.999618471</R01>
						<R02>-0.0276167449</R02>
						<R10>0.999859035</R10>
						<R11>-2.43609247e-005</R11>
						<R12>-0.016789807</R12>
						<R20>-0.0167840738</R20>
						<R21>-0.027620228</R21>
						<R22>-0.999477565</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX593">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX594">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.294678</X>
						<Y>5.46363878</Y>
						<Z>143.101624</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX595">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.527999997</X>
							<Y>0.0480000004</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX596">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-191.236221</X>
						<Y>5.57114697</Y>
						<Z>145.211288</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX597">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.0960000008</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX598">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.780319</X>
						<Y>5.40317345</Y>
						<Z>145.201477</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX599">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.432000011</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX600">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-191.235718</X>
						<Y>4.5153656</Y>
						<Z>145.229034</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX601">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>1.44000006</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX602">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.805573</X>
						<Y>4.94722366</Y>
						<Z>149.488876</Z>
						<R00>0.000542286492</R00>
						<R01>-0.999616027</R01>
						<R02>-0.027702013</R02>
						<R10>-0.999857545</R10>
						<R11>-7.46984733e-005</R11>
						<R12>-0.0168774556</R12>
						<R20>0.0168689061</R20>
						<R21>0.0277072173</R21>
						<R22>-0.999473751</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX603">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=3270017</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.671999991</X>
							<Y>0.671999991</Y>
							<Z>0.671999991</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX604">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.811844</X>
						<Y>5.25546694</Y>
						<Z>149.262955</Z>
						<R00>-0.999614954</R00>
						<R01>-0.0277456511</R01>
						<R02>0.000493000785</R02>
						<R10>-2.48479701e-005</R10>
						<R11>-0.0168708358</R11>
						<R12>-0.999857664</R12>
						<R20>0.027750019</R20>
						<R21>-0.999472678</R21>
						<R22>0.0168636478</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX605">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX606">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.499741</X>
						<Y>4.94358206</Y>
						<Z>149.259537</Z>
						<R00>-3.71937713e-005</R00>
						<R01>-0.0276473742</R01>
						<R02>-0.999617755</R02>
						<R10>0.999858141</R10>
						<R11>-0.0168409813</R11>
						<R12>0.00042858423</R12>
						<R20>-0.0168463942</R20>
						<R21>-0.999475896</R21>
						<R22>0.0276440773</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX607">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX608">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-191.123566</X>
						<Y>4.94351053</Y>
						<Z>149.27684</Z>
						<R00>0.000489359838</R00>
						<R01>-0.0277047716</R01>
						<R02>0.999616027</R02>
						<R10>-0.999858022</R10>
						<R11>-0.0168475416</R11>
						<R12>2.25418353e-005</R12>
						<R20>0.0168404467</R20>
						<R21>-0.999474227</R21>
						<R22>-0.0277090818</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX609">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX610">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">26</int>
					<CoordinateFrame name="CFrame">
						<X>-190.810883</X>
						<Y>4.94392347</Y>
						<Z>149.296997</Z>
						<R00>0.000488645106</R00>
						<R01>0.0277047735</R01>
						<R02>-0.999616027</R02>
						<R10>-0.999860108</R10>
						<R11>0.0167254824</R11>
						<R12>-2.52107784e-005</R12>
						<R20>0.0167183615</R20>
						<R21>0.999476254</R21>
						<R22>0.0277090706</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX611">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.624000013</X>
							<Y>0.0480000004</Y>
							<Z>0.56159997</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX612">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.87529</X>
						<Y>4.49683046</Y>
						<Z>146.97226</Z>
						<R00>-0.999615252</R00>
						<R01>-0.0141704902</R01>
						<R02>-0.0238431487</R02>
						<R10>0.000113874288</R10>
						<R11>0.857535064</R11>
						<R12>-0.514425516</R12>
						<R20>0.0277359989</R20>
						<R21>-0.514230251</R21>
						<R22>-0.857203543</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX613">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.192000002</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX614">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-190.898758</X>
						<Y>4.89063835</Y>
						<Z>146.12587</Z>
						<R00>0.000427966617</R00>
						<R01>0.0277052671</R01>
						<R02>-0.999616027</R02>
						<R10>-0.999859095</R10>
						<R11>0.0167856421</R11>
						<R12>3.71585993e-005</R12>
						<R20>0.0167802256</R20>
						<R21>0.999475241</R21>
						<R22>0.0277085472</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX615">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.686399996</X>
							<Y>0.143999994</Y>
							<Z>0.686399996</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX616">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.138809</X>
						<Y>5.17859554</Y>
						<Z>146.12767</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX617">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0480000004</X>
							<Y>0.239999995</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX618">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.114731</X>
						<Y>5.0298152</Y>
						<Z>146.129517</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX619">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.287999988</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX620">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.902084</X>
						<Y>4.8886199</Y>
						<Z>146.005936</Z>
						<R00>0.000427966617</R00>
						<R01>0.0277052671</R01>
						<R02>-0.999616027</R02>
						<R10>-0.999859095</R10>
						<R11>0.0167856421</R11>
						<R12>3.71585993e-005</R12>
						<R20>0.0167802256</R20>
						<R21>0.999475241</R21>
						<R22>0.0277085472</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>7</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX621">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.624000013</X>
							<Y>0.946285725</Y>
							<Z>0.624000013</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX622">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-190.924011</X>
						<Y>4.87530136</Y>
						<Z>145.21434</Z>
						<R00>0.000427966617</R00>
						<R01>0.0277052671</R01>
						<R02>-0.999616027</R02>
						<R10>-0.999859095</R10>
						<R11>0.0167856421</R11>
						<R12>3.71585993e-005</R12>
						<R20>0.0167802256</R20>
						<R21>0.999475241</R21>
						<R22>0.0277085472</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX623">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.686399996</X>
							<Y>0.143999994</Y>
							<Z>0.686399996</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX624">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.779739</X>
						<Y>4.17940569</Y>
						<Z>145.222061</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX625">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.768000007</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX626">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-190.947922</X>
						<Y>4.70732832</Y>
						<Z>145.217834</Z>
						<R00>-0.999616921</R00>
						<R01>-0.00044631405</R01>
						<R02>-0.0276737437</R02>
						<R10>1.9127132e-005</R10>
						<R11>0.999858618</R11>
						<R12>-0.0168163255</R12>
						<R20>0.0276773348</R20>
						<R21>-0.0168104153</R21>
						<R22>-0.999475539</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.5</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX627">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.912</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX628">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-190.982666</X>
						<Y>5.34365988</Y>
						<Z>143.094986</Z>
						<R00>-0.000439390074</R00>
						<R01>0.999618471</R01>
						<R02>-0.0276167449</R02>
						<R10>0.999859035</R10>
						<R11>-2.43609247e-005</R11>
						<R12>-0.016789807</R12>
						<R20>-0.0167840738</R20>
						<R21>-0.027620228</R21>
						<R22>-0.999477565</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX629">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.0960000008</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX630">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-190.982513</X>
						<Y>4.83978271</Y>
						<Z>143.10347</Z>
						<R00>0.000427966617</R00>
						<R01>0.0277052671</R01>
						<R02>-0.999616027</R02>
						<R10>-0.999859095</R10>
						<R11>0.0167856421</R11>
						<R12>3.71585993e-005</R12>
						<R20>0.0167802256</R20>
						<R21>0.999475241</R21>
						<R22>0.0277085472</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX631">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.686399996</X>
							<Y>0.143999994</Y>
							<Z>0.686399996</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX632">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-190.98259</X>
						<Y>5.03175449</Y>
						<Z>143.100235</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX633">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.575999975</X>
							<Y>0.239999995</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX634">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-190.862762</X>
						<Y>5.29570103</Y>
						<Z>143.092484</Z>
						<R00>-0.707198083</R00>
						<R01>0.70647651</R01>
						<R02>-0.027600538</R02>
						<R10>0.706974208</R10>
						<R11>0.707039535</R11>
						<R12>-0.0168098435</R12>
						<R20>0.00763891218</R20>
						<R21>-0.031400755</R21>
						<R22>-0.999477684</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX635">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.384000003</X>
							<Y>0.0960000008</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX636">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-191.198502</X>
						<Y>5.00775623</Y>
						<Z>143.106628</Z>
						<R00>-0.99961859</R00>
						<R01>-0.000444958598</R01>
						<R02>-0.0276128016</R02>
						<R10>1.77712081e-005</R10>
						<R11>0.999859631</R11>
						<R12>-0.0167552941</R12>
						<R20>0.0276163798</R20>
						<R21>-0.0167493932</R21>
						<R22>-0.999478281</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX637">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.239999995</X>
							<Y>0.287999988</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX638">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 14
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = 20
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50
local hor = 0.1
local ver = 0.001

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.Rock.Clip.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;Tool.Rock.Clip.Value = Tool.Rock.Clip.Value - 1
&#9;local dir = v - script.Parent[&quot;Flame&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = Instance.new(&quot;Part&quot;)
&#9;p.Locked = true
&#9;p.BackSurface = 0
&#9;p.BottomSurface = 0
&#9;p.FrontSurface = 0
&#9;p.LeftSurface = 0
&#9;p.RightSurface = 0
&#9;p.TopSurface = 0
&#9;p.Size = Vector3.new(1,1,4)
&#9;p.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 200
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,p)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;Tool.RocketScript:clone().Parent = p
&#9;Tool.Explosion:clone().Parent = p
&#9;Tool.Swoosh:clone().Parent = p
&#9;Tool.Mesh:Clone().Parent = p
&#9;local s = Tool[&quot;RocketScript&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function fire()

&#9;if Tool.Rock.Clip.Value &lt;= 0 then return end
&#9;if reloading then return end

&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;wait()

&#9;for i = 1, 8 do
&#9;&#9;p = Instance.new(&quot;Part&quot;)
&#9;&#9;p.Anchored = true
&#9;&#9;p.CanCollide = false
&#9;&#9;p.TopSurface = 0
&#9;&#9;p.BottomSurface = 0
&#9;&#9;m = 2
&#9;&#9;pos = Tool.Handle.CFrame.lookVector * -5
&#9;&#9;p.CFrame = CFrame.new(Tool.Handle.Position + pos + Vector3.new(math.random(-m,m),math.random(-m,m),math.random(-m,m)))
&#9;&#9;p.Shape = &quot;Ball&quot;
&#9;&#9;p.Size = Vector3.new(1,1,1)
&#9;&#9;p.Name = &quot;Bb&quot;
&#9;&#9;Tool.smoke:Clone().Parent = p
&#9;&#9;smo = script.Parent.RocketScript.SmokeScript:Clone()
&#9;&#9;smo.Disabled = false
&#9;&#9;smo.Parent = p
&#9;&#9;p.Parent = game.Workspace
&#9;end

&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;--coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait(.1)
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
--&#9;end))

end


function Equip(mouse)

running.Value = false
reloading = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

wait()

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; WalkSpeed then
&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

end

function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;Tool.Enabled = false
&#9;fire()
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
&#9;weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
&#9;weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
&#9;weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
&#9;weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
&#9;weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
&#9;weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
&#9;wait(0.01)
&#9;weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
&#9;if Tool.Rock.Clip.Value == 0 then
&#9;Tool:Destroy()
&#9;Unequip()
&#9;end
&#9;wait(2)
&#9;weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
&#9;weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
&#9;weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
&#9;weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
&#9;weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
&#9;weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
&#9;weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
&#9;wait(0.01)
&#9;Tool.Enabled = true

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX639">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Swoosh</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/Rocket whoosh 01.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX640">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GunWeld</string>
					<ProtectedString name="Source">local tool = script.Parent

local MasterCFrameValues = {}
local meta = {
__call = function(tab,arg)
&#9;for i = 1, #tab do
&#9;&#9;if tab[i][1] == arg then
&#9;&#9;&#9;return tab[i][2]
&#9;&#9;end
&#9;end
&#9;return CFrame.new()
end}
setmetatable(MasterCFrameValues,meta)

local ch = tool:GetChildren()
for i = 1, #ch do
&#9;if ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;table.insert(MasterCFrameValues,{ch[i],ch[i].CFrame:inverse()})
&#9;&#9;ch[i].Anchored = false
&#9;&#9;if ch[i].Name ~= &quot;Handle&quot; then
&#9;&#9;&#9;ch[i].CanCollide = false
&#9;&#9;else
&#9;&#9;&#9;ch[i].CanCollide = true
&#9;&#9;end
&#9;end
end

function weld()
&#9;local han = tool:FindFirstChild(&quot;Handle&quot;)
&#9;if not han then
&#9;&#9;print(&quot;Handle went bye bye&quot;)
&#9;&#9;return
&#9;end
&#9;local ch = han:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;Weld&quot;) then
&#9;&#9;&#9;ch[i]:remove()
&#9;&#9;end
&#9;end
&#9;local ch = tool:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i] ~= han and ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;w.Part0 = han
&#9;&#9;&#9;w.Part1 = ch[i]
&#9;&#9;&#9;w.C0 = MasterCFrameValues(han)
&#9;&#9;&#9;w.C1 = MasterCFrameValues(ch[i])
&#9;&#9;&#9;w.Parent = han
&#9;&#9;end
&#9;end
end

tool.Equipped:connect(weld)</ProtectedString>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX641">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><null></null></Content>
					<token name="MeshType">3</token>
					<string name="Name">smoke</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>5</X>
						<Y>5</Y>
						<Z>5</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX642">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://roblox.com/asset/?id=2251534</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.200000003</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>0.5</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX643">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RocketScript</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 300
ID = 500
script.Parent.Explosion.PlayOnRemove = true -- play explosion sound when projectile removed from game
boom = 20
player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
target = {}
on = 0
if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end

--[[function smoke(size, ahe)

&#9;wait()

&#9;p = Instance.new(&quot;Part&quot;)
&#9;p.Anchored = true
&#9;p.CanCollide = false
&#9;p.TopSurface = 0
&#9;p.BottomSurface = 0
&#9;p.Name = &quot;Bb&quot;
&#9;m = 1
&#9;p.CFrame = CFrame.new(script.Parent.Position + (script.Parent.CFrame.lookVector * ahe) + Vector3.new(math.random(-m,m),math.random(-m,m),math.random(-m,m)))
&#9;p.Shape = &quot;Ball&quot;
&#9;p.Size = Vector3.new(size,size,size)
&#9;smo = script.SmokeScript:clone()
&#9;smo.Disabled = false
&#9;smo.Parent = p
&#9;p.Parent = game.Workspace

end]]

function blow(hit)

&#9;if not hit.CanCollide and not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;return
&#9;end

&#9;if on == 1 then return end
&#9;on = 1

&#9;ball.Anchored = true
&#9;swoosh:stop()
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastRadius = boom
&#9;explosion.BlastPressure = 0
&#9;explosion.Parent = game.Workspace
&#9;script.Parent.Explosion:Play()

&#9;ball.Anchored = true
&#9;ball.CanCollide = false
&#9;ball.Transparency = 1

&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
&#9;if creator then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance) end)
&#9;end
&#9;
&#9;connection:disconnect()

&#9;wait(1)

&#9;ball:Destroy()

end

function onPlayerBlownUp(hit, distance)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and not bam.PlayerGui:findFirstChild(&quot;LOL&quot;) and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/5
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/5
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

swoosh = script.Parent.Swoosh
swoosh:play()

connection = ball.Touched:connect(blow)

--[[while ball.Parent do
smoke(2, -4)
wait(.1)
end]]

wait(5)

script.Parent.Explosion.PlayOnRemove = false
swoosh:stop()
ball:Destroy()

</ProtectedString>
				</Properties>
				<Item class="Script" referent="RBX644">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SmokeScript</string>
						<ProtectedString name="Source">wait(2)

for i = 1, 10 do
&#9;script.Parent.Transparency = script.Parent.Transparency + 0.1
&#9;script.Parent.CFrame = CFrame.new(script.Parent.Position + Vector3.new(math.random(-i * 0.1,i * 0.1), i * 0.1, math.random(-i * 0.1,i * 0.1)))
&#9;wait(0.12)
end

script.Parent:Remove()</ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX645">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.5</Y>
					<Z>0.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">PTRS-41</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX646">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX647">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX648">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">40</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX649">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 0.8
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 40
local stam = 50 
local recoil = 250
local range
local hold = false
local dal = 70
local dah = 70
local ID = 1034
local hor = 0.08
local ver = 0.005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.1, -0.5, 0.5)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false
local sure = false
local spID = &quot;http://www.roblox.com/asset/?id=84631490&quot;

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end
&#9;local em
&#9;if aim.Value then
&#9;re1 = math.random(-1,1)
&#9;re2 = math.random(-1,1)
&#9;re3 = math.random(-1,1)
&#9;em = script.Parent.Parent[&quot;Head&quot;].Position
&#9;else
&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)
&#9;em = script.Parent[&quot;Flame&quot;].Position
&#9;v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;end
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = em + (dir * -2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 1100
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 1
&#9;ex.Name = &quot;EX&quot;
&#9;if not aim.Value then
&#9;local noscope = Instance.new(&quot;IntValue&quot;,p)
&#9;noscope.Name = &quot;NoScope&quot;
&#9;end
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading and not hold then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.1/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.1/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;--crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/8, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.6)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.5)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true
WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
hold = false
ah = player.PlayerGui:findFirstChild(&quot;Zoom&quot;)
if ah then ah:Destroy() end
workspace.CurrentCamera.FieldOfView = 70
if player.CameraMode == 1 then
player.CameraMode = 0
end
player.Character.ret:ClearAllChildren()
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 0
end
end
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest(as,zm)

aim.Value = true
WalkSpeed = WalkSpeed - 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if (Cam.focus.p - Cam.CoordinateFrame.p).magnitude &gt; 1 then
player.CameraMode = 1
sure = true
end
coroutine.resume(coroutine.create(function()
ah = game.Lighting.Zoom:Clone()
ah.Parent = player.PlayerGui
ah.Scope.Image = spID
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = i*.1
if i == 1 and not player.Character:findFirstChild(sc[e].Name) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Archivable = true
local h = sc[e]:Clone()
h.Parent = player.Character.ret
h.Anchored = true
h.CanCollide = false
sc[e].Archivable = false
end
end
end
cam.FieldOfView = 70-i*zm/10
crosshair.Value = crosshair.Value - 4
wait(.01)
end
game.Lighting.GunWeld:Clone().Parent = player.Character.ret
crosshair.Value = 0
end))
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0.5)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 0.5)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait(.01)

Tool.GripForward = Vector3.new(0.3, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff(as)

if Tool.Parent ~= player.Character then return end
WalkSpeed = WalkSpeed + 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
local Cam = workspace.CurrentCamera
if sure == true then
player.CameraMode = 0
sure = false
end
coroutine.resume(coroutine.create(function()
crosshair.Value = 0
if ah then ah:Destroy() end
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) then
if sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 1-i*.1
if sc[e].Name == &quot;Left Arm&quot; or sc[e].Name == &quot;Right Arm&quot; then
sc[e].Transparency = 0.3
end
end
end
end
player.Character.ret:ClearAllChildren()
cam.FieldOfView = 20+i*5
wait(.01)
crosshair.Value = crosshair.Value + 4
end
player.PlayerGui.Update.LOL.Visible = false
crosshair.Value = size
end))

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 0.5)

wait(.01)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0.5)

wait(.01)

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0.5)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; or key == &quot;z&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;s = true
&#9;&#9;local zm = 20
&#9;&#9;if key == &quot;z&quot; then zm = 50 end
&#9;&#9;aimtest(s,zm)
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;s = true
&#9;&#9;aimoff(s)
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;if reloading and not hold then return end
&#9;&#9;running.Value = true
&#9;&#9;hold = false
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX650">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.300000012</Y>
					<Z>1.29999995</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">PPSh-41</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX651">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX652">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">35</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX653">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX654">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 35
local ReloadTime = 0.06
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 180
local range
local hold = false
local dal = 14
local dah = 22
local ID = 1011
local hor = 0.016
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.1, -0.3, 1.3)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 40
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.2, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.8, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.6, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.2, 0)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.14, -0.3, 1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.14, -0.3, 1.4)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.14, -0.3, 1.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.3, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)



wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.14, -0.3, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.14, -0.3, 1.3)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.12, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.25, 1.3)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.3)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX655">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>0</Y>
					<Z>0.600000024</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">P38</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX656">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX657">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX658">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">96</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX659">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 18
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 160
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1008
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, -1, 0)
GPos = Vector3.new(-0.1, 0, 0.6)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, -1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.03, -0.2, 0.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.03, -0.1, 0.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.03, -0, 0.7)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed then return end
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, -1, 0)
Tool.GripPos = Vector3.new(-0.1, 0, 0.6)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(-0.2, -1, 0)
Tool.GripPos = Vector3.new(-0.05, 0, 0.65)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0.3, -1, 0)
Tool.GripPos = Vector3.new(0.03, -0, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, -1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, -1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, -1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, -1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(-0.8, -1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(-0.7, -1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, -1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, -1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, -1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, -1, 0)
Tool.GripPos = Vector3.new(0.03, -0, 0.7)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, -1, 0)
Tool.GripPos = Vector3.new(0, -0, 0.65)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, -1, 0)
Tool.GripPos = Vector3.new(-0.05, 0, 0.6)

wait()

Tool.GripForward = Vector3.new(0, -1, 0)
Tool.GripPos = Vector3.new(-0.1, 0, 0.6)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, -1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;--run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX660">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.100000001</X>
					<Y>-0.300000012</Y>
					<Z>0.550000012</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>-0</R22>
				</CoordinateFrame>
				<string name="Name">Nambu</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX661">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX662">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX663">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">96</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX664">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 18
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 180
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1014
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0.1, -0.3, 0.55)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 0, -1)

local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, 0.2, 0.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, 0.1, 0.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, 0, 0.7)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed then return end
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, -0.3, 0.55)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(0.2, 1, 0)
Tool.GripPos = Vector3.new(0, -0.3, 0.65)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 1, 0)
Tool.GripPos = Vector3.new(-0.05, 0, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 1, 0)
Tool.GripPos = Vector3.new(-0.05, 0, 0.7)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 1, 0)
Tool.GripPos = Vector3.new(0, -0.3, 0.65)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, -0.3, 0.55)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(0.1, -0.3, 0.55)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, -1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;--run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX665">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>1.5</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Mosin Nagant Scoped</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX666">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX667">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX668">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX669">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 1
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 40
local stam = 50 
local recoil = 200
local range
local hold = false
local dal = 70
local dah = 70
local ID = 1021
local hor = 0.08
local ver = 0.005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0.05, 1.5, -0.2)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, 1)
local press = false
local sure = false
local spID = &quot;http://www.roblox.com/asset/?id=84625241&quot;

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end
&#9;local em
&#9;if aim.Value then
&#9;re1 = math.random(-1,1)
&#9;re2 = math.random(-1,1)
&#9;re3 = math.random(-1,1)
&#9;em = script.Parent.Parent[&quot;Head&quot;].Position
&#9;else
&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)
&#9;em = script.Parent[&quot;Flame&quot;].Position
&#9;v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;end
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = em + (dir * -2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 1000
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 1
&#9;ex.Name = &quot;EX&quot;
&#9;if not aim.Value then
&#9;local noscope = Instance.new(&quot;IntValue&quot;,p)
&#9;noscope.Name = &quot;NoScope&quot;
&#9;end
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading and not hold then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true and not hold then return
end
running.Value = true
reloading = true
if aim.Value then
s = true
aim.Value = false
aimoff(s)
end
s = 2
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
if Tool.AmmoScript.Ammo.Value &lt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value + 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - 1
elseif Tool.AmmoScript.Ammo.Value &gt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value + 1
end
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;--crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/8, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.05, 1.4, -0.35)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.3, -0.35)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;--[[if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end]]
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;--[[if lol == 0 and Tool.Parent == player.Character then
&#9;aimtest()
&#9;end]]
&#9;end))
&#9;end

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;s = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff(s)
&#9;end

&#9;Tool.Enabled = false
&#9;hold = true
&#9;wait()
&#9;repeat
&#9;ReloadSequence() 
&#9;until Tool.AmmoScript.Ammo.Value == AmmoLostOnReload or Tool.AmmoScript.Clip.Value == 0 or hold == false
&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true
WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
hold = false
ah = player.PlayerGui:findFirstChild(&quot;Zoom&quot;)
if ah then ah:Destroy() end
workspace.CurrentCamera.FieldOfView = 70
if player.CameraMode == 1 then
player.CameraMode = 0
end
running.Value = false
player.Character.ret:ClearAllChildren()
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 0
end
end
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest(as,zm)

aim.Value = true
WalkSpeed = WalkSpeed - 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if (Cam.focus.p - Cam.CoordinateFrame.p).magnitude &gt; 1 then
player.CameraMode = 1
sure = true
end
ah = game.Lighting.Zoom:Clone()
ah.Parent = player.PlayerGui
ah.Scope.Image = spID
coroutine.resume(coroutine.create(function()
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = i*.1
if i == 1 and not player.Character:findFirstChild(sc[e].Name) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Archivable = true
local h = sc[e]:Clone()
h.Parent = player.Character.ret
h.Anchored = true
h.CanCollide = false
sc[e].Archivable = false
end
end
end
cam.FieldOfView = 70-i*zm/10
crosshair.Value = crosshair.Value - 4
wait(.01)
end
game.Lighting.GunWeld:Clone().Parent = player.Character.ret
crosshair.Value = 0
end))
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait(.01)

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)

Tool.GripForward = Vector3.new(-0.8, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff(as)

if Tool.Parent ~= player.Character then return end
WalkSpeed = WalkSpeed + 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if sure == true then
player.CameraMode = 0
sure = false
end
coroutine.resume(coroutine.create(function()
crosshair.Value = 0
ah = player.PlayerGui:findFirstChild(&quot;Zoom&quot;)
if ah then ah:Destroy() end
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) then
if sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 1-i*.1
if sc[e].Name == &quot;Left Arm&quot; or sc[e].Name == &quot;Right Arm&quot; then
sc[e].Transparency = 0.3
end
end
end
end
player.Character.ret:ClearAllChildren()
cam.FieldOfView = 70
wait(.01)
crosshair.Value = crosshair.Value + 4
end
player.PlayerGui.Update.LOL.Visible = false
crosshair.Value = size
end))
end

wait(.01)

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)


wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.3)

wait(.01)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)

wait(.01)

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.5, -0.2)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; or key == &quot;z&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;s = true
&#9;&#9;local zm = 20
&#9;&#9;if key == &quot;z&quot; then zm = 50 end
&#9;&#9;aimtest(s,zm)
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;s = true
&#9;&#9;aimoff(s)
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;if reloading and not hold then return end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX670">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>1.5</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Mosin Nagant</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX671">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX672">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX673">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX674">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 1
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 40
local dah = 50
local ID = 1021
local hor = 0.001
local ver = 0.0001
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0.05, 1.5, -0.2)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, 1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 30
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.05, 1.4, -0.35)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.3, -0.35)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;if lol == 0 then
&#9;aimtest()
&#9;end
&#9;end))

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(-0.8, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.2, -0.35)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.3, -0.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.4, -0.25)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(0.05, 1.5, -0.2)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX675">
			<Properties>
				<bool name="CanBeDropped">true</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.400000006</Y>
					<Z>1.79999995</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">MonDragon</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX676">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX677">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">10</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX678">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX679">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 10
local ReloadTime = 0.08
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 30
local dah = 40
local ID = 1041
local hor = 0.02
local ver = 0.0008
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.4, 1.8)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading then return
end
running.Value = true
reloading = true
if aim.Value then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(318), math.rad(0), math.rad(-92))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-2), 0)

wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(316), math.rad(0), math.rad(-94))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-102), math.rad(-4), 0)

wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(314), math.rad(0), math.rad(-96))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-104), math.rad(-6), 0)

wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(312), math.rad(0), math.rad(-98))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-106), math.rad(-8), 0)

wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-108), math.rad(-10), 0)

wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-12), 0)

wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-14), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-16), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-18), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20), 0)

local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = false
mag.Parent = workspace
game.Debris:AddItem(mag,3)
w = Instance.new(&quot;Weld&quot;, mag) 
w.Part0 = mag 
w.Part1 = Tool.Mag

local sh = mag:findFirstChild(&quot;Mesh&quot;)

for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310-i*2), math.rad(-i), math.rad(-110+i*2))
sh.Offset = Vector3.new(0,-i*.1-.2,0)
wait(.03/s)
end
w:Destroy()
wait(.01/s)
for i = 1, 10 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310-i*2), math.rad(-5+1.5*-i), math.rad(-100+i))
weld33.C1 = CFrame.new(-1, 0.2, 0.2+i*.01) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20+i), 0)
wait(.01/s)
end
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-10), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), math.rad(-20), math.rad(-90))
wait(.01/s)
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(285-i*3), math.rad(-20-i*6), math.rad(-90))
wait(.01/s)
end
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270+i*3), math.rad(-50+i*6), math.rad(-90))
wait(.01/s)
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(-10), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-10), 0)
wait(.01/s)
Tool.Mag.Transparency = 0
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300+i*2), math.rad(i), math.rad(-90-i*2))
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.5+i*.1-.2,0)
wait(.01/s)
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(11), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-111), math.rad(-10), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(12), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-112), math.rad(-10), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(18), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-118), math.rad(-10), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(312), math.rad(14), math.rad(-98))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-114), math.rad(-8), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(314), math.rad(8), math.rad(-96))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-6), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(316), math.rad(4), math.rad(-94))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-4), 0)

wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(318), math.rad(2), math.rad(-92))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-2), 0)

wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

Tool.Mag.Mesh.Offset = Vector3.new(0,-.2,0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.9)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.8)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.78, 0, 1)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.45, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.8)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.8)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.8)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX680">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.400000006</Y>
					<Z>-0</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Molotov</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX681">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1004</int>
					<CoordinateFrame name="CFrame">
						<X>131.278519</X>
						<Y>314.099915</Y>
						<Z>652.103394</Z>
						<R00>-0.0768091679</R00>
						<R01>4.31264816e-005</R01>
						<R02>-0.997045577</R02>
						<R10>1.65871097e-006</R10>
						<R11>1</R11>
						<R12>4.31264816e-005</R12>
						<R20>0.997045577</R20>
						<R21>1.65871097e-006</R21>
						<R22>-0.0768091679</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>2.25369644</X>
						<Y>-0.000244140625</Y>
						<Z>-15.8408175</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.600000024</X>
						<Y>1.60000014</Y>
						<Z>0.600000024</Z>
					</Vector3>
				</Properties>
				<Item class="Sound" referent="RBX682">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Explosion</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>rbxasset://sounds//Rocket shot.wav</url></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
				<Item class="SpecialMesh" referent="RBX683">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=29690481</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1.10000002</X>
							<Y>1.04999995</Y>
							<Z>1.10000002</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Fire" referent="RBX684">
					<Properties>
						<Color3 name="Color">4294914816</Color3>
						<bool name="Enabled">false</bool>
						<string name="Name">Fire</string>
						<Color3 name="SecondaryColor">4294901760</Color3>
						<float name="heat_xml">1</float>
						<float name="size_xml">2</float>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX685">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 150
ID = 1036

player = ball.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
script.Parent.Explosion.PlayOnRemove = true
on = 0
target = {}


function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Name == &quot;Bomb&quot; then
&#9;&#9;return
&#9;end

&#9;if on == 1 then return end

&#9;on = 1

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor or lol == player then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage-60)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage-60)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;&#9;end

&#9;&#9;end

&#9;end
&#9;
&#9;ball.Anchored = true
&#9;ball.CanCollide = false
&#9;ball.Transparency = 1
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastPressure = 0
&#9;explosion.BlastRadius = 5
   explosion.Parent = game.Workspace
&#9;script.Parent.Explosion:Play()

&#9;-- find instigator tag

&#9;for i = 1, 5 do
&#9;&#9;p = Instance.new(&quot;Part&quot;)
&#9;&#9;p.Anchored = false
&#9;&#9;p.CanCollide = true
&#9;&#9;p.TopSurface = 0
&#9;&#9;p.BottomSurface = 0
&#9;&#9;p.Transparency = 1
&#9;&#9;m = 5
&#9;&#9;pos = ball.Position
&#9;&#9;p.Parent = game.Workspace.Fection
&#9;&#9;p.CFrame = CFrame.new(ball.Position + Vector3.new(math.random(-m,m),math.random(2,4),math.random(-m,m)))
&#9;&#9;p.FormFactor = 2
&#9;&#9;p.Size = Vector3.new(1,0.4,1)
&#9;&#9;p.Name = &quot;Fire&quot;
&#9;&#9;fire = ball:findFirstChild(&quot;Fire&quot;):Clone()
&#9;&#9;fire.Size = math.random(6,10)
&#9;&#9;fire.Heat = math.random(6,10)
&#9;&#9;fire.Parent = p
&#9;&#9;fire.Enabled = true
&#9;&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;&#9;tag:Clone().Parent = p
&#9;&#9;game.Debris:AddItem(p,math.random(10,25))
&#9;end

&#9;connection:disconnect()
&#9;wait(1)
&#9;ball:Destroy()

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)

wait(5)

ball:Destroy()</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX686">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -2
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function throw()

if script.Parent.Rocket.Clip.Value == 0 then return 
&#9;end 
&#9;script.Parent.Rocket.Clip.Value = script.Parent.Rocket.Clip.Value - 1

&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), math.rad(-0))
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait(0.1)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), math.rad(-10))
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait(0.1)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait(0.1)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;wait(0.1)
&#9;Tool.Handle.Fire.Enabled = true
&#9;time = 0
&#9;repeat
&#9;wait(.1)
&#9;if time == 50 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(40), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(20), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-180), math.rad(-0), 0)
&#9;target = script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint
&#9;handle = Tool.Handle
&#9;part = handle:Clone()
&#9;part.Name = &quot;Projectile&quot;
&#9;local bf = Instance.new(&quot;BodyForce&quot;)
&#9;bf.force = Vector3.new(0,part:GetMass() * 150,0)
&#9;bf.Parent = part
&#9;local dir = target - script.Parent[&quot;Handle&quot;].Position
&#9;dir = computeDirection(dir)
&#9;newProj = part:Clone()
&#9;pos = Tool:findFirstChild(&quot;Handle&quot;).Position
&#9;pos = pos + (dir * 4)
&#9;newProj.CFrame = CFrame.new(pos, pos + dir)
&#9;twist = newProj.CFrame * CFrame.new(0, 0, 0)
&#9;newProj.Velocity = twist.lookVector * 100
&#9;newProj.RotVelocity = Vector3.new(10,0,10)
&#9;Tool.Handle.Transparency = 1
&#9;Tool.Handle.Fire.Enabled = false
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,newProj)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;newProj.Parent = game.Workspace
&#9;Tool.Explosion:clone().Parent = newProj
&#9;local s = Tool:findFirstChild(&quot;ProjectileScript&quot;):Clone()
&#9;s.Disabled = false
&#9;s.Parent = newProj
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-160), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-140), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-130), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.03)
&#9;if Tool.Rocket.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.03)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.03)
&#9;end

end
function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX687">
			<Properties>
				<bool name="CanBeDropped">true</bool>
				<bool name="Enabled">false</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.300000012</Y>
					<Z>0.699999988</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Maxim</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX688">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX689">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX690">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">150</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX691">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 50
local ReloadTime = 0.12
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 300
local range
local hold = false
local dal = 25
local dah = 35
local ID = 1042
local hor = 0.03
local ver = 0.001
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.1, -0.3, 1)
GUp = Vector3.new(0, 1, 0)

local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(1.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new( 1.2, 0,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(1, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.6, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(-0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 0.9)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 0.8)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 0.7)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 0.9)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 0.8)

weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 0.7)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
Tool.GripForward = Vector3.new(0.72, 0, 1)
--]]

end

function aimoff()

Tool.GripForward = Vector3.new(0.7, 0, 1)
wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0.7)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 0.7)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 0.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 0.9)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX692">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.119999997</X>
					<Y>-0.649999976</Y>
					<Z>1</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">MP40</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX693">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX694">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">32</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX695">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX696">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 32
local ReloadTime = 0.12
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 260
local range
local hold = false
local dal = 25
local dah = 35
local ID = 1001
local hor = 0.02
local ver = 0.0015
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.12, -0.65, 1)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 40
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.2, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.6, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.2, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.13, -0.75, 0.8)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.13, -0.75, 0.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.13, -0.75, 0.6)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.65, 1)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.7, 0.8)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)



wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.13, -0.75, 0.6)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.13, -0.75, 0.6)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.7, 0.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.65, 1)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.12, -0.65, 1)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX697">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.400000006</Y>
					<Z>1</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">MG42</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX698">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX699">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX700">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">150</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX701">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 50
local ReloadTime = 0.07
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 250
local range
local hold = false
local dal = 20
local dah = 30
local ID = 1027
local hor = 0.025
local ver = 0.0015
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.05, -0.4, 1)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
Tool.Mag4.Transparency = 1
Tool.Mag5.Transparency = 1
Tool.Mag6.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(1.4, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(1.4, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(1.4, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(1.4, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(1.4, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(1.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new( 1.2, 0,0)
Tool.Mag2.Mesh.Offset = Vector3.new(1.2, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(1.2, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(1.2, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(1.2, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(1.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(1, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(1, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(1, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(1, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(1, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(1, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag4.Transparency = 0
Tool.Mag5.Transparency = 0
Tool.Mag6.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0.6, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.1, -0.5, 1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.5, 0.9)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.5, 0.8)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.07, -0.4, 1)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.09, -0.45, 0.9)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0.8)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.09, -0.45, 0.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.07, -0.4, 0.9)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end
&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX702">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>-0.5</Y>
					<Z>-1.89999998</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">M1919 Browning</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX703">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX704">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX705">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">150</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX706">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 50
local ReloadTime = 0.1
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 300
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1026
local hor = 0.03
local ver = 0.0015
GForward = Vector3.new(0, 0, -1)
GRight = Vector3.new(1, 0, 0)
GPos = Vector3.new(0.05, -0.5, -1.9)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
Tool.Mag4.Transparency = 1
Tool.Mag5.Transparency = 1
Tool.Mag6.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(1.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new( 1.2, 0,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(1, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag4.Transparency = 0
Tool.Mag5.Transparency = 0
Tool.Mag6.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0.6, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0, 0.6, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0.4, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0, 0.4, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(0, 0.2, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.1/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag5.Mesh.Offset = Vector3.new(-0, 0, 0)
Tool.Mag6.Mesh.Offset = Vector3.new(-0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.1/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.13, -0.6, -1.6)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.13, -0.6, -1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.13, -0.6, -1.4)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 0, -1)
Tool.GripPos = Vector3.new(0.05, -0.5, -1.9)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 0, -1)
Tool.GripPos = Vector3.new(0.07, -0.55, -1.8)

weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0.3, 0, -1)
Tool.GripPos = Vector3.new(0.09, -0.6, -1.7)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 0, -1)
Tool.GripPos = Vector3.new(0.11, -0.6, -1.6)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 0, -1)
Tool.GripPos = Vector3.new(0.13, -0.6, -1.4)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 0, -1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 0, -1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 0, -1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 0, -1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 0, -1)
Tool.GripPos = Vector3.new(0.11, -0.6, -1.6)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 0, -1)
Tool.GripPos = Vector3.new(0.09, -0.6, -1.7)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 0, -1)
Tool.GripPos = Vector3.new(0.07, -0.55, -1.8)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 0, -1)
Tool.GripPos = Vector3.new(0.05, -0.5, -1.9)

wait()

Tool.GripForward = Vector3.new(0, 0, -1)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripPos = Vector3.new(0.05, -0.5, -1.9)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX707">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.699999988</Y>
					<Z>0.600000024</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>-0</R22>
				</CoordinateFrame>
				<string name="Name">M1911</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX708">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX709">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX710">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">96</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX711">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 18
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 170
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1009
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0, -0.7, 0.6)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 0, -1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.03, -0.5, 0.65)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.03, -0.6, 0.65)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.03, -0.7, 0.65)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed then return end
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 1, 0)
Tool.GripPos = Vector3.new(0, -0.7, 0.6)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(0.2, 1, 0)
Tool.GripPos = Vector3.new(0, -0.7, 0.65)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 1, 0)
Tool.GripPos = Vector3.new(-0.03, -0.7, 0.65)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 1, 0)
Tool.GripPos = Vector3.new(-0.03, -0.7, 0.65)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 1, 0)
Tool.GripPos = Vector3.new(0, -0.7, 0.65)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 1, 0)
Tool.GripPos = Vector3.new(0, -0.7, 0.6)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(0, -0.7, 0.6)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 0, -1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;--run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX712">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.200000003</Y>
					<Z>1.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">M1 Thompson</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX713">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX714">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">20</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX715">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX716">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 20
local ReloadTime = 0.09
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 220
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1000
local hor = 0.017
local ver = 0.0008
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.1, -0.2, 1.5)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 60
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.2, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.8, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.6, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.2, 0)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.14, -0.3, 1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.14, -0.3, 1.4)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.14, -0.3, 1.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.25, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.3, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)



wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.14, -0.3, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.14, -0.3, 1.3)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.12, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.25, 1.3)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.1, -0.2, 1.5)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX717">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.400000006</Y>
					<Z>2</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">M1 Garand</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX718">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX719">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX720">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX721">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.13
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 22
local stam = 50 
local recoil = 130
local range
local hold = false
local dal = 35
local dah = 45
local ID = 1003
local hor = 0.02
local ver = 0.00001
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.4, 2)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 40
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-92), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-94), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-96), math.rad(-0), 0)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.8,0)
Tool.Mag.Transparency = 0
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-98), math.rad(-0), 0)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.7,0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-115))
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.6,0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-120))
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.5,0)
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), -0.4, math.rad(-110))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.65, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.5, math.rad(-105))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), -0.6, math.rad(-100))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0.7, math.rad(-95))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.8, math.rad(-90))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.9, math.rad(-85))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-80))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.9, math.rad(-85))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), -0.8, math.rad(-90))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0.7, math.rad(-95))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), -0.6, math.rad(-100))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.65, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.5, math.rad(-105))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), -0.4, math.rad(-110))
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-120))
wait(0.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.6,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-115))
wait(0.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.7,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(335), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-98), math.rad(-0), 0)
wait(0.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.8,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-96), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-94), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(325), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-92), math.rad(-0), 0)
wait(0.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
Tool.Mag.Transparency = 1
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.6)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.4)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end
function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.8)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.6)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.4)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.4)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.6)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.8)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 2)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX722">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.699999988</Y>
					<Z>0.400000006</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">M1 Carbine</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX723">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 15
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 22
local stam = 50 
local recoil = 160
local range
local hold = false
local dal = 30
local dah = 40
local ID = 1018
local hor = 0.04
local ver = 0.0001
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.7, 0.4)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 40
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.8, 0.2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.8, 0.1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.8, 0)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.75, 0.2)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.8, 0.0)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.8, 0.0)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.75, 0.2)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.7, 0.4)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX724">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX725">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">15</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX726">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX727">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.200000003</Y>
					<Z>1.79999995</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">M1 Bazooka</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX728">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1022</int>
					<CoordinateFrame name="CFrame">
						<X>174.566513</X>
						<Y>151.318954</Y>
						<Z>58.6183243</Z>
						<R00>0.382589281</R00>
						<R01>0.92374599</R01>
						<R02>-0.0173084643</R02>
						<R10>-0.923883915</R10>
						<R11>0.382647872</R11>
						<R12>7.77132809e-005</R12>
						<R20>0.00669466937</R20>
						<R21>0.0159615278</R21>
						<R22>0.999850214</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>7</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX729">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.400000006</X>
							<Y>0.94630003</Y>
							<Z>0.400000006</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX730">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.643555</X>
						<Y>149.955383</Y>
						<Z>58.999958</Z>
						<R00>-0.923770368</R00>
						<R01>-0.382554978</R01>
						<R02>0.0173192564</R02>
						<R10>-0.382611454</R10>
						<R11>0.923909366</R11>
						<R12>5.29490753e-005</R12>
						<R20>-0.0160216764</R20>
						<R21>-0.00657763425</R21>
						<R22>-0.999850035</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX731">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.0480000004</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX732">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RocketScript</string>
					<ProtectedString name="Source">ball = script.Parent
damage = 160
ID = 500
script.Parent.Explosion.PlayOnRemove = true -- play explosion sound when projectile removed from game
boom = 20
player = script.Parent.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
target = {}
on = 0
if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end

--[[function smoke(size, ahe)

&#9;wait()

&#9;p = Instance.new(&quot;Part&quot;)
&#9;p.Anchored = true
&#9;p.CanCollide = false
&#9;p.TopSurface = 0
&#9;p.BottomSurface = 0
&#9;p.Name = &quot;Bb&quot;
&#9;m = 1
&#9;p.CFrame = CFrame.new(script.Parent.Position + (script.Parent.CFrame.lookVector * ahe) + Vector3.new(math.random(-m,m),math.random(-m,m),math.random(-m,m)))
&#9;p.Shape = &quot;Ball&quot;
&#9;p.Size = Vector3.new(size,size,size)
&#9;smo = script.SmokeScript:clone()
&#9;smo.Disabled = false
&#9;smo.Parent = p
&#9;p.Parent = game.Workspace

end]]

function blow(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Name == &quot;Bb&quot; then return end

&#9;if not hit.CanCollide and not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;return
&#9;end

&#9;if on == 1 then return end
&#9;on = 1

&#9;ball.Anchored = true
&#9;swoosh:stop()
&#9;explosion = Instance.new(&quot;Explosion&quot;)
&#9;explosion.Position = ball.Position
&#9;explosion.BlastRadius = boom
&#9;explosion.BlastPressure = 0
&#9;explosion.Parent = game.Workspace
&#9;script.Parent.Explosion:Play()

&#9;ball.Anchored = true
&#9;ball.CanCollide = false
&#9;ball.Transparency = 1

&#9;local creator = script.Parent:findFirstChild(&quot;creator&quot;)
&#9;if creator then
&#9;&#9;explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance) end)
&#9;end
&#9;
&#9;connection:disconnect()

&#9;wait(1)

&#9;ball:Destroy()

end

function onPlayerBlownUp(hit, distance)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and not bam.PlayerGui:findFirstChild(&quot;LOL&quot;) and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/5
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) ~= nil then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (ball.Position - hit.Position).Magnitude/5
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam:findFirstChild(&quot;Perk2&quot;) ~= nil then
&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag ~= nil then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

swoosh = script.Parent.Swoosh
swoosh:play()

connection = ball.Touched:connect(blow)

--[[while ball.Parent do
smoke(2, -4)
wait(.1)
end]]

wait(5)

script.Parent.Explosion.PlayOnRemove = false
swoosh:stop()
ball:Destroy()


</ProtectedString>
				</Properties>
				<Item class="Script" referent="RBX733">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SmokeScript</string>
						<ProtectedString name="Source">wait(2)

for i = 1, 10 do
&#9;script.Parent.Transparency = script.Parent.Transparency + 0.1
&#9;script.Parent.CFrame = CFrame.new(script.Parent.Position + Vector3.new(math.random(-i * 0.1,i * 0.1), i * 0.1, math.random(-i * 0.1,i * 0.1)))
&#9;wait(0.12)
end

script.Parent:Remove()</ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX734">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">26</int>
					<CoordinateFrame name="CFrame">
						<X>171.524506</X>
						<Y>150.058945</Y>
						<Z>58.5640984</Z>
						<R00>0.382452726</R00>
						<R01>0.923812449</R01>
						<R02>-0.0174271762</R02>
						<R10>-0.923952639</R10>
						<R11>0.38251102</R11>
						<R12>1.13099813e-005</R12>
						<R20>0.00667656446</R20>
						<R21>0.0160975177</R21>
						<R22>0.999848127</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Flame</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX735">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.300000012</X>
							<Y>0.0480000004</Y>
							<Z>0.300000012</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX736">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.66153</X>
						<Y>149.910934</Y>
						<Z>59.0243034</Z>
						<R00>-0.923781157</R00>
						<R01>-0.0173522588</R01>
						<R02>-0.38252759</R02>
						<R10>-0.382583201</R10>
						<R11>-0.000123938837</R11>
						<R12>0.923921049</R12>
						<R20>-0.0160795264</R20>
						<R21>0.999849439</R21>
						<R22>-0.00652419031</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX737">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.384000003</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX738">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.619751</X>
						<Y>150.021896</Y>
						<Z>58.7835693</Z>
						<R00>-0.923770368</R00>
						<R01>-0.382554978</R01>
						<R02>0.0173192564</R02>
						<R10>-0.382611454</R10>
						<R11>0.923909366</R11>
						<R12>5.29490753e-005</R12>
						<R20>-0.0160216764</R20>
						<R21>-0.00657763425</R21>
						<R22>-0.999850035</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX739">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.671999991</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX740">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">217</int>
					<CoordinateFrame name="CFrame">
						<X>174.833527</X>
						<Y>150.988022</Y>
						<Z>58.6231003</Z>
						<R00>0.0173885226</R00>
						<R01>-0.923716545</R01>
						<R02>-0.382690638</R02>
						<R10>6.40749931e-006</R10>
						<R11>-0.382751942</R11>
						<R12>0.923856378</R12>
						<R20>-0.99985218</R20>
						<R21>-0.0160700977</R21>
						<R22>-0.00665426254</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX741">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.699999988</Y>
							<Z>0.5</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX742">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>173.529419</X>
						<Y>151.047974</Y>
						<Z>58.9845848</Z>
						<R00>-0.923781157</R00>
						<R01>-0.0173522588</R01>
						<R02>-0.38252759</R02>
						<R10>-0.382583201</R10>
						<R11>-0.000123938837</R11>
						<R12>0.923921049</R12>
						<R20>-0.0160795264</R20>
						<R21>0.999849439</R21>
						<R22>-0.00652419031</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX743">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.143999994</Y>
							<Z>0.143999994</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX744">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>173.52774</X>
						<Y>151.047974</Y>
						<Z>59.0804558</Z>
						<R00>-0.382641971</R00>
						<R01>0.92373234</R01>
						<R02>0.0174265299</R02>
						<R10>0.92387253</R10>
						<R11>0.382700235</R11>
						<R12>-9.34721174e-006</R12>
						<R20>-0.00667777099</R20>
						<R21>0.0160963144</R21>
						<R22>-0.999848127</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX745">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.0960000008</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX746">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.603439</X>
						<Y>150.044113</Y>
						<Z>59.1909599</Z>
						<R00>-0.923790693</R00>
						<R01>0.382502109</R01>
						<R02>-0.0174031891</R02>
						<R10>-0.382560909</R10>
						<R11>-0.923930287</R11>
						<R12>5.53140599e-005</R12>
						<R20>-0.0160581749</R20>
						<R21>0.00670887902</R21>
						<R22>0.999848545</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX747">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.624000013</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX748">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">217</int>
					<CoordinateFrame name="CFrame">
						<X>173.188782</X>
						<Y>150.254654</Y>
						<Z>58.5918617</Z>
						<R00>-0.0173618123</R00>
						<R01>-0.382532537</R01>
						<R02>-0.923778892</R02>
						<R10>1.91037398e-005</R10>
						<R11>0.923918068</R11>
						<R12>-0.382590503</R12>
						<R20>0.999849319</R20>
						<R21>-0.00666011265</R21>
						<R22>-0.0160335843</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX749">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0.0500000007</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.600000024</Y>
							<Z>0.192000002</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX750">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1022</int>
					<CoordinateFrame name="CFrame">
						<X>174.326141</X>
						<Y>151.271271</Y>
						<Z>58.6128998</Z>
						<R00>0.382452726</R00>
						<R01>0.923812449</R01>
						<R02>-0.0174271762</R02>
						<R10>-0.923952639</R10>
						<R11>0.38251102</R11>
						<R12>1.13099813e-005</R12>
						<R20>0.00667656446</R20>
						<R21>0.0160975177</R21>
						<R22>0.999848127</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX751">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0.0500000007</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.5</X>
							<Y>1.15199995</Y>
							<Z>0.5</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX752">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>173.532715</X>
						<Y>151.047775</Y>
						<Z>58.7657356</Z>
						<R00>-0.0173618123</R00>
						<R01>-0.382532537</R01>
						<R02>-0.923778892</R02>
						<R10>1.91037398e-005</R10>
						<R11>0.923918068</R11>
						<R12>-0.382590503</R12>
						<R20>0.999849319</R20>
						<R21>-0.00666011265</R21>
						<R22>-0.0160335843</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX753">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.335999995</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX754">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>173.483459</X>
						<Y>151.158661</Y>
						<Z>58.9569321</Z>
						<R00>-0.0173618123</R00>
						<R01>-0.382532537</R01>
						<R02>-0.923778892</R02>
						<R10>1.91037398e-005</R10>
						<R11>0.923918068</R11>
						<R12>-0.382590503</R12>
						<R20>0.999849319</R20>
						<R21>-0.00666011265</R21>
						<R22>-0.0160335843</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX755">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.287999988</X>
							<Y>0.0960000008</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX756">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">217</int>
					<CoordinateFrame name="CFrame">
						<X>175.344009</X>
						<Y>151.199509</Y>
						<Z>58.6353111</Z>
						<R00>-0.0173616633</R00>
						<R01>-0.382575065</R01>
						<R02>-0.923761249</R02>
						<R10>-2.37677086e-005</R10>
						<R11>0.923900664</R11>
						<R12>-0.382632375</R12>
						<R20>0.99984926</R20>
						<R21>-0.00662117824</R21>
						<R22>-0.0160495434</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX757">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0.00100000005</Y>
							<Z>-0.140000001</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.5</Y>
							<Z>0.699999988</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX758">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>177.785477</X>
						<Y>152.652679</Y>
						<Z>58.6742477</Z>
						<R00>0.382543445</R00>
						<R01>-0.0173201263</R01>
						<R02>-0.923777103</R02>
						<R10>-0.923915029</R10>
						<R11>9.96589661e-005</R11>
						<R12>-0.382605463</R12>
						<R20>0.00672158599</R20>
						<R21>0.999853015</R21>
						<R22>-0.0159659386</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX759">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=3270017</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.671999991</X>
							<Y>0.671999991</Y>
							<Z>0.671999991</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX760">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">26</int>
					<CoordinateFrame name="CFrame">
						<X>177.607895</X>
						<Y>152.578568</Y>
						<Z>58.6700516</Z>
						<R00>0.382452726</R00>
						<R01>0.923812449</R01>
						<R02>-0.0174271762</R02>
						<R10>-0.923952639</R10>
						<R11>0.38251102</R11>
						<R12>1.13099813e-005</R12>
						<R20>0.00667656446</R20>
						<R21>0.0160975177</R21>
						<R22>0.999848127</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX761">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.624000013</X>
							<Y>0.0480000004</Y>
							<Z>0.56159997</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX762">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>177.462189</X>
						<Y>152.856369</Y>
						<Z>58.6685982</Z>
						<R00>-0.0173227582</R00>
						<R01>-0.923746049</R01>
						<R02>0.38261354</R02>
						<R10>4.22888625e-005</R10>
						<R11>-0.382671624</R11>
						<R12>-0.923884392</R12>
						<R20>0.999849975</R20>
						<R21>-0.0159880482</R21>
						<R22>0.00666799303</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX763">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX764">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>177.576202</X>
						<Y>152.567917</Y>
						<Z>58.9827652</Z>
						<R00>0.382592797</R00>
						<R01>-0.923753679</R01>
						<R02>0.0173764415</R02>
						<R10>-0.923893332</R10>
						<R11>-0.382650167</R11>
						<R12>2.40161808e-005</R12>
						<R20>0.00662691332</R20>
						<R21>-0.0160631668</R21>
						<R22>-0.999849021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX765">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX766">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>177.58699</X>
						<Y>152.5681</Y>
						<Z>58.3588028</Z>
						<R00>-0.382581234</R00>
						<R01>-0.923753977</R01>
						<R02>-0.017613465</R02>
						<R10>0.92389375</R10>
						<R11>-0.382648766</R11>
						<R12>0.000501659059</R12>
						<R20>-0.00720317941</R20>
						<R21>-0.0160810463</R21>
						<R22>0.99984473</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX767">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.384000003</Y>
							<Z>0.0960000008</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX768">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>176.10022</X>
						<Y>152.189087</Y>
						<Z>58.7650452</Z>
						<R00>-0.923781693</R00>
						<R01>-0.339984566</R01>
						<R02>-0.176175803</R02>
						<R10>-0.382580519</R10>
						<R11>0.800118864</R11>
						<R12>0.461997777</R12>
						<R20>-0.0161105208</R20>
						<R21>0.494186491</R21>
						<R22>-0.869206607</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX769">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.527999997</X>
							<Y>0.384000003</Y>
							<Z>0.287999988</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX770">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.496246</X>
						<Y>150.310043</Y>
						<Z>59.0214157</Z>
						<R00>-0.923781157</R00>
						<R01>-0.0173522588</R01>
						<R02>-0.38252759</R02>
						<R10>-0.382583201</R10>
						<R11>-0.000123938837</R11>
						<R12>0.923921049</R12>
						<R20>-0.0160795264</R20>
						<R21>0.999849439</R21>
						<R22>-0.00652419031</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX771">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.384000003</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX772">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.716995</X>
						<Y>149.778</Y>
						<Z>59.0012436</Z>
						<R00>-0.923770368</R00>
						<R01>-0.382554978</R01>
						<R02>0.0173192564</R02>
						<R10>-0.382611454</R10>
						<R11>0.923909366</R11>
						<R12>5.29490753e-005</R12>
						<R20>-0.0160216764</R20>
						<R21>-0.00657763425</R21>
						<R22>-0.999850035</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX773">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.0480000004</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX774">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.551727</X>
						<Y>150.177109</Y>
						<Z>58.9984169</Z>
						<R00>-0.923770368</R00>
						<R01>-0.382554978</R01>
						<R02>0.0173192564</R02>
						<R10>-0.382611454</R10>
						<R11>0.923909366</R11>
						<R12>5.29490753e-005</R12>
						<R20>-0.0160216764</R20>
						<R21>-0.00657763425</R21>
						<R22>-0.999850035</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX775">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.0480000004</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX776">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.735016</X>
						<Y>149.733536</Y>
						<Z>59.0255432</Z>
						<R00>-0.923781157</R00>
						<R01>-0.0173522588</R01>
						<R02>-0.38252759</R02>
						<R10>-0.382583201</R10>
						<R11>-0.000123938837</R11>
						<R12>0.923921049</R12>
						<R20>-0.0160795264</R20>
						<R21>0.999849439</R21>
						<R22>-0.00652419031</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX777">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.384000003</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX778">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">217</int>
					<CoordinateFrame name="CFrame">
						<X>174.208557</X>
						<Y>150.677124</Y>
						<Z>58.6095314</Z>
						<R00>-0.0173618123</R00>
						<R01>-0.382532537</R01>
						<R02>-0.923778892</R02>
						<R10>1.91037398e-005</R10>
						<R11>0.923918068</R11>
						<R12>-0.382590503</R12>
						<R20>0.999849319</R20>
						<R21>-0.00666011265</R21>
						<R22>-0.0160335843</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX779">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.143999994</X>
							<Y>0.5</Y>
							<Z>0.192000002</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX780">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>171.569687</X>
						<Y>150.13266</Y>
						<Z>59.0226402</Z>
						<R00>-0.923781157</R00>
						<R01>-0.0173522588</R01>
						<R02>-0.38252759</R02>
						<R10>-0.382583201</R10>
						<R11>-0.000123938837</R11>
						<R12>0.923921049</R12>
						<R20>-0.0160795264</R20>
						<R21>0.999849439</R21>
						<R22>-0.00652419031</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Part</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BlockMesh" referent="RBX781">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.0960000008</X>
							<Y>0.384000003</Y>
							<Z>0.0480000004</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="SpecialMesh" referent="RBX782">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><null></null></Content>
					<token name="MeshType">3</token>
					<string name="Name">smoke</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>5</X>
						<Y>5</Y>
						<Z>5</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX783">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Swoosh</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/Rocket whoosh 01.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX784">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://roblox.com/asset/?id=2251534</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.200000003</Z>
					</Vector3>
					<Content name="TextureId"><null></null></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>0.5</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX785">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 14
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = 20
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50
local hor = 0.1
local ver = 0.001

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.Rock.Clip.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;Tool.Rock.Clip.Value = Tool.Rock.Clip.Value - 1
&#9;local dir = v - script.Parent[&quot;Flame&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = Instance.new(&quot;Part&quot;)
&#9;p.Locked = true
&#9;p.BackSurface = 0
&#9;p.BottomSurface = 0
&#9;p.FrontSurface = 0
&#9;p.LeftSurface = 0
&#9;p.RightSurface = 0
&#9;p.TopSurface = 0
&#9;p.Size = Vector3.new(1,1,4)
&#9;p.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 200
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,p)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;Tool.RocketScript:clone().Parent = p
&#9;Tool.Explosion:clone().Parent = p
&#9;Tool.Swoosh:clone().Parent = p
&#9;Tool.Mesh:Clone().Parent = p
&#9;local s = Tool[&quot;RocketScript&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function fire()

&#9;if Tool.Rock.Clip.Value &lt;= 0 then return end
&#9;if reloading then return end

&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;wait()

&#9;for i = 1, 8 do
&#9;&#9;p = Instance.new(&quot;Part&quot;)
&#9;&#9;p.Anchored = true
&#9;&#9;p.CanCollide = false
&#9;&#9;p.TopSurface = 0
&#9;&#9;p.BottomSurface = 0
&#9;&#9;m = 2
&#9;&#9;pos = Tool.Handle.CFrame.lookVector * -5
&#9;&#9;p.CFrame = CFrame.new(Tool.Handle.Position + pos + Vector3.new(math.random(-m,m),math.random(-m,m),math.random(-m,m)))
&#9;&#9;p.Shape = &quot;Ball&quot;
&#9;&#9;p.Size = Vector3.new(1,1,1)
&#9;&#9;p.Name = &quot;Bb&quot;
&#9;&#9;Tool.smoke:Clone().Parent = p
&#9;&#9;smo = script.Parent.RocketScript.SmokeScript:Clone()
&#9;&#9;smo.Disabled = false
&#9;&#9;smo.Parent = p
&#9;&#9;p.Parent = game.Workspace
&#9;end

&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;--coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait(.1)
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
--&#9;end))

end


function Equip(mouse)

running.Value = false
reloading = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

wait()

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; WalkSpeed then
&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

end

function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;Tool.Enabled = false
&#9;fire()
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
&#9;weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
&#9;weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
&#9;weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
&#9;weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
&#9;weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
&#9;weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
&#9;wait(0.01)
&#9;weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
&#9;if Tool.Rock.Clip.Value == 0 then
&#9;Tool:Destroy()
&#9;Unequip()
&#9;end
&#9;wait(2)
&#9;weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
&#9;weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
&#9;weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
&#9;weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
&#9;weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
&#9;weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
&#9;weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
&#9;wait(0.01)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
&#9;wait(0.01)
&#9;Tool.Enabled = true

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX786">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GunWeld</string>
					<ProtectedString name="Source">local tool = script.Parent

local MasterCFrameValues = {}
local meta = {
__call = function(tab,arg)
&#9;for i = 1, #tab do
&#9;&#9;if tab[i][1] == arg then
&#9;&#9;&#9;return tab[i][2]
&#9;&#9;end
&#9;end
&#9;return CFrame.new()
end}
setmetatable(MasterCFrameValues,meta)

local ch = tool:GetChildren()
for i = 1, #ch do
&#9;if ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;table.insert(MasterCFrameValues,{ch[i],ch[i].CFrame:inverse()})
&#9;&#9;ch[i].Anchored = false
&#9;&#9;if ch[i].Name ~= &quot;Handle&quot; then
&#9;&#9;&#9;ch[i].CanCollide = false
&#9;&#9;else
&#9;&#9;&#9;ch[i].CanCollide = true
&#9;&#9;end
&#9;end
end

function weld()
&#9;local han = tool:FindFirstChild(&quot;Handle&quot;)
&#9;if not han then
&#9;&#9;print(&quot;Handle went bye bye&quot;)
&#9;&#9;return
&#9;end
&#9;local ch = han:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;Weld&quot;) then
&#9;&#9;&#9;ch[i]:remove()
&#9;&#9;end
&#9;end
&#9;local ch = tool:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i] ~= han and ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;w.Part0 = han
&#9;&#9;&#9;w.Part1 = ch[i]
&#9;&#9;&#9;w.C0 = MasterCFrameValues(han)
&#9;&#9;&#9;w.C1 = MasterCFrameValues(ch[i])
&#9;&#9;&#9;w.Parent = han
&#9;&#9;end
&#9;end
end

tool.Equipped:connect(weld)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX787">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.5</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Luger</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX788">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX789">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX790">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">96</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX791">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 18
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 25
local dah = 35
local ID = 1040
local hor = 0.025
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.1, -0.5, 0)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 0.2)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 0.1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 0)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed then return end
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 0)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.75, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()
Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 0)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;--run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX792">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">List</string>
				<ProtectedString name="Source">local menu = script.Parent
local player = script.Parent.Parent.Parent.Parent.Parent
local prim = menu.Primary
local side = menu.SideArm
local nade = menu.Grenade
local p1 = menu.Perkone
local p2 = menu.Perktwo
local p3 = menu.Perkthree
local store = game.Lighting
local wep = player.Prim
local arm = player.Side
local bomb = player.Nade
local perk1 = player.Perk1
local perk2 = player.Perk2
local perk3 = player.Perk3
--local uniform = menu.Uniforms
--local kill = menu.Kill

local Pd1 = prim.DL
local Prpm = prim.RPM
local Pam = prim.AMMO

local Sd1 = side.DL
local Srpm = side.RPM
local Sam = side.AMMO

function update()

wait()

if wep and wep.Value then
if wep.Value.Name == &quot;Springfield&quot; then
prim.TextLabel.Text = &quot;Springfield&quot;
Pd1.Text = &quot;Damage Range: 40 - 50&quot;
Prpm.Text = &quot;Rate of Fire: 71 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276845&quot;
elseif wep.Value.Name == &quot;TF2Aussie&quot; then
prim.TextLabel.Text = &quot;TeamFortress 2 Sniper&quot;
Pd1.Text = &quot;Damage Range: 100 - 120&quot;
Prpm.Text = &quot;Rate of Fire: Very Slow&quot;
Pam.Text = &quot;1 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=32818559&quot;
elseif wep.Value.Name == &quot;M1 Thompson&quot; then
prim.TextLabel.Text = &quot;M1 Thompson&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 666 RPM&quot;
Pam.Text = &quot;20 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276881&quot;
elseif wep.Value.Name == &quot;Bar Gun&quot; then
prim.TextLabel.Text = &quot;Bar Gun&quot;
Pd1.Text = &quot;Damage Range: 35 - 45&quot;
Prpm.Text = &quot;Rate of Fire: 375 RPM&quot;
Pam.Text = &quot;20 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276642&quot;
elseif wep.Value.Name == &quot;Springfield Scoped&quot; then
prim.TextLabel.Text = &quot;Springfield Scoped&quot;
Pd1.Text = &quot;Damage Range: 70&quot;
Prpm.Text = &quot;Rate of Fire: 71 RPM&quot;
Pam.Text = &quot;5 Mag size + 70 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276858&quot;
elseif wep.Value.Name == &quot;M1919 Browning&quot; then
prim.TextLabel.Text = &quot;M1919 Browning&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 625 RPM&quot;
Pam.Text = &quot;50 Mag size + 150 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276775&quot;
elseif wep.Value.Name == &quot;M1 Garand&quot; then
prim.TextLabel.Text = &quot;M1 Garand&quot;
Pd1.Text = &quot;Damage Range: 35 - 45&quot;
Prpm.Text = &quot;Rate of Fire: 600 RPM&quot;
Pam.Text = &quot;8 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276672&quot;
elseif wep.Value.Name == &quot;Trench Gun&quot; then
prim.TextLabel.Text = &quot;Trench Gun&quot;
Pd1.Text = &quot;Damage Range: 10 - 30 * 8&quot;
Prpm.Text = &quot;Rate of Fire: 86 RPM&quot;
Pam.Text = &quot;4 Mag size + 60 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276895&quot;
elseif wep.Value.Name == &quot;M1 Carbine&quot; then
prim.TextLabel.Text = &quot;M1 Carbine&quot;
Pd1.Text = &quot;Damage Range: 30 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;15 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276654&quot;
elseif wep.Value.Name == &quot;Kar98K&quot; then
prim.TextLabel.Text = &quot;Kar98K&quot;
Pd1.Text = &quot;Damage Range: 40 - 50&quot;
Prpm.Text = &quot;Rate of Fire: 66 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276716&quot;
elseif wep.Value.Name == &quot;MP40&quot; then
prim.TextLabel.Text = &quot;MP40&quot;
Pd1.Text = &quot;Damage Range: 25 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 500 RPM&quot;
Pam.Text = &quot;32 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276809&quot;
elseif wep.Value.Name == &quot;FG42&quot; then
prim.TextLabel.Text = &quot;FG42&quot;
Pd1.Text = &quot;Damage Range: 22 - 30&quot;
Prpm.Text = &quot;Rate of Fire: 937 RPM&quot;
Pam.Text = &quot;20 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276663&quot;
elseif wep.Value.Name == &quot;Kar98K Scoped&quot; then
prim.TextLabel.Text = &quot;Kar98K Scoped&quot;
Pd1.Text = &quot;Damage Range: 70&quot;
Prpm.Text = &quot;Rate of Fire: 66 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276737&quot;
elseif wep.Value.Name == &quot;MG42&quot; then
prim.TextLabel.Text = &quot;MG42&quot;
Pd1.Text = &quot;Damage Range: 20 - 30&quot;
Prpm.Text = &quot;Rate of Fire: 860 RPM&quot;
Pam.Text = &quot;50 Mag size + 150 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276791&quot;
elseif wep.Value.Name == &quot;Gewehr 43&quot; then
prim.TextLabel.Text = &quot;Gewehr 43&quot;
Pd1.Text = &quot;Damage Range: 30 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;10 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276696&quot;
elseif wep.Value.Name == &quot;STG-44&quot; then
prim.TextLabel.Text = &quot;STG-44&quot;
Pd1.Text = &quot;Damage Range: 20 - 30&quot;
Prpm.Text = &quot;Rate of Fire: 600 RPM&quot;
Pam.Text = &quot;30 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276870&quot;
elseif wep.Value.Name == &quot;Mosin Nagant&quot; then
prim.TextLabel.Text = &quot;Mosin Nagant&quot;
Pd1.Text = &quot;Damage Range: 40 - 50&quot;
Prpm.Text = &quot;Rate of Fire: 60 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51489676&quot;
elseif wep.Value.Name == &quot;Mosin Nagant Scoped&quot; then
prim.TextLabel.Text = &quot;Mosin Nagant Scoped&quot;
Pd1.Text = &quot;Damage Range: 70&quot;
Prpm.Text = &quot;Rate of Fire: 60 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=73345551&quot;
elseif wep.Value.Name == &quot;PPSh-41&quot; then
prim.TextLabel.Text = &quot;PPSh-41&quot;
Pd1.Text = &quot;Damage Range: 14 - 22&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;35 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51489653&quot;
elseif wep.Value.Name == &quot;DP-28&quot; then
prim.TextLabel.Text = &quot;DP-28&quot;
Pd1.Text = &quot;Damage Range: 35 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 460 RPM&quot;
Pam.Text = &quot;47 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51489735&quot;
elseif wep.Value.Name == &quot;PTRS-41&quot; then
prim.TextLabel.Text = &quot;PTRS-41&quot;
Pd1.Text = &quot;Damage Range: 70&quot;
Prpm.Text = &quot;Rate of Fire: 75 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51489668&quot;
elseif wep.Value.Name == &quot;SVT-40&quot; then
prim.TextLabel.Text = &quot;SVT-40&quot;
Pd1.Text = &quot;Damage Range: 30 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;10 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51489717&quot;
elseif wep.Value.Name == &quot;DB Shotgun&quot; then
prim.TextLabel.Text = &quot;DB Shotgun&quot;
Pd1.Text = &quot;Damage Range: 10 - 40 * 8&quot;
Prpm.Text = &quot;Rate of Fire: 100 RPM&quot;
Pam.Text = &quot;2 Mag size + 60 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51667474&quot;
elseif wep.Value.Name == &quot;Arisaka&quot; then
prim.TextLabel.Text = &quot;Arisaka&quot;
Pd1.Text = &quot;Damage Range: 40 - 50&quot;
Prpm.Text = &quot;Rate of Fire: 60 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048567&quot;

elseif wep.Value.Name == &quot;Arisaka Scoped&quot; then
prim.TextLabel.Text = &quot;Arisaka Scoped&quot;
Pd1.Text = &quot;Damage Range: 70&quot;
Prpm.Text = &quot;Rate of Fire: 60 RPM&quot;
Pam.Text = &quot;5 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048567&quot;

elseif wep.Value.Name == &quot;Type 100&quot; then
prim.TextLabel.Text = &quot;Type 100&quot;
Pd1.Text = &quot;Damage Range: 15 - 35&quot;
Prpm.Text = &quot;Rate of Fire: 670 RPM&quot;
Pam.Text = &quot;30 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048630&quot;
elseif wep.Value.Name == &quot;Type 99&quot; then
prim.TextLabel.Text = &quot;Type 99&quot;
Pd1.Text = &quot;Damage Range: 30 - 45&quot;
Prpm.Text = &quot;Rate of Fire: 625 RPM&quot;
Pam.Text = &quot;30 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048636&quot;
elseif wep.Value.Name == &quot;Bren&quot; then
prim.TextLabel.Text = &quot;Bren&quot;
Pd1.Text = &quot;Damage Range: 35 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 625 RPM&quot;
Pam.Text = &quot;30 Mag size + 230 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048646&quot;
elseif wep.Value.Name == &quot;Lee-Enfield&quot; then
prim.TextLabel.Text = &quot;Lee-Enfield&quot;
Pd1.Text = &quot;Damage Range: 60 - 65&quot;
Prpm.Text = &quot;Rate of Fire: 60 RPM&quot;
Pam.Text = &quot;10 Mag size + 50 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048598&quot;
elseif wep.Value.Name == &quot;Sten&quot; then
prim.TextLabel.Text = &quot;Sten&quot;
Pd1.Text = &quot;Damage Range: 15 - 35&quot;
Prpm.Text = &quot;Rate of Fire: 666 RPM&quot;
Pam.Text = &quot;32 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54048679&quot;
elseif wep.Value.Name == &quot;MonDragon&quot; then
prim.TextLabel.Text = &quot;MonDragon&quot;
Pd1.Text = &quot;Damage Range: 30 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 750 RPM&quot;
Pam.Text = &quot;10 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=76829984&quot;

elseif wep.Value.Name == &quot;Maxim&quot; then
prim.TextLabel.Text = &quot;Maxim&quot;
Pd1.Text = &quot;Damage Range: 25 - 35&quot;
Prpm.Text = &quot;Rate of Fire: 500 RPM&quot;
Pam.Text = &quot;50 Mag size + 150 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=78771579&quot;

elseif wep.Value.Name == &quot;Dual P38&quot; then
prim.TextLabel.Text = &quot;Dual P38&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;16 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276831&quot;
elseif wep.Value.Name == &quot;Dual M1911&quot; then
prim.TextLabel.Text = &quot;Dual M1911&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;16 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=49276759&quot;
elseif wep.Value.Name == &quot;Dual TT-33&quot; then
prim.TextLabel.Text = &quot;Dual TT-33&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;16 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=51489691&quot;
elseif wep.Value.Name == &quot;Dual Nambu&quot; then
prim.TextLabel.Text = &quot;Dual Nambu&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;16 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54059071&quot;
elseif wep.Value.Name == &quot;Dual Magnum&quot; then
prim.TextLabel.Text = &quot;Dual Magnum&quot;
Pd1.Text = &quot;Damage Range: 20 - 45&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;12 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=54059047&quot;
elseif wep.Value.Name == &quot;Dual Luger&quot; then
prim.TextLabel.Text = &quot;Dual Luger&quot;
Pd1.Text = &quot;Damage Range: 20 - 40&quot;
Prpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Pam.Text = &quot;12 Mag size + 120 Ammo&quot;
prim.Image = &quot;http://www.roblox.com/asset/?id=73233458&quot;
end

if arm.Value.Name == &quot;P38&quot; then
side.TextLabel.Text = &quot;P38&quot;
Sd1.Text = &quot;Damage Range: 20 - 40&quot;
Srpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Sam.Text = &quot;8 Mag size + 96 Ammo&quot;
side.Image = &quot;http://www.roblox.com/asset/?id=49276831&quot;
elseif arm.Value.Name == &quot;M1911&quot; then
side.TextLabel.Text = &quot;M1911&quot;
Sd1.Text = &quot;Damage Range: 20 - 40&quot;
Srpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Sam.Text = &quot;8 Mag size + 96 Ammo&quot;
side.Image = &quot;http://www.roblox.com/asset/?id=49276759&quot;
elseif arm.Value.Name == &quot;TT-33&quot; then
side.TextLabel.Text = &quot;TT-33&quot;
Sd1.Text = &quot;Damage Range: 20 - 40&quot;
Srpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Sam.Text = &quot;8 Mag size + 96 Ammo&quot;
side.Image = &quot;http://www.roblox.com/asset/?id=51489691&quot;
elseif arm.Value.Name == &quot;Nambu&quot; then
side.TextLabel.Text = &quot;Nambu&quot;
Sd1.Text = &quot;Damage Range: 20 - 40&quot;
Srpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Sam.Text = &quot;8 Mag size + 96 Ammo&quot;
side.Image = &quot;http://www.roblox.com/asset/?id=54059071&quot;
elseif arm.Value.Name == &quot;357 Magnum&quot; then
side.TextLabel.Text = &quot;357 Magnum&quot;
Sd1.Text = &quot;Damage Range: 30 - 50&quot;
Srpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Sam.Text = &quot;6 Mag size + 72 Ammo&quot;
side.Image = &quot;http://www.roblox.com/asset/?id=54059047&quot;
elseif arm.Value.Name == &quot;Luger&quot; then
side.TextLabel.Text = &quot;Luger&quot;
Sd1.Text = &quot;Damage Range: 20 - 40&quot;
Srpm.Text = &quot;Rate of Fire: 1200 RPM&quot;
Sam.Text = &quot;8 Mag size + 96 Ammo&quot;
side.Image = &quot;http://www.roblox.com/asset/?id=73233458&quot;
else
end 

p1.Perk.Text = perk1.Value
if perk1.Value == &quot;Special Grenades X3&quot; then
p1.Stat.Text = &quot;Gives 3 Special Grenades&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=59509804&quot;
elseif perk1.Value == &quot;Satchel Charge x2&quot; then
p1.Stat.Text = &quot;Gives 2 Satchel Charges&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=59509860&quot;
elseif perk1.Value == &quot;Bouncing Betty x2&quot; then
p1.Stat.Text = &quot;Gives 2 Bouncing Betties&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=59509831&quot;
elseif perk1.Value == &quot;M1 Bazooka x2&quot; then
p1.Stat.Text = &quot;Gives M1 Bazooka With 2 Shots&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=59509848&quot;
elseif perk1.Value == &quot;Bandolier&quot; then
p1.Stat.Text = &quot;Gives 2 Extra Mags&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=59509625&quot;
elseif perk1.Value == &quot;Primary Grenades x2&quot; then
p1.Stat.Text = &quot;Gives 2 Extra Grenades&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=64395939&quot;
elseif perk1.Value == &quot;Bomb Squad&quot; then
p1.Stat.Text = &quot;Spot Enemy Landmines&quot;
p1.Image = &quot;http://www.roblox.com/asset/?id=59509582&quot;
end

p2.Perk.Text = perk2.Value
if perk2.Value == &quot;Stopping Power&quot; then
p2.Stat.Text = &quot;Increased Bullet Damage&quot;
p2.Image = &quot;http://www.roblox.com/asset/?id=59509568&quot;
elseif perk2.Value == &quot;Fireworks&quot; then
p2.Stat.Text = &quot;Increased Explosive damage&quot;
p2.Image = &quot;http://www.roblox.com/asset/?id=60058151&quot;
elseif perk2.Value == &quot;Flak Jacket&quot; then
p2.Stat.Text = &quot;Less Explosive Damage Taken&quot;
p2.Image = &quot;http://www.roblox.com/asset/?id=59509660&quot;
elseif perk2.Value == &quot;Juggernaut&quot; then
p2.Stat.Text = &quot;Less Bullet Damage Taken&quot;
p2.Image = &quot;http://www.roblox.com/asset/?id=59509554&quot;
elseif perk2.Value == &quot;Shades&quot; then
p2.Stat.Text = &quot;Resistant To Flares&quot;
p2.Image = &quot;http://www.roblox.com/asset/?id=59509792&quot;
elseif perk2.Value == &quot;Sleight of Hand&quot; then
p2.Stat.Text = &quot;Quicker Reloading&quot;
p2.Image = &quot;http://www.roblox.com/asset/?id=59509639&quot;
end

p3.Perk.Text = perk3.Value
if perk3.Value == &quot;Deep Impact&quot; then
p3.Stat.Text = &quot;Increased Bullet Penetration&quot;
p3.Image = &quot;http://www.roblox.com/asset/?id=59509575&quot;
elseif perk3.Value == &quot;Extreme Conditioning&quot; then
p3.Stat.Text = &quot;Increased Sprint Time&quot;
p3.Image = &quot;http://www.roblox.com/asset/?id=59509714&quot;
elseif perk3.Value == &quot;Steady Aim&quot; then
p3.Stat.Text = &quot;Increased Hipfire Accuracy&quot;
p3.Image = &quot;http://www.roblox.com/asset/?id=59509547&quot;
elseif perk3.Value == &quot;Fireproof&quot; then
p3.Stat.Text = &quot;Resistant To Fire&quot;
p3.Image = &quot;http://www.roblox.com/asset/?id=59509652&quot;
elseif perk3.Value == &quot;Martyrdom&quot; then
p3.Stat.Text = &quot;Drop Grenade On Death&quot;
p3.Image = &quot;http://www.roblox.com/asset/?id=59509704&quot;
elseif perk3.Value == &quot;Dead Silence&quot; then
p3.Stat.Text = &quot;Increased Walkspeed&quot;
p3.Image = &quot;http://www.roblox.com/asset/?id=77172653&quot;
end

--[[if player:FindFirstChild(&quot;Cam&quot;) ~= nil then
kill.Text = &quot;Killer Cam : Enabled&quot;
else
kill.Text = &quot;Killer Cam : Disabled&quot;
end

if player:FindFirstChild(&quot;Settings&quot;) ~= nil then
if player.Settings.Value == true then
uniform.Text = &quot;Uniforms : Enabled&quot;
else
uniform.Text = &quot;Uniforms : Disabled&quot;
end
end]]

nade.Text = &quot;     &quot; ..bomb.Value.Name
end

end 

update()

wep.Changed:connect(update)
arm.Changed:connect(update)
nade.Changed:connect(update)
perk1.Changed:connect(update)
perk2.Changed:connect(update)
perk3.Changed:connect(update)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX793">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.5</Y>
					<Z>1.29999995</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Lee-Enfield</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX794">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX795">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">10</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX796">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX797">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 10
local ReloadTime = 0.9
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 40
local dah = 50
local ID = 1031
local hor = 0.001
local ver = 0.0001
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.1, -0.5, 1.3)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 30
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.4)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;if lol == 0 then
&#9;aimtest()
&#9;end
&#9;end))

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.3)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX798">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.349999994</Y>
					<Z>1.89999998</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Kar98K Scoped</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX799">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX800">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX801">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX802">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 0.9
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 40
local stam = 50 
local recoil = 200
local range
local hold = false
local dal = 70
local dah = 70
local ID = 1002
local hor = 0.08
local ver = 0.005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.35, 1.9)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false
local sure = false
local spID = &quot;http://www.roblox.com/asset/?id=84625241&quot;

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end
&#9;local em
&#9;if aim.Value then
&#9;re1 = math.random(-1,1)
&#9;re2 = math.random(-1,1)
&#9;re3 = math.random(-1,1)
&#9;em = script.Parent.Parent[&quot;Head&quot;].Position
&#9;else
&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)
&#9;em = script.Parent[&quot;Flame&quot;].Position
&#9;v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;end
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = em + (dir * -2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 1000
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 1
&#9;ex.Name = &quot;EX&quot;
&#9;if not aim.Value then
&#9;local noscope = Instance.new(&quot;IntValue&quot;,p)
&#9;noscope.Name = &quot;NoScope&quot;
&#9;end
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading and not hold then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true and not hold then return
end
running.Value = true
reloading = true
if aim.Value then
s = true
aim.Value = false
aimoff(s)
end
s = 2
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
if Tool.AmmoScript.Ammo.Value &lt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value + 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - 1
elseif Tool.AmmoScript.Ammo.Value &gt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value + 1
end
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;--crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/8, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.45, 1.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.45, 1.6)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.45, 1.5)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;--[[if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end]]
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;--[[if lol == 0 and Tool.Parent == player.Character then
&#9;aimtest()
&#9;end]]
&#9;end))
&#9;end

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;s = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff(s)
&#9;end

&#9;Tool.Enabled = false
&#9;hold = true
&#9;wait()
&#9;repeat
&#9;ReloadSequence() 
&#9;until Tool.AmmoScript.Ammo.Value == AmmoLostOnReload or Tool.AmmoScript.Clip.Value == 0 or hold == false
&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true
WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
hold = false
ah = player.PlayerGui:findFirstChild(&quot;Zoom&quot;)
if ah then ah:Destroy() end
workspace.CurrentCamera.FieldOfView = 70
if player.CameraMode == 1 then
player.CameraMode = 0
end
player.Character.ret:ClearAllChildren()
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 0
end
end
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest(as,zm)

aim.Value = true
WalkSpeed = WalkSpeed - 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if (Cam.focus.p - Cam.CoordinateFrame.p).magnitude &gt; 1 then
player.CameraMode = 1
sure = true
end
coroutine.resume(coroutine.create(function()
ah = game.Lighting.Zoom:Clone()
ah.Parent = player.PlayerGui
ah.Scope.Image = spID
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = i*.1
if i == 1 and not player.Character:findFirstChild(sc[e].Name) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Archivable = true
local h = sc[e]:Clone()
h.Parent = player.Character.ret
h.Anchored = true
h.CanCollide = false
sc[e].Archivable = false
end
end
end
cam.FieldOfView = 70-i*zm/10
crosshair.Value = crosshair.Value - 4
wait(.01)
end
game.Lighting.GunWeld:Clone().Parent = player.Character.ret
crosshair.Value = 0
end))
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.35, 1.9)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait(.01)


Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.7)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait(.01)

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)
--]]

end

function aimoff(as)

if Tool.Parent ~= player.Character then return end
WalkSpeed = WalkSpeed + 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

if as then
local Cam = workspace.CurrentCamera
if sure == true then
player.CameraMode = 0
sure = false
end
coroutine.resume(coroutine.create(function()
crosshair.Value = 0
if ah then ah:Destroy() end
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) then
if sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 1-i*.1
if sc[e].Name == &quot;Left Arm&quot; or sc[e].Name == &quot;Right Arm&quot; then
sc[e].Transparency = 0.3
end
end
end
end
player.Character.ret:ClearAllChildren()
cam.FieldOfView = 20+i*5
wait(.01)
crosshair.Value = crosshair.Value + 4
end
player.PlayerGui.Update.LOL.Visible = false
crosshair.Value = size
end))
end

wait(.01)

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.5)

wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.7)

wait(.01)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.35, 1.9)

wait(.01)

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.35, 1.9)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; or key == &quot;z&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;s = true
&#9;&#9;local zm = 20
&#9;&#9;if key == &quot;z&quot; then zm = 50 end
&#9;&#9;aimtest(s,zm)
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;s = true
&#9;&#9;aimoff(s)
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;if reloading and not hold then return end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX803">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.349999994</Y>
					<Z>1.89999998</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Kar98K</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX804">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX805">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX806">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX807">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 0.9
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 40
local dah = 50
local ID = 1002
local hor = 0.01
local ver = 0.0001
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.35, 1.9)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 30
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.45, 1.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.45, 1.6)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.45, 1.5)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;if lol == 0 then
&#9;aimtest()
&#9;end
&#9;end))

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.35, 1.9)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()


Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.7)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.5)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.7)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.35, 1.9)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.35, 1.9)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX808">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Gush</string>
				<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(script,2)
player = ball.creator.Value
damage = 120
ID = ball.Name
target = {}
on = 1

function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Name == &quot;Blood&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10

&#9;&#9;&#9;end

&#9;&#9;end

&#9;end

end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
--b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)


</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX809">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GunWeld</string>
				<ProtectedString name="Source">local tool = script.Parent
local MasterCFrameValues = {}
local meta = {
__call = function(tab,arg)
&#9;for i = 1, #tab do
&#9;&#9;if tab[i][1] == arg then
&#9;&#9;&#9;return tab[i][2]
&#9;&#9;end
&#9;end
&#9;return CFrame.new()
end}
setmetatable(MasterCFrameValues,meta)

local ch = tool:GetChildren()
for i = 1, #ch do
&#9;if ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;table.insert(MasterCFrameValues,{ch[i],ch[i].CFrame:inverse()})
&#9;&#9;ch[i].Anchored = false
&#9;&#9;ch[i].CanCollide = false
&#9;&#9;ch[i].Transparency = 0
&#9;end
end

function weld()
&#9;local han = script.Parent.Handle
&#9;if not han then
&#9;&#9;print(&quot;Handle went bye bye&quot;)
&#9;&#9;return
&#9;end
&#9;local ch = han:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;Weld&quot;) then
&#9;&#9;&#9;ch[i]:Destroy()
&#9;&#9;end
&#9;end
&#9;local ch = tool:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i] ~= han and ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;w.Part0 = han
&#9;&#9;&#9;w.Part1 = ch[i]
&#9;&#9;&#9;w.C0 = MasterCFrameValues(han)
&#9;&#9;&#9;w.C1 = MasterCFrameValues(ch[i])
&#9;&#9;&#9;w.Parent = han
&#9;&#9;end
&#9;end
&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;w.Part0 = han
&#9;w.Part1 = tool.Parent.Torso
&#9;w.Parent = han
&#9;if tool.Parent:findFirstChild(&quot;Kar98K Scoped&quot;) then
&#9;w.C1 = CFrame.new(0,0.8,0.3)*CFrame.Angles(0,math.rad(180),math.rad(0))
&#9;elseif tool.Parent:findFirstChild(&quot;Arisaka Scoped&quot;) then
&#9;w.C1 = CFrame.new(0,0.8,-.2)*CFrame.Angles(0,math.rad(180),math.rad(0))
&#9;elseif tool.Parent:findFirstChild(&quot;PTRS-41&quot;) then
&#9;w.C1 = CFrame.new(0,0.8,-1)*CFrame.Angles(0,math.rad(180),math.rad(0))
&#9;elseif tool.Parent:findFirstChild(&quot;Mosin Nagant Scoped&quot;) or tool.Parent:findFirstChild(&quot;Springfield Scoped&quot;) then
&#9;w.C1 = CFrame.new(0,0.6,-0.2)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0))
&#9;end

end

wait()
weld()</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX810">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.5</Y>
					<Z>1.39999998</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Gewehr 43</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX811">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX812">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">10</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX813">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX814">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 10
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 22
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 30
local dah = 40
local ID = 1006
local hor = 0.03
local ver = 0.00001
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.05, -0.5, 1.4)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 40
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(318), math.rad(0), math.rad(-92))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-2), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.3)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(316), math.rad(0), math.rad(-94))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-102), math.rad(-4), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.2)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(314), math.rad(0), math.rad(-96))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-104), math.rad(-6), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.1)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(312), math.rad(0), math.rad(-98))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-106), math.rad(-8), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-108), math.rad(-10), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.9)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-12), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.8)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-14), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-16), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-18), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20), 0)
wait(.01/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(0), math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20), 0)

local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
w = Instance.new(&quot;Weld&quot;) 
w.Parent = mag
w.Part0 = mag 
w.Part1 = Tool.Mag

for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310-i*2), math.rad(-i), math.rad(-110+i*2))
mag.Mesh.Offset = Vector3.new(0,-i*.1,0)
wait(.03/s)
end
w:remove()
wait(.01/s)
for i = 1, 10 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310-i*2), math.rad(-5+1.5*-i), math.rad(-100+i))
weld33.C1 = CFrame.new(-1, 0.2, 0.2+i*.01) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-20+i), 0)
wait(.01/s)
end
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-10), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), math.rad(-20), math.rad(-90))
wait(.01/s)
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(285-i*3), math.rad(-20-i*6), math.rad(-90))
wait(.01/s)
end
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270+i*3), math.rad(-50+i*6), math.rad(-90))
wait(.01/s)
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(-10), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-10), 0)
wait(.01/s)
Tool.Mag.Transparency = 0
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300+i*2), math.rad(i), math.rad(-90-i*2))
Tool.Mag.Mesh.Offset = Vector3.new(0,-0.5+i*.1,0)
wait(.01/s)
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(11), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-111), math.rad(-10), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(12), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-112), math.rad(-10), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(18), math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-118), math.rad(-10), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(312), math.rad(14), math.rad(-98))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-114), math.rad(-8), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(314), math.rad(8), math.rad(-96))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-6), 0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(316), math.rad(4), math.rad(-94))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-4), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.0)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(318), math.rad(2), math.rad(-92))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-2), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.2)
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1.4)
Tool.Mag.Mesh.Offset = Vector3.new(0,0,0)
reloading = false
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.9)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.05, -0.5, 0.8)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end
function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.2)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 0.8)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 0.8)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.45, 1.2)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.4)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX815">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.400000006</Y>
					<Z>1.29999995</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Arisaka</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX816">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX817">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX818">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX819">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 1
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 14
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 40
local dah = 50
local ID = 1029
local kick = 0.01
local hor = 0.001
local ver = 0.0001
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.1, -0.4, 1.3)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 30
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 800
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function stab()
if reloading == true then return
end
reloading = true
Tool.Enabled = false
local bay = Tool:findFirstChild(&quot;1033&quot;)
local creator_tag = Instance.new(&quot;ObjectValue&quot;,bay)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
local st = game.Lighting.Gush:Clone()
st.Parent = bay
st.Disabled = false
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.68, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.3, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.72, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.76, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.1, 0.25) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.05)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.92, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 1.4, -0.35) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.65)
wait()
weld55.C1 = CFrame.new(-0.3, 0.9, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.9, -0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.45)
wait()
weld55.C1 = CFrame.new(-0.3, 0.88, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.7, -0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.35)
wait()
weld55.C1 = CFrame.new(-0.3, 0.84, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.5, 0.05) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.25)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.3, 0.15) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.15)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0.1)
wait()
st:Destroy()
creator_tag:Destroy()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.Enabled = true
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 1.4)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.1, -0.6, 1.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;if lol == 0 then
&#9;aimtest()
&#9;end
&#9;end))

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.75, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)


--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 1.3)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.3)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.3)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;stab()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX820">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.0500000007</X>
					<Y>-0.400000006</Y>
					<Z>1</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Arisaka Scoped</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX821">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;
&#9;&#9;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;==== &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX822">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">5</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX823">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">50</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX824">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 5
local ReloadTime = 1
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 40
local stam = 50 
local recoil = 200
local range
local hold = false
local dal = 70
local dah = 70
local ID = 1029
local hor = 0.08
local ver = 0.005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(0.05, -0.4, 1)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false
local sure = false
local spID = &quot;http://www.roblox.com/asset/?id=84631490&quot;

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end
&#9;local em
&#9;if aim.Value then
&#9;re1 = math.random(-1,1)
&#9;re2 = math.random(-1,1)
&#9;re3 = math.random(-1,1)
&#9;em = script.Parent.Parent[&quot;Head&quot;].Position
&#9;else
&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)
&#9;em = script.Parent[&quot;Flame&quot;].Position
&#9;v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;end
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = em + (dir * -2)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 1000
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 1
&#9;ex.Name = &quot;EX&quot;
&#9;if not aim.Value then
&#9;local noscope = Instance.new(&quot;IntValue&quot;,p)
&#9;noscope.Name = &quot;NoScope&quot;
&#9;end
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Bolt&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading and not hold then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true and not hold then return
end
running.Value = true
reloading = true
if aim.Value then
s = true
aim.Value = false
aimoff(s)
end
s = 2
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1.2, math.rad(-60))
wait(.05/s)
local mag2 = Instance.new(&quot;Part&quot;)
mag2.Size = Vector3.new(1,1,1)
mag2.BrickColor = BrickColor.new(&quot;Dark stone grey&quot;)
mag2.Parent = game.Workspace
mag2.CanCollide = false
local magmesh2 = Instance.new(&quot;BlockMesh&quot;)
magmesh2.Scale = Vector3.new(0.3, 0.1, 1)
magmesh2.Parent = mag2
local magweld = Instance.new(&quot;Weld&quot;)
leftarm = Tool.Parent[&quot;Left Arm&quot;]
magweld.Parent = mag2
magweld.Part0 = mag2
magweld.Part1 = leftarm
magweld.C0 = CFrame.new(-1,0,0.3)
magweld.C0 = magweld.C0 * CFrame.fromEulerAnglesXYZ(0,0.6,1.6)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-50))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(300), -1, math.rad(-60))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0.8, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.6, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0.2, math.rad(-90))
wait(.05/s)
mag2:Destroy()
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
if Tool.AmmoScript.Ammo.Value &lt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value + 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - 1
elseif Tool.AmmoScript.Ammo.Value &gt; 5 and hold then
Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value + 1
end
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;--crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;--crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/8, 0, cam_scroll)
&#9;end
&#9;end))
&#9;--[[Tool.GripPos = Vector3.new(0.05, -0.4, 1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, -0.4, 1)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.05, -0.4, 1)]]
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;coroutine.resume(coroutine.create(function()
&#9;reloading = true
&#9;--[[if aim.Value then
&#9;aim.Value = false
&#9;aimoff()
&#9;lol = 0
&#9;else
&#9;lol = 1
&#9;end]]
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.35, 0.5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-90))
&#9;wait(.05)
&#9;weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;reloading = false
&#9;--[[if lol == 0 and Tool.Parent == player.Character then
&#9;aimtest()
&#9;end]]
&#9;end))
&#9;end

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;s = true
&#9;if aim.Value then
&#9;aim.Value = false
&#9;aimoff(s)
&#9;end

&#9;Tool.Enabled = false
&#9;hold = true
&#9;wait()
&#9;repeat
&#9;ReloadSequence() 
&#9;until Tool.AmmoScript.Ammo.Value == AmmoLostOnReload or Tool.AmmoScript.Clip.Value == 0 or hold == false
&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true
WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
hold = false
ah = player.PlayerGui:findFirstChild(&quot;Zoom&quot;)
if ah then ah:Destroy() end
workspace.CurrentCamera.FieldOfView = 70
if player.CameraMode == 1 then
player.CameraMode = 0
end
running.Value = false
player.Character.ret:ClearAllChildren()
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 0
end
end
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest(as,zm)

aim.Value = true
WalkSpeed = WalkSpeed - 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if (Cam.focus.p - Cam.CoordinateFrame.p).magnitude &gt; 1 then
player.CameraMode = 1
sure = true
end
coroutine.resume(coroutine.create(function()
ah = game.Lighting.Zoom:Clone()
ah.Parent = player.PlayerGui
ah.Scope.Image = spID
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = i*.1
if i == 1 and not player.Character:findFirstChild(sc[e].Name) and sc[e].Name ~= &quot;Flame&quot; then
sc[e].Archivable = true
local h = sc[e]:Clone()
h.Parent = player.Character.ret
h.Anchored = true
h.CanCollide = false
sc[e].Archivable = false
end
end
end
cam.FieldOfView = 70-i*zm/10
crosshair.Value = crosshair.Value - 4
wait(.01)
end
game.Lighting.GunWeld:Clone().Parent = player.Character.ret
crosshair.Value = 0
end))
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.75, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)
--]]

end

function aimoff(as)

if Tool.Parent ~= player.Character then return end
WalkSpeed = WalkSpeed + 4
if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end
if as then
local Cam = workspace.CurrentCamera
if sure == true then
player.CameraMode = 0
sure = false
end
coroutine.resume(coroutine.create(function()
crosshair.Value = 0
if ah then ah:Destroy() end
local cam = workspace.CurrentCamera
for i = 1, 10 do
local sc = Tool:GetChildren()
for e = 1, #sc do
if sc[e]:IsA(&quot;BasePart&quot;) then
if sc[e].Name ~= &quot;Flame&quot; then
sc[e].Transparency = 1-i*.1
if sc[e].Name == &quot;Left Arm&quot; or sc[e].Name == &quot;Right Arm&quot; then
sc[e].Transparency = 0.3
end
end
end
end
player.Character.ret:ClearAllChildren()
cam.FieldOfView = 70
wait(.01)
crosshair.Value = crosshair.Value + 4
end
player.PlayerGui.Update.LOL.Visible = false
crosshair.Value = size
end))
end

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.6, 1.3)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.5, 1.3)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.3)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.3)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; or key == &quot;z&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;s = true
&#9;&#9;local zm = 20
&#9;&#9;if key == &quot;z&quot; then zm = 50 end
&#9;&#9;aimtest(s,zm)
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;s = true
&#9;&#9;aimoff(s)
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;s = true
&#9;&#9;&#9;aimoff(s)
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;if reloading and not hold then return end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX825">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Auto</string>
				<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,0.5)
player = ball.creator.Value
high = math.random(ball.DL.Value,ball.DH.Value)
low = ball.DL.Value
if player.Perk2.Value == &quot;Stopping Power&quot; then
high = high*.2+high
end
ID = ball.Name
ball.DL:Destroy()
ball.DH:Destroy()
ball.Name = &quot;Projectile&quot;
target = {}
torpo = player.Character.Torso.Position
on = 1


function onTouched(hit)

&#9;if hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Name == &quot;Blood&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Torso&quot; then 

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 10
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (high - (dist-1)*.3)
&#9;&#9;&#9;&#9;&#9;if hurt &lt; low then hurt = low end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;elseif hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 10
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (high*1.4 - (dist-1)*.3)
&#9;&#9;&#9;&#9;&#9;if hurt &lt; low then hurt = low end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt*1.4/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 10
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (high - (dist-1)*.3)
&#9;&#9;&#9;&#9;&#9;if hurt &lt; low then hurt = low end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;assist(hit)

&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then

&#9;&#9;if hit.CanCollide == true then
&#9;&#9;if player.Perk3.Value == &quot;Deep Impact&quot; then
&#9;&#9;if on == 1 then
&#9;&#9;on = 1.3
&#9;&#9;elseif on == 1.3 then
&#9;&#9;on = 1.7
&#9;&#9;elseif on == 1.7 then
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;else
&#9;&#9;if on == 1 then
&#9;&#9;on = 2
&#9;&#9;elseif on == 2 then
&#9;&#9;on = 2.5
&#9;&#9;elseif on == 2.5 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;end

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if ball:findFirstChild(&quot;EX&quot;) then
&#9;&#9;&#9;hah = Instance.new(&quot;TextBox&quot;,humanoid.Parent)
&#9;&#9;&#9;hah.Name = &quot;Spec&quot;
&#9;&#9;&#9;game.Debris:AddItem(hah,1)
&#9;&#9;&#9;if ball.EX.Value == 0 then
&#9;&#9;&#9;hah.Text = &quot;Dual&quot;
&#9;&#9;&#9;elseif ball.EX.Value == 1 then
&#9;&#9;&#9;hah.Text = &quot;Sniper Variant&quot;
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function assist(hit)

local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
local sht = enemy:GetChildren()
local assisted = false

if enemy:findFirstChild(&quot;Assist&quot;) then
for i = 1, #sht do
if sht[i].Name == &quot;Assist&quot; then
if sht[i].Text == player.Name then
assisted = true 
return
end
end
end
end

if not assisted then
asgh = Instance.new(&quot;TextBox&quot;,enemy)
asgh.Name = &quot;Assist&quot;
asgh.Text = player.Name
--game.Debris:AddItem(asgh,5)
end 

end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX826">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BUM</string>
				<ProtectedString name="Source">betty = script.Parent.Parent
damage = 200
ID = 1028
player = betty.creator.Value
GHH = player.Character:findFirstChild(&quot;Humanoid&quot;)
on = 0
boom = 17
target = {}

if player.Perk2.Value == &quot;Fireworks&quot; then
damage = damage*1.25
end

t = betty:findFirstChild(&quot;Trigger&quot;)
b = betty:findFirstChild(&quot;Handle&quot;)

function Blow()

on = 1
wait()

t.Mesh.Offset = Vector3.new(0,0.4,0)
b.Mesh.Offset = Vector3.new(0,-0.1,0)

wait()
t.Mesh.Offset = Vector3.new(0,0.8,0)
b.Mesh.Offset = Vector3.new(0,0.3,0)
wait()
t.Mesh.Offset = Vector3.new(0,1.2,0)
b.Mesh.Offset = Vector3.new(0,0.7,0)
wait()

t.Mesh.Offset = Vector3.new(0,1.6,0)
b.Mesh.Offset = Vector3.new(0,1.1,0)
wait()

t.Mesh.Offset = Vector3.new(0,2,0)
b.Mesh.Offset = Vector3.new(0,1.5,0)
wait()

t.Mesh.Offset = Vector3.new(0,2.4,0)
b.Mesh.Offset = Vector3.new(0,1.9,0)
wait()

t.Mesh.Offset = Vector3.new(0,2.8,0)
b.Mesh.Offset = Vector3.new(0,2.3,0)

wait()

t.Mesh.Offset = Vector3.new(0,3.2,0)
b.Mesh.Offset = Vector3.new(0,2.7,0)
wait()

t.Mesh.Offset = Vector3.new(0,3.6,0)
b.Mesh.Offset = Vector3.new(0,3.1,0)

wait()

t.Mesh.Offset = Vector3.new(0,4,0)
b.Mesh.Offset = Vector3.new(0,3.5,0)

exp = Instance.new(&quot;Explosion&quot;)
exp.Position = b.Position
exp.BlastPressure = 0
exp.BlastRadius = boom
exp.Parent = game.Workspace
bam = game.Lighting.Explosion:Clone()
bam.Parent = game.Workspace
bam.CFrame = CFrame.new(exp.Position)
bam.Blow.Disabled = false
bam.Name = &quot;Bomb&quot;
script.Parent.Explosion:Play()
t.Transparency = 1
b.Transparency = 1

local creator = betty:findFirstChild(&quot;creator&quot;)
if creator then
&#9;exp.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance) end)
end

wait(1)
betty:Destroy()

end

function onPlayerBlownUp(hit, distance)
&#9;
&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;k = 1
&#9;&#9;for i = 1, #target do
&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;k = k + 1
&#9;&#9;end

&#9;&#9;target[k] = hit.Parent

&#9;&#9;local bam = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;if bam and not bam.PlayerGui:findFirstChild(&quot;LOL&quot;) and player.TeamColor ~= bam.TeamColor then

&#9;&#9;&#9;local lol = (b.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end

&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10


&#9;&#9;elseif bam and humanoid == GHH then

&#9;&#9;&#9;local lol = (b.Position - hit.Position).Magnitude/4
&#9;&#9;&#9;if lol &lt; 1 then
&#9;&#9;&#9;lol = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;end

&#9;&#9;&#9;if bam.Perk2.Value == &quot;Flak Jacket&quot; then
&#9;&#9;&#9;humanoid:TakeDamage((damage/lol)*.75) 
&#9;&#9;&#9;game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update
&#9;&#9;&#9;else
&#9;&#9;&#9;humanoid:TakeDamage(damage/lol)
&#9;&#9;&#9;end

&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;end
&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;end
&#9;end
end

function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;local tag = betty:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
--b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

Blow()
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX827">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.100000001</X>
					<Y>1.29999995</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Bar Gun</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX828">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX829">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">20</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX830">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX831">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 20
local ReloadTime = 0.16
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 240
local range
local hold = false
local dal = 35
local dah = 45
local ID = 1004
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GRight = Vector3.new(1, 0, 0)
GPos = Vector3.new(0.1, 1.3, -0.2)
GUp = Vector3.new(0, 0, 1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading then return
end
running.Value = true
reloading = true
if aim.Value then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.25)
wait(.01/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.2, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.4, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.6, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, 1, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -.8, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1, math.rad(-70))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(290), -1.2, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -1, math.rad(-60))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1.2, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.8, math.rad(-70))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0, -1, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.6, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.6, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.4, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.4, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -.2, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, -0.2, 0)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-75))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .4, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.4, math.rad(-75))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .5, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0.2, math.rad(-80))
wait(.05/s)
weld55.C1 = CFrame.new(-0.35, .6, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
wait(.05/s)
weld55.C1 = CFrame.new(-0.325, .7, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.13, 1.3, -0.3)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.13, 1.2, -0.3)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.13, 1.1, -0.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.3, -0.25)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.2, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.13, 1.1, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)



Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.13, 1.1, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.2, -0.3)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)



wait()


Tool.GripForward = Vector3.new(-0.0995, 0.995, 0)
Tool.GripRight = Vector3.new(0.995, 0.0995, 0)
Tool.GripPos = Vector3.new(0.1, 1.3, -0.25)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripPos = Vector3.new(0.1, 1.3, -0.2)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX832">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Bolt</string>
				<ProtectedString name="Source">ball = script.Parent
game.Debris:AddItem(ball,2)
player = ball.creator.Value
high = ball.DH.Value
low = math.random(ball.DL.Value, ball.DH.Value)
if player.Perk2.Value == &quot;Stopping Power&quot; then
high = high*.3+high
end
ID = ball.Name
ball.DL:Destroy()
ball.DH:Destroy()
ball.Name = &quot;Projectile&quot;
target = {}
torpo = player.Character.Torso.Position
on = 1


function onTouched(hit)

&#9;if hit.Parent == nil or hit.Parent.className == &quot;Tool&quot; or hit.Parent.className == &quot;Hat&quot; then
&#9;&#9;return
&#9;end

&#9;if hit.Name == &quot;Dot&quot;&#9;or hit.Name == &quot;Projectile&quot; or hit.Name == &quot;Blood&quot; then
&#9;&#9;return
&#9;end

&#9;local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid then

&#9;&#9;local lol = game.Players:findFirstChild(hit.Parent.Name)
&#9;&#9;
&#9;&#9;if lol and not lol.PlayerGui:findFirstChild(&quot;LOL&quot;) then

&#9;&#9;&#9;if humanoid and lol.TeamColor ~= player.TeamColor then

&#9;&#9;&#9;&#9;k = 1
&#9;&#9;&#9;&#9;for i = 1, #target do
&#9;&#9;&#9;&#9;if target[i] == hit.Parent then 
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;k = k + 1
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;target[k] = hit.Parent

&#9;&#9;&#9;&#9;if humanoid.Health == 0 then return end

&#9;&#9;&#9;&#9;if not hit.Parent:findFirstChild(&quot;Shot&quot;) then
&#9;&#9;&#9;&#9;blood(hit)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if hit.Name == &quot;Torso&quot; then 
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 70
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (low + (dist-1)*.8)
&#9;&#9;&#9;&#9;&#9;if hurt &gt; high then hurt = high end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt*1.5/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;elseif hit.Name == &quot;Head&quot; or hit.Name == &quot;Fake&quot; then 

&#9;&#9;&#9;&#9;&#9;hurt = high
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt*2/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;hit.Parent:findFirstChild(&quot;Fake&quot;):Destroy()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;dist = (hit.Position - torpo).Magnitude
&#9;&#9;&#9;&#9;&#9;dist = dist - 80
&#9;&#9;&#9;&#9;&#9;if dist &lt; 1 then dist = 1 end
&#9;&#9;&#9;&#9;&#9;hurt = (low + (dist-1)*.8)
&#9;&#9;&#9;&#9;&#9;if hurt &gt; high then hurt = high end
&#9;&#9;&#9;&#9;&#9;if lol.Perk2.Value == &quot;Juggernaut&quot; then hurt = hurt*.9 game.Lighting.Jug:Clone().Parent = player.PlayerGui.Update end
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(hurt/on)

&#9;&#9;&#9;&#9;&#9;if humanoid.Health == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;tagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;player.Crosshairs.Hit.Value = 10
&#9;&#9;&#9;&#9;assist(hit)

&#9;&#9;&#9;end

&#9;&#9;end

&#9;elseif not hit.Parent:findFirstChild(&quot;Humanoid&quot;) then

&#9;&#9;if hit.CanCollide == true then
&#9;&#9;if player.Perk3.Value == &quot;Deep Impact&quot; then
&#9;&#9;if on == 1 then
&#9;&#9;on = 1.2
&#9;&#9;elseif on == 1.2 then
&#9;&#9;on = 1.4
&#9;&#9;elseif on == 1.4 then
&#9;&#9;on = 1.6
&#9;&#9;elseif on == 1.6 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;else
&#9;&#9;if on == 1 then
&#9;&#9;on = 1.5
&#9;&#9;elseif on == 1.5 then
&#9;&#9;on = 1.8
&#9;&#9;elseif on == 1.8 then
&#9;&#9;connection:disconnect()
&#9;&#9;ball:Destroy()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;end

&#9;end

end


function tagHumanoid(humanoid)
&#9;-- todo: make tag expire
&#9;if not humanoid.Parent:findFirstChild(&quot;creator&quot;) then
&#9;local tag = ball:findFirstChild(&quot;creator&quot;)
&#9;if tag then
&#9;&#9;local new_tag = tag:clone()
&#9;&#9;new_tag.Parent = humanoid
&#9;&#9;if ball:findFirstChild(&quot;EX&quot;) then
&#9;&#9;&#9;hah = Instance.new(&quot;TextBox&quot;,humanoid.Parent)
&#9;&#9;&#9;hah.Name = &quot;Spec&quot;
&#9;&#9;&#9;game.Debris:AddItem(hah,1)
&#9;&#9;&#9;if ball.EX.Value == 0 then
&#9;&#9;&#9;hah.Text = &quot;Dual&quot;
&#9;&#9;&#9;elseif ball.EX.Value == 1 then
&#9;&#9;&#9;hah.Text = &quot;Sniper Variant&quot;
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if ball:findFirstChild(&quot;NoScope&quot;) then
&#9;&#9;&#9;ball.NoScope:Clone().Parent = humanoid.Parent
&#9;&#9;end
&#9;&#9;if humanoid.Parent:findFirstChild(&quot;gun&quot;) then
&#9;&#9;&#9;humanoid.Parent.gun.Value = ID
&#9;&#9;end
&#9;end
&#9;end
end

function assist(hit)

local enemy = game.Players:GetPlayerFromCharacter(hit.Parent)
local sht = enemy:GetChildren()
local assisted = false

if enemy:findFirstChild(&quot;Assist&quot;) then
for i = 1, #sht do
if sht[i].Name == &quot;Assist&quot; then
if sht[i].Text == player.Name then
assisted = true 
return
end
end
end
end

if not assisted then
asgh = Instance.new(&quot;TextBox&quot;,enemy)
asgh.Name = &quot;Assist&quot;
asgh.Text = player.Name
--game.Debris:AddItem(asgh,5)
end 

end

function blood(hit)

local shot = Instance.new(&quot;IntValue&quot;,hit.Parent)
shot.Name = &quot;Shot&quot;
game.Debris:AddItem(shot, 0.5)
for i = 1, 4 do
local b1 = Instance.new(&quot;Part&quot;,hit.Parent)
b1.BrickColor = BrickColor.new(21)
b1.formFactor = 2
b1.Name = &quot;Blood&quot;
b1.Size = Vector3.new(1, 0.4, 1)
b1.CFrame = CFrame.new(hit.Position)
b1.Velocity = Vector3.new(math.random(-30,30),math.random(10,50),math.random(-30,30))
b1.CanCollide = false
b1.BottomSurface = 0
b1.TopSurface = 0
b1.Locked = true
game.Debris:AddItem(b1,2)
end

end

connection = ball.Touched:connect(onTouched)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Tool" referent="RBX833">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Bouncing Betty</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="Part" referent="RBX834">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">24</int>
					<CoordinateFrame name="CFrame">
						<X>180.734665</X>
						<Y>357.825409</Y>
						<Z>732.696472</Z>
						<R00>0.641168177</R00>
						<R01>-0.00025097758</R01>
						<R02>-0.767392695</R02>
						<R10>-8.51111399e-005</R10>
						<R11>0.99999994</R11>
						<R12>-0.000398156699</R12>
						<R20>0.767392695</R20>
						<R21>0.000320597785</R21>
						<R22>0.641168118</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Trigger</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>-0.000995672308</X>
						<Y>-5.99927044</Y>
						<Z>-0.00310284132</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>16.3759975</X>
						<Y>-15.7923212</Y>
						<Z>14.0925331</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.600000024</X>
						<Y>0.200000003</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX835">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.300000012</X>
							<Y>1.5</Y>
							<Z>0.300000012</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX836">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>180.734665</X>
						<Y>357.438538</Y>
						<Z>732.696228</Z>
						<R00>0.641168177</R00>
						<R01>-0.00025097758</R01>
						<R02>-0.767392695</R02>
						<R10>-8.51111399e-005</R10>
						<R11>0.99999994</R11>
						<R12>-0.000398156699</R12>
						<R20>0.767392695</R20>
						<R21>0.000320597785</R21>
						<R22>0.641168118</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">Handle</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>16.3762627</X>
						<Y>-15.7923212</Y>
						<Z>14.0929184</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.600000024</X>
						<Y>0.600000024</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="CylinderMesh" referent="RBX837">
					<Properties>
						<float name="Bevel">0</float>
						<float name="Bevel Roundness">0</float>
						<float name="Bulge">0</float>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX838">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GunWeld</string>
					<ProtectedString name="Source">local tool = script.Parent

local MasterCFrameValues = {}
local meta = {
__call = function(tab,arg)
&#9;for i = 1, #tab do
&#9;&#9;if tab[i][1] == arg then
&#9;&#9;&#9;return tab[i][2]
&#9;&#9;end
&#9;end
&#9;return CFrame.new()
end}
setmetatable(MasterCFrameValues,meta)

local ch = tool:GetChildren()
for i = 1, #ch do
&#9;if ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;table.insert(MasterCFrameValues,{ch[i],ch[i].CFrame:inverse()})
&#9;&#9;ch[i].Anchored = false
&#9;&#9;if ch[i].Name ~= &quot;Handle&quot; then
&#9;&#9;&#9;ch[i].CanCollide = false
&#9;&#9;else
&#9;&#9;&#9;ch[i].CanCollide = true
&#9;&#9;end
&#9;end
end

function weld()
&#9;local han = tool:FindFirstChild(&quot;Handle&quot;)
&#9;if not han then
&#9;&#9;print(&quot;Handle went bye bye&quot;)
&#9;&#9;return
&#9;end
&#9;local ch = han:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i]:IsA(&quot;Weld&quot;) then
&#9;&#9;&#9;ch[i]:remove()
&#9;&#9;end
&#9;end
&#9;local ch = tool:GetChildren()
&#9;for i = 1, #ch do
&#9;&#9;if ch[i] ~= han and ch[i]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;w.Part0 = han
&#9;&#9;&#9;w.Part1 = ch[i]
&#9;&#9;&#9;w.C0 = MasterCFrameValues(han)
&#9;&#9;&#9;w.C1 = MasterCFrameValues(ch[i])
&#9;&#9;&#9;w.Parent = han
&#9;&#9;end
&#9;end
end

tool.Equipped:connect(weld)</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX839">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">WORK!</string>
					<ProtectedString name="Source">Tool = script.Parent
local player = game.Players.LocalPlayer
local WalkSpeed = 18
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local running = Tool.run
local size = -1
local crosshair = player.Crosshairs
local wee = false
local reloading = false
local stam = 50

function throw()

if script.Parent.Rock.Clip.Value == 0 then return 
&#9;end 

&#9;script.Parent.Rock.Clip.Value = script.Parent.Rock.Clip.Value - 1
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(30), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(40), 0)
&#9;wait()
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(60), 0)
&#9;time = 0
&#9;repeat
&#9;wait(.01)
&#9;if time == 50 then
&#9;wee = true
&#9;end
&#9;time = time + 1
&#9;until
&#9;wee == true
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(50), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(30), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(10), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 1
&#9;Tool.Trigger.Transparency = 1

&#9;local hah = game.Lighting:findFirstChild(&quot;Crate&quot;):Clone()
&#9;hah:findFirstChild(&quot;Handle&quot;).BrickColor = player.TeamColor

&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;,hah)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;hah.Name = player.Name

&#9;if workspace:findFirstChild(&quot;Fection&quot;) then

&#9;if workspace.Fection:findFirstChild(player.Name) then
&#9;local count = 0
&#9;local nuu = workspace.Fection:GetChildren()

&#9;for i = 1, #nuu do
&#9;if nuu[i].Name == player.Name then
&#9;count = count + 1
&#9;end
&#9;end

&#9;if count &gt;= 5 then
&#9;workspace.Fection:findFirstChild(player.Name):Destroy()
&#9;end

&#9;end
&#9;hah.Parent = game.Workspace.Fection
&#9;end

&#9;hah:MakeJoints()
&#9;hah:MoveTo((player.Character.Torso.CFrame*CFrame.new(0,0,-3)).p)
&#9;wait()
&#9;local ah = game.Lighting.Test:Clone()
&#9;ah.Parent = hah.Trigger
&#9;ah.Disabled = false 

&#9;coroutine.resume(coroutine.create(function()
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;if Tool.Rock.Clip.Value ~= 0 then
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-0), math.rad(-0), 0)
&#9;Tool.Handle.Transparency = 0
&#9;Tool.Trigger.Transparency = 0
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
&#9;wait(.01)
&#9;weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;wait(.01)
&#9;else
&#9;Tool:Destroy()
&#9;Unequip()
&#9;end
&#9;end))

&#9;local all = game.Players:GetChildren()
&#9;for i = 1, #all do

&#9;if all[i].TeamColor == player.TeamColor then
&#9;local big = Instance.new(&quot;BillboardGui&quot;,all[i].PlayerGui)
&#9;big.Adornee = hah.Trigger
&#9;big.Size = UDim2.new( 1.0, 0, 1.0, 0 )
&#9;big.StudsOffset = Vector3.new( 0, 1, 0 )

&#9;local name = Instance.new(&quot;TextLabel&quot;,big)
&#9;name.Position = UDim2.new( 0.5, 0, 0, 0 )
&#9;name.FontSize = 3
&#9;name.BackgroundTransparency = 1
&#9;name.Size = UDim2.new(0, 0, 0, 0 )
&#9;name.Text = player.Name.. &quot;&apos;s betty&quot;
&#9;name.TextColor3 = Color3.new(0, 25, 0)
&#9;elseif all[i].TeamColor ~= player.TeamColor and all[i].Perk1.Value == &quot;Bomb Squad&quot; then
&#9;local big = Instance.new(&quot;BillboardGui&quot;,all[i].PlayerGui)
&#9;big.Adornee = hah.Trigger
&#9;big.Size = UDim2.new( 1.0, 0, 1.0, 0 )
&#9;big.StudsOffset = Vector3.new( 0, 1, 0 )

&#9;local name = Instance.new(&quot;TextLabel&quot;,big)
&#9;name.Position = UDim2.new( 0.5, 0, 0, 0 )
&#9;name.FontSize = 3
&#9;name.BackgroundTransparency = 1
&#9;name.Size = UDim2.new(0, 0, 0, 0 )
&#9;name.Text = &quot;!!!&quot;
&#9;name.TextColor3 = Color3.new(50, 0, 0)
&#9;end

&#9;end

end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function Equip(mouse)

wait()

running.Value = false
crosshair.Value = size
Tool.Enabled = true
reloading = false

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then

sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.4, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2

if Tool.Parent:findFirstChild(&quot;Humanoid&quot;).WalkSpeed &gt; 16 then
&#9;Tool.Parent.Humanoid.WalkSpeed = 16
end

if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 100
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

local GH = game.Players:findFirstChild(Tool.Parent.Parent.Name)

if GH:findFirstChild(&quot;Stance&quot;) then 
&#9;if GH.Stance.Value == 1 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif GH.Stance.Value == 2 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif GH.Stance.Value == 0 then
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif GH.Stance.Value == 3 then
&#9;&#9;GH.Stance.Value = 0
&#9;&#9;GH.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function increase()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))]]
end

function decrease()
--[[if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))]]
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
running.Value = false
Tool.Enabled = true
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = player:findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;end

end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Up:connect(function() wait(.01) wee = true end)
&#9;lamo.Button1Down:connect(function() wee = false end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;end
end

Tool.Enabled = true

function onActivated()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false

&#9;local character = Tool.Parent;
&#9;local humanoid = character.Humanoid
&#9;if humanoid == nil then
&#9;&#9;print(&quot;Humanoid not found&quot;)
&#9;&#9;return 
&#9;end

&#9;throw()
&#9;wait(2)
&#9;Tool.Enabled = true

end


script.Parent.Activated:connect(onActivated)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)
Tool.Equipped:connect(Equip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX840">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.100000001</X>
					<Y>1.70000005</Y>
					<Z>0.150000006</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Bren</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX841">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX842">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">20</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX843">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX844">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 30
local ReloadTime = 0.096
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 280
local range
local hold = false
local dal = 25
local dah = 40
local ID = 1019
local hor = 0.03
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GRight = Vector3.new(1, 0, 0)
GPos = Vector3.new(0.1, 1.7, 0.15)
GpUp = Vector3.new(0, 0, 1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag4:clone()
Tool.Mag.Transparency = 1
Tool.Mag2.Transparency = 1
Tool.Mag3.Transparency = 1
Tool.Mag4.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
Tool.Mag3.Transparency = 0
Tool.Mag4.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.8, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.8, -0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.8, -0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.8, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.6, -0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.6, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.4, -0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.4, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0.2, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag2.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag3.Mesh.Offset = Vector3.new(0, 0, 0)
Tool.Mag4.Mesh.Offset = Vector3.new(0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end


function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(0.15, 1.9, 0.15)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.15, 1.8, 0.15)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(0.15, 1.7, 0.15)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.7, 0.15)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.7, 0.15)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(-0.3, 1, 0)
Tool.GripPos = Vector3.new(0.15, 1.7, 0.15)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(-0.4, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(-0.5, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(-0.6, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(-0.7, 1, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(-0.6, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(-0.5, 1, 0)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(-0.4, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(-0.3, 1, 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(-0.2, 1, 0)
Tool.GripPos = Vector3.new(0.15, 1.7, 0.15)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(-0.1, 1, 0)
Tool.GripPos = Vector3.new(0.1, 1.7, 0.15)

wait()

Tool.GripForward = Vector3.new(0, 1, 0)
Tool.GripRight = Vector3.new(1, 0, 0)
Tool.GripPos = Vector3.new(0.1, 1.7, 0.15)
Tool.GripUp = Vector3.new(0, 0, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX845">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.0500000007</X>
					<Y>-0.300000012</Y>
					<Z>1.39999998</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">DB Shotgun</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX846">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;[] &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 1 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 1 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)
</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX847">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">2</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX848">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">40</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX849">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 2
local ReloadTime = 0.3
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 450
local range
local hold = false
local dal = 10
local dah = 40
local ID = 1035
local kick = 0.04
local hor = 0.05
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(-0.1, -0.3, 1.5)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/1.3) * (range*0.02) * 0.01 ,v.Y + (re2/1.3) * (range*0.02) *  0.01 ,v.Z + (re3/1.3) * (range*0.02) *  0.01)
&#9;end

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * -3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Shot&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = .8
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 1.5
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-85))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-75))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.03/s)
&#9;Tool.GripPos = Vector3.new(-0.1, -0.3, 1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-65))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-55))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-60))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-80))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait(.03/s)

&#9;Tool.GripPos = Vector3.new(-0.1, -0.3, 0.5)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-120))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-120))
weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
wait(.03/s)
part = Tool:GetChildren()
for i = 1, #part do
if part[i].Name == &quot;Mad&quot; then
part[i].Transparency = 0
elseif part[i].Name == &quot;Zed&quot; then
part[i].Transparency = 1
end
end
wait(.03/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-120))
weld33.C1 = CFrame.new(-1, -0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-120))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)
wait(.03/s)
Tool.Mag.Transparency = 0
Tool.Mag2.Transparency = 0
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-120))
weld33.C1 = CFrame.new(-1, -0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-120), math.rad(-0), 0)

for i = 1, 10 do
Tool.Mag.Mesh.Offset = Vector3.new(0,i*.1,0)
Tool.Mag2.Mesh.Offset = Vector3.new(0,i*.1,0)
wait(.03/s)
end

local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = false
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag = Tool.Mag2:clone()
Tool.Mag2.Transparency = 1
mag.CFrame = Tool.Mag2.CFrame
mag.CanCollide = false
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-5), 0)
wait(.03/s)
for i = 1, 10 do
if i == 6 then Tool.Mag.Transparency = 0 end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90+i*3))
Tool.Mag.Mesh.Offset = Vector3.new(0,1-i*.12,0)
wait(.03/s)
end

for i = 1, 10 do
if i == 6 then Tool.Mag2.Transparency = 0 end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90+i*3))
Tool.Mag2.Mesh.Offset = Vector3.new(0,1-i*.12,0)
wait(.03/s)
end

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-80))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0)
wait(.03/s)

&#9;Tool.GripPos = Vector3.new(-0.1, -0.3, 1)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, -0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.1, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0)
wait(.03/s)
for i = 1, #part do
if part[i].Name == &quot;Mad&quot; or part[i].Name == &quot;Mag&quot; or part[i].Name == &quot;Mag2&quot; then
part[i].Transparency = 1
elseif part[i].Name == &quot;Zed&quot; then
part[i].Transparency = 0
end
end

&#9;Tool.GripPos = Vector3.new(-0.1, -0.3, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0)
wait(.03/s)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.03/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

Tool.Mag.Mesh.Offset = Vector3.new(0,0,0)
Tool.Mag2.Mesh.Offset = Vector3.new(0,0,0)

running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.03, -0.5, 1.5)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.03, -0.5, 1.4)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.03, -0.5, 1.3)
&#9;end
&#9;end))

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;for i = 1, 8 do
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)
&#9;end

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.4, 1.4)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.03, -0.5, 1.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()

Tool.GripForward = Vector3.new(0.8, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-40), 0)

--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.05, -0.5, 1.3)


wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.4)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.4)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.3, 1.5)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX850">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>2</X>
					<Y>0.0500000007</Y>
					<Z>0.200000003</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>1</R10>
					<R11>0</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">DP-28</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX851">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX852">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">47</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX853">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX854">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 47
local ReloadTime = 0.13
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 280
local range
local hold = false
local dal = 35
local dah = 40
local ID = 1020
local kick = 0.03
local hor = 0.025
local ver = 0.001
GForward = Vector3.new(1, 0, 0)
GRight = Vector3.new(0, 1, 0)
GPos = Vector3.new(2, 0.05, 0.2)
GUp = Vector3.new(0, 0, -1)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 0.7
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-95))
wait(.03/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-100))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-105))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-110))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-97), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-115))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-120))
wait(.03/s)
for i = 1, 5 do
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320+i), -0, math.rad(-120))
Tool.Mag.Mesh.Offset = Vector3.new(-0.01*i*2,0.01*i*2,0)
wait(.03/s)
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
Tool.Mag.Mesh.Offset = Vector3.new(0,0,0)
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
w = Instance.new(&quot;Weld&quot;) 
w.Parent = mag
w.Part0 = mag 
w.Part1 = Tool.Mag
for i = 1, 10 do
x = i
if i &gt; 7 then x = 7 end
w.C1 = CFrame.new(-0.1*x,-0.04*i,0) * CFrame.fromEulerAnglesXYZ(0,0,math.rad(10*i))
wait()
end
w:Destroy()
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-110))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-100))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(1,.4,0)
for i = 1, 10 do
Tool.Mag.Mesh.Offset = Vector3.new(1-i*.1,.4,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280+i*3), -0, math.rad(-90))
wait(.03/s)
end
for i = 1, 4 do
Tool.Mag.Mesh.Offset = Vector3.new(0,.4-i*.1,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(-i*4), math.rad(-90))
wait(.03/s)
end
for i = 1, 5 do
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(-16+i*15), math.rad(-90))
wait(.03/s)
end
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(35), math.rad(-90))
wait(.03/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(15), math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(20), math.rad(-90))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), math.rad(15), math.rad(-90))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), math.rad(10), math.rad(-90))
wait(.03/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), math.rad(5), math.rad(-90))
wait(.03/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(-0,0,0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(2.2, 0.13, 0.3)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(2.1, 0.13, 0.3)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(2, 0.13, 0.3)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end


function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(1, -0.1, 0)
Tool.GripPos = Vector3.new(2, 0.05, 0.2)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.2, 0)
Tool.GripPos = Vector3.new(2, 0.1, 0.25)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(1, -0.3, 0)
Tool.GripPos = Vector3.new(2, 0.13, 0.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.4, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.5, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.6, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.7, 0)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()

Tool.GripForward = Vector3.new(1, -0.6, 0)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.5, 0)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)



Tool.GripForward = Vector3.new(1, -0.4, 0)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.3, 0)
Tool.GripPos = Vector3.new(2, 0.13, 0.3)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(1, -0.2, 0)
Tool.GripPos = Vector3.new(2, 0.1, 0.25)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)



wait()


Tool.GripForward = Vector3.new(1, -0.1, 0)
Tool.GripPos = Vector3.new(2, 0.05, 0.2)

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(1, 0, 0)
Tool.GripRight = Vector3.new(0, 1, 0)
Tool.GripPos = Vector3.new(2, 0.05, 0.2)
Tool.GripUp = Vector3.new(0, 0, -1)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX855">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>-0.5</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">Dual Luger</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="IntValue" referent="RBX856">
				<Properties>
					<string name="Name">Gun</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX857">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo
ammo2 = script.Ammo2
mode = script.Parent.Gun

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;Left Gun: &quot;
&#9;&#9;for i = 1, ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;    Right Gun: &quot;
&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end
&#9;&#9;m.Text = m.Text.. &quot;                                            &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;local tet = &quot; &quot;
&#9;&#9;if mode.Value == 0 then
&#9;&#9;tet = &quot; Mode : [Alternation]&quot;
&#9;&#9;elseif mode.Value == 2 then
&#9;&#9;tet = &quot; Mode : [Dual]&quot;
&#9;&#9;elseif mode.Value == 1 then
&#9;&#9;tet = &quot; Mode : [Switch Fire] (Hold Shift To Fire Left Gun)&quot;
&#9;&#9;end
&#9;&#9;g.Text = Tool.Name.. &quot; &quot; ..tet.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value + ammo2.Value &lt; 5 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value + ammo2.Value &gt; 5 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 and ammo2.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Both Guns&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
ammo2.Changed:connect(equip)
clip.Changed:connect(equip)
mode.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX858">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX859">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX860">
					<Properties>
						<string name="Name">Ammo2</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX861">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 150
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1040
local on = Tool.Gun
local hor = 0.02
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GPos = Vector3.new(0, -0.5, 0)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 1, 0)
local press = false
local fgun = 0

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v,wh)
&#9;
if wh == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 and wh == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = nil

&#9;if wh == 0 then 
&#9;pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;Tool.Flame.Fire:play()
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;elseif wh == 1 then 
&#9;pos = script.Parent[&quot;Flame2&quot;].Position + (dir * 2)
&#9;Tool.Flame2.Fire:play()
&#9;Tool.AmmoScript.Ammo2.Value = Tool.AmmoScript.Ammo2.Value - 1
&#9;end

&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;if wh == 0 then
&#9;smoke.Parent = script.Parent.Flame
&#9;else
&#9;smoke.Parent = script.Parent.Flame2
&#9;end
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end

&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 500
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 0
&#9;ex.Name = &quot;EX&quot;
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag2 = Tool.Mag2:clone()
mag2.CFrame = Tool.Mag2.CFrame
mag2.CanCollide = true
mag2.Parent = game.Workspace
game.Debris:AddItem(mag2,3)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.2,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0, 0.4,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.6,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.8,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.8,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.6,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.4,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0.2,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,0,1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if fgun == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 then return end 
if fgun == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 
if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)

&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;if on.Value == 0 then
&#9;&#9;if fgun == 0 then
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;fgun = 1
&#9;&#9;elseif fgun == 1 then
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;elseif on.Value == 1 then
&#9;&#9;recoil = recoil - 80
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,fgun)
&#9;&#9;recoil = recoil + 80
&#9;elseif on.Value == 2 then
&#9;&#9;recoil = recoil + 150
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;recoil = recoil - 150
&#9;end

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then Reload() return end  

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload and Tool.AmmoScript.Ammo2.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;AmmoLeft2 = Tool.AmmoScript.Ammo2.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload

&#9;elseif TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft2 &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo &gt; 0 and TotalAmmo + AmmoLeft2 &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo2.Value = TotalAmmo + AmmoLeft2

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

fgun = 0
if on.Value == 0 then
ReloadTime = .01
elseif on.Value == 1 then
ReloadTime = .05
elseif on.Value == 2 then
ReloadTime = .3
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = player:findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 1
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 1 -- single
&#9;&#9;ReloadTime = .05
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;fgun = 0
&#9;&#9;ReloadTime = .3
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;ReloadTime = .3
&#9;&#9;fgun = 0
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;ReloadTime = .05
&#9;&#9;on.Value = 1 -- single
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButtonDown()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX862">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0</X>
					<Y>-0.699999988</Y>
					<Z>0.540000021</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>-0</R22>
				</CoordinateFrame>
				<string name="Name">Dual M1911</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="IntValue" referent="RBX863">
				<Properties>
					<string name="Name">Gun</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX864">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo
ammo2 = script.Ammo2
mode = script.Parent.Gun

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;Left Gun: &quot;
&#9;&#9;for i = 1, ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;    Right Gun: &quot;
&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end
&#9;&#9;m.Text = m.Text.. &quot;                                            &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;local tet = &quot; &quot;
&#9;&#9;if mode.Value == 0 then
&#9;&#9;tet = &quot; Mode : [Alternation]&quot;
&#9;&#9;elseif mode.Value == 2 then
&#9;&#9;tet = &quot; Mode : [Dual]&quot;
&#9;&#9;elseif mode.Value == 1 then
&#9;&#9;tet = &quot; Mode : [Switch Fire] (Hold Shift To Fire Left Gun)&quot;
&#9;&#9;end
&#9;&#9;g.Text = Tool.Name.. &quot; &quot; ..tet.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value + ammo2.Value &lt; 5 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value + ammo2.Value &gt; 5 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 and ammo2.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Both Guns&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
ammo2.Changed:connect(equip)
clip.Changed:connect(equip)
mode.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX865">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX866">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX867">
					<Properties>
						<string name="Name">Ammo2</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX868">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 170
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1009
local on = Tool.Gun
local hor = 0.023
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0, -0.7, 0.54)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 0, -1)
local press = false
local fgun = 0

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v,wh)
&#9;
if wh == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 and wh == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = nil

&#9;if wh == 0 then 
&#9;pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;Tool.Flame.Fire:play()
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;elseif wh == 1 then 
&#9;pos = script.Parent[&quot;Flame2&quot;].Position + (dir * 2)
&#9;Tool.Flame2.Fire:play()
&#9;Tool.AmmoScript.Ammo2.Value = Tool.AmmoScript.Ammo2.Value - 1
&#9;end

&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;if wh == 0 then
&#9;smoke.Parent = script.Parent.Flame
&#9;else
&#9;smoke.Parent = script.Parent.Flame2
&#9;end
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end

&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 500
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 0
&#9;ex.Name = &quot;EX&quot;
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag2 = Tool.Mag2:clone()
mag2.CFrame = Tool.Mag2.CFrame
mag2.CanCollide = true
mag2.Parent = game.Workspace
game.Debris:AddItem(mag2,3)
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if fgun == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 then return end 
if fgun == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 
if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)

&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;if on.Value == 0 then
&#9;&#9;if fgun == 0 then
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;fgun = 1
&#9;&#9;elseif fgun == 1 then
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;elseif on.Value == 1 then
&#9;&#9;recoil = recoil - 80
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,fgun)
&#9;&#9;recoil = recoil + 80
&#9;elseif on.Value == 2 then
&#9;&#9;recoil = recoil + 150
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;recoil = recoil - 150
&#9;end

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then Reload() return end  

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload and Tool.AmmoScript.Ammo2.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;AmmoLeft2 = Tool.AmmoScript.Ammo2.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload

&#9;elseif TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft2 &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo &gt; 0 and TotalAmmo + AmmoLeft2 &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo2.Value = TotalAmmo + AmmoLeft2

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

fgun = 0
if on.Value == 0 then
ReloadTime = .01
elseif on.Value == 1 then
ReloadTime = .05
elseif on.Value == 2 then
ReloadTime = .3
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = player:findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 1
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 1 -- single
&#9;&#9;ReloadTime = .05
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;fgun = 0
&#9;&#9;ReloadTime = .3
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;ReloadTime = .3
&#9;&#9;fgun = 0
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;ReloadTime = .05
&#9;&#9;on.Value = 1 -- single
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButtonDown()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX869">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>0.600000024</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Dual Magnum</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="IntValue" referent="RBX870">
				<Properties>
					<string name="Name">Gun</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX871">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo
ammo2 = script.Ammo2
mode = script.Parent.Gun

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;Left Gun: &quot;
&#9;&#9;for i = 1, ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;    Right Gun: &quot;
&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end
&#9;&#9;m.Text = m.Text.. &quot;                                            &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;local tet = &quot; &quot;
&#9;&#9;if mode.Value == 0 then
&#9;&#9;tet = &quot; Mode : [Alternation]&quot;
&#9;&#9;elseif mode.Value == 2 then
&#9;&#9;tet = &quot; Mode : [Dual]&quot;
&#9;&#9;elseif mode.Value == 1 then
&#9;&#9;tet = &quot; Mode : [Switch Fire] (Hold Shift To Fire Left Gun)&quot;
&#9;&#9;end
&#9;&#9;g.Text = Tool.Name.. &quot; &quot; ..tet.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value + ammo2.Value &lt; 5 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value + ammo2.Value &gt; 5 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 and ammo2.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Both Guns&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
ammo2.Changed:connect(equip)
clip.Changed:connect(equip)
mode.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX872">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">6</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX873">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">100</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX874">
					<Properties>
						<string name="Name">Ammo2</string>
						<int name="Value">6</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX875">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 6
local ReloadTime = 0.1
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 250
local range
local hold = false
local dal = 25
local dah = 45
local ID = 1024
local on = Tool.Gun
local hor = 0.04
local ver = 0.001
GForward = Vector3.new(0, -1, 0)
GPos = Vector3.new(0, -0, 0.6)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, -1)
local press = false
local fgun = 0

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v,wh)
&#9;
if wh == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 and wh == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = nil

&#9;if wh == 0 then 
&#9;pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;Tool.Flame.Fire:play()
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;elseif wh == 1 then 
&#9;pos = script.Parent[&quot;Flame2&quot;].Position + (dir * 2)
&#9;Tool.Flame2.Fire:play()
&#9;Tool.AmmoScript.Ammo2.Value = Tool.AmmoScript.Ammo2.Value - 1
&#9;end

&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;if wh == 0 then
&#9;smoke.Parent = script.Parent.Flame
&#9;else
&#9;smoke.Parent = script.Parent.Flame2
&#9;end
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end

&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 0
&#9;ex.Name = &quot;EX&quot;
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag2 = Tool.Mag2:clone()
mag2.CFrame = Tool.Mag2.CFrame
mag2.CanCollide = true
mag2.Parent = game.Workspace
game.Debris:AddItem(mag2,3)
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0,-1,0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0,-1,0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0,-1,0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0,-1,0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if fgun == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 then return end 
if fgun == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 
if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)

&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;if on.Value == 0 then
&#9;&#9;if fgun == 0 then
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;fgun = 1
&#9;&#9;elseif fgun == 1 then
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;elseif on.Value == 1 then
&#9;&#9;recoil = recoil - 80
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,fgun)
&#9;&#9;recoil = recoil + 80
&#9;elseif on.Value == 2 then
&#9;&#9;recoil = recoil + 150
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;recoil = recoil - 150
&#9;end

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then Reload() return end  

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload and Tool.AmmoScript.Ammo2.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;AmmoLeft2 = Tool.AmmoScript.Ammo2.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload

&#9;elseif TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft2 &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo &gt; 0 and TotalAmmo + AmmoLeft2 &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo2.Value = TotalAmmo + AmmoLeft2

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

fgun = 0
if on.Value == 0 then
ReloadTime = .01
elseif on.Value == 1 then
ReloadTime = .05
elseif on.Value == 2 then
ReloadTime = .3
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = player:findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 1
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 1 -- single
&#9;&#9;ReloadTime = .05
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;fgun = 0
&#9;&#9;ReloadTime = .2
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.1
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;ReloadTime = .2
&#9;&#9;fgun = 0
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;ReloadTime = .05
&#9;&#9;on.Value = 1 -- single
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.1
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButtonDown()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX876">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0.100000001</X>
					<Y>-0.300000012</Y>
					<Z>0.550000012</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>-0</R22>
				</CoordinateFrame>
				<string name="Name">Dual Nambu</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="IntValue" referent="RBX877">
				<Properties>
					<string name="Name">Gun</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX878">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 180
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1014
local on = Tool.Gun
local hor = 0.01
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(0.1, -0.3, 0.55)
GRight = Vector3.new(-1, 0, 0)
GUp = Vector3.new(0, 0, -1)
local press = false
local fgun = 0

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v,wh)
&#9;
if wh == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 and wh == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = nil

&#9;if wh == 0 then 
&#9;pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;Tool.Flame.Fire:play()
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;elseif wh == 1 then 
&#9;pos = script.Parent[&quot;Flame2&quot;].Position + (dir * 2)
&#9;Tool.Flame2.Fire:play()
&#9;Tool.AmmoScript.Ammo2.Value = Tool.AmmoScript.Ammo2.Value - 1
&#9;end

&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;if wh == 0 then
&#9;smoke.Parent = script.Parent.Flame
&#9;else
&#9;smoke.Parent = script.Parent.Flame2
&#9;end
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end

&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 500
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 0
&#9;ex.Name = &quot;EX&quot;
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag2 = Tool.Mag2:clone()
mag2.CFrame = Tool.Mag2.CFrame
mag2.CanCollide = true
mag2.Parent = game.Workspace
game.Debris:AddItem(mag2,3)
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,-1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if fgun == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 then return end 
if fgun == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 
if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)

&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;if on.Value == 0 then
&#9;&#9;if fgun == 0 then
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;fgun = 1
&#9;&#9;elseif fgun == 1 then
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;elseif on.Value == 1 then
&#9;&#9;recoil = recoil - 80
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,fgun)
&#9;&#9;recoil = recoil + 80
&#9;elseif on.Value == 2 then
&#9;&#9;recoil = recoil + 150
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;recoil = recoil - 150
&#9;end

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then Reload() return end  

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload and Tool.AmmoScript.Ammo2.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;AmmoLeft2 = Tool.AmmoScript.Ammo2.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload

&#9;elseif TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft2 &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo &gt; 0 and TotalAmmo + AmmoLeft2 &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo2.Value = TotalAmmo + AmmoLeft2

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

fgun = 0
if on.Value == 0 then
ReloadTime = .01
elseif on.Value == 1 then
ReloadTime = .05
elseif on.Value == 2 then
ReloadTime = .3
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = player:findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 1
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 1 -- single
&#9;&#9;ReloadTime = .05
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;fgun = 0
&#9;&#9;ReloadTime = .3
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;ReloadTime = .3
&#9;&#9;fgun = 0
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;ReloadTime = .05
&#9;&#9;on.Value = 1 -- single
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButtonDown()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX879">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo
ammo2 = script.Ammo2
mode = script.Parent.Gun

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;Left Gun: &quot;
&#9;&#9;for i = 1, ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;    Right Gun: &quot;
&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end
&#9;&#9;m.Text = m.Text.. &quot;                                            &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;local tet = &quot; &quot;
&#9;&#9;if mode.Value == 0 then
&#9;&#9;tet = &quot; Mode : [Alternation]&quot;
&#9;&#9;elseif mode.Value == 2 then
&#9;&#9;tet = &quot; Mode : [Dual]&quot;
&#9;&#9;elseif mode.Value == 1 then
&#9;&#9;tet = &quot; Mode : [Switch Fire] (Hold Shift To Fire Left Gun)&quot;
&#9;&#9;end
&#9;&#9;g.Text = Tool.Name.. &quot; &quot; ..tet.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value + ammo2.Value &lt; 5 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value + ammo2.Value &gt; 5 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 and ammo2.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Both Guns&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
ammo2.Changed:connect(equip)
clip.Changed:connect(equip)
mode.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX880">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX881">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX882">
					<Properties>
						<string name="Name">Ammo2</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX883">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>0</Y>
					<Z>0.600000024</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Dual P38</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="IntValue" referent="RBX884">
				<Properties>
					<string name="Name">Gun</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX885">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo
ammo2 = script.Ammo2
mode = script.Parent.Gun

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;Left Gun: &quot;
&#9;&#9;for i = 1, ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;    Right Gun: &quot;
&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end
&#9;&#9;m.Text = m.Text.. &quot;                                            &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;local tet = &quot; &quot;
&#9;&#9;if mode.Value == 0 then
&#9;&#9;tet = &quot; Mode : [Alternation]&quot;
&#9;&#9;elseif mode.Value == 2 then
&#9;&#9;tet = &quot; Mode : [Dual]&quot;
&#9;&#9;elseif mode.Value == 1 then
&#9;&#9;tet = &quot; Mode : [Switch Fire] (Hold Shift To Fire Left Gun)&quot;
&#9;&#9;end
&#9;&#9;g.Text = Tool.Name.. &quot; &quot; ..tet.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value + ammo2.Value &lt; 5 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value + ammo2.Value &gt; 5 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 and ammo2.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Both Guns&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
ammo2.Changed:connect(equip)
clip.Changed:connect(equip)
mode.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX886">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX887">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX888">
					<Properties>
						<string name="Name">Ammo2</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX889">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 170
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1008
local on = Tool.Gun
local hor = 0.018
local ver = 0.0005
GForward = Vector3.new(0, -1, 0)
GPos = Vector3.new(-0.1, -0, 0.6)
GRight = Vector3.new(1, 0, 0)
GUp = Vector3.new(0, 0, -1)
local press = false
local fgun = 0

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v,wh)
&#9;
if wh == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 and wh == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = nil

&#9;if wh == 0 then 
&#9;pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;Tool.Flame.Fire:play()
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;elseif wh == 1 then 
&#9;pos = script.Parent[&quot;Flame2&quot;].Position + (dir * 2)
&#9;Tool.Flame2.Fire:play()
&#9;Tool.AmmoScript.Ammo2.Value = Tool.AmmoScript.Ammo2.Value - 1
&#9;end

&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;if wh == 0 then
&#9;smoke.Parent = script.Parent.Flame
&#9;else
&#9;smoke.Parent = script.Parent.Flame2
&#9;end
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end

&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 500
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 0
&#9;ex.Name = &quot;EX&quot;
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag2 = Tool.Mag2:clone()
mag2.CFrame = Tool.Mag2.CFrame
mag2.CanCollide = true
mag2.Parent = game.Workspace
game.Debris:AddItem(mag2,3)
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,-1)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,0.8)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,0.6)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,0.4)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,0.2)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,-1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if fgun == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 then return end 
if fgun == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 
if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)

&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;if on.Value == 0 then
&#9;&#9;if fgun == 0 then
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;fgun = 1
&#9;&#9;elseif fgun == 1 then
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;elseif on.Value == 1 then
&#9;&#9;recoil = recoil - 80
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,fgun)
&#9;&#9;recoil = recoil + 80
&#9;elseif on.Value == 2 then
&#9;&#9;recoil = recoil + 150
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;recoil = recoil - 150
&#9;end

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then Reload() return end  

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload and Tool.AmmoScript.Ammo2.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;AmmoLeft2 = Tool.AmmoScript.Ammo2.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload

&#9;elseif TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft2 &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo &gt; 0 and TotalAmmo + AmmoLeft2 &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo2.Value = TotalAmmo + AmmoLeft2

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

fgun = 0
if on.Value == 0 then
ReloadTime = .01
elseif on.Value == 1 then
ReloadTime = .05
elseif on.Value == 2 then
ReloadTime = .3
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = player:findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 1
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 1 -- single
&#9;&#9;ReloadTime = .05
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;fgun = 0
&#9;&#9;ReloadTime = .3
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;ReloadTime = .3
&#9;&#9;fgun = 0
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;ReloadTime = .05
&#9;&#9;on.Value = 1 -- single
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButtonDown()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX890">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.5</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>0</R00>
					<R01>1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">Dual TT-33</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="IntValue" referent="RBX891">
				<Properties>
					<string name="Name">Gun</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX892">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 8
local ReloadTime = 0.05
local WalkSpeed = 16
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 180
local range
local hold = false
local dal = 20
local dah = 40
local ID = 1013
local on = Tool.Gun
local hor = 0.017
local ver = 0.0005
GForward = Vector3.new(0, 1, 0)
GPos = Vector3.new(-0.5, -0, 0)
GRight = Vector3.new(-0, 0, -1)
GUp = Vector3.new(1, 0, 0)
local press = false
local fgun = 0

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v,wh)
&#9;
if wh == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 and wh == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)

&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = nil

&#9;if wh == 0 then 
&#9;pos = script.Parent[&quot;Flame&quot;].Position + (dir * 2)
&#9;Tool.Flame.Fire:play()
&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;elseif wh == 1 then 
&#9;pos = script.Parent[&quot;Flame2&quot;].Position + (dir * 2)
&#9;Tool.Flame2.Fire:play()
&#9;Tool.AmmoScript.Ammo2.Value = Tool.AmmoScript.Ammo2.Value - 1
&#9;end

&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;if wh == 0 then
&#9;smoke.Parent = script.Parent.Flame
&#9;else
&#9;smoke.Parent = script.Parent.Flame2
&#9;end
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end

&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 500
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local ex = Instance.new(&quot;IntValue&quot;,p)
&#9;ex.Value = 0
&#9;ex.Name = &quot;EX&quot;
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading == true then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.55, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.5, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.45, 0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.4, 0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.35, -0) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.3, -0.1) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.2, -0.2) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait()
weld33.C1 = CFrame.new(-1, 0.1, -0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait()
local vCharacter = Tool.Parent
local GH = game.Players:findFirstChild(Tool.Parent.Name)
local vPlayer = game.Players:playerFromCharacter(vCharacter)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = vPlayer
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.01)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-20), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-30), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-40), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-50), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-60), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
reloading = false
Tool.run.Value = false
end

function ReloadSequence()
if reloading == true then return
end
running.Value = true
reloading = true
local mag = Tool.Mag:clone()
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
local mag2 = Tool.Mag2:clone()
mag2.CFrame = Tool.Mag2.CFrame
mag2.CanCollide = true
mag2.Parent = game.Workspace
game.Debris:AddItem(mag2,3)
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0.2,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0.4,1,-0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0.6,1,-0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0.8,1,-0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(1,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0.8,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0.6,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0.4,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(-0.2,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01/s)
Tool.GripForward = Vector3.new(0,1,0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
running.Value = false
end

function fire()
&#9;
if fgun == 0 and Tool.AmmoScript.Ammo.Value &lt;= 0 then return end 
if fgun == 1 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then return end 
if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end

&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)

&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;--weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;--weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;if on.Value == 0 then
&#9;&#9;if fgun == 0 then
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;fgun = 1
&#9;&#9;elseif fgun == 1 then
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;elseif on.Value == 1 then
&#9;&#9;recoil = recoil - 80
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,fgun)
&#9;&#9;recoil = recoil + 80
&#9;elseif on.Value == 2 then
&#9;&#9;recoil = recoil + 150
&#9;&#9;if Tool.AmmoScript.Ammo.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,0)
&#9;&#9;end
&#9;&#9;if Tool.AmmoScript.Ammo2.Value &gt; 0 then
&#9;&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint,1)
&#9;&#9;end
&#9;&#9;recoil = recoil - 150
&#9;end

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then Reload() return end  

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload and Tool.AmmoScript.Ammo2.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;AmmoLeft2 = Tool.AmmoScript.Ammo2.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload

&#9;elseif TotalAmmo &gt; 0 and Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft2 &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft2
&#9;&#9;Tool.AmmoScript.Ammo2.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo &gt; 0 and TotalAmmo + AmmoLeft2 &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo2.Value = TotalAmmo + AmmoLeft2

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

fgun = 0
if on.Value == 0 then
ReloadTime = .01
elseif on.Value == 1 then
ReloadTime = .05
elseif on.Value == 2 then
ReloadTime = .3
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = player:findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-55), math.rad(-0), 0)
wait(.01)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-45), math.rad(-0), 0)
wait(.01)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-65), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-0), 0)
wait()
weld55.C1 = CFrame.new(1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
weld33.C1 = CFrame.new(-1, 0.6, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end


function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 1
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 1 -- single
&#9;&#9;ReloadTime = .05
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;fgun = 0
&#9;&#9;ReloadTime = .3
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;e&quot; then
&#9;&#9;if on.Value == 0 then
&#9;&#9;on.Value = 2 -- dual
&#9;&#9;ReloadTime = .3
&#9;&#9;fgun = 0
&#9;&#9;elseif on.Value == 2 then
&#9;&#9;ReloadTime = .05
&#9;&#9;on.Value = 1 -- single
&#9;&#9;elseif on.Value == 1 then
&#9;&#9;on.Value = 0 -- alternating
&#9;&#9;ReloadTime = 0.01
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButtonDown()
if Tool.Enabled then
BAM()
end
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;
&#9;lamo.Button1Down:connect(function() onButtonDown() end)&#9;

end

function Not(key)
&#9;if key then
&#9;&#9;lol = string.byte(key)
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;&#9;if lol == 48 and on.Value == 1 then
&#9;&#9;fgun = 0
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.AmmoScript.Ammo.Value &lt;= 0 and Tool.AmmoScript.Ammo2.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX893">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo
ammo2 = script.Ammo2
mode = script.Parent.Gun

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;Left Gun: &quot;
&#9;&#9;for i = 1, ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo2.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;    Right Gun: &quot;
&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;I &quot;
&#9;&#9;end
&#9;&#9;for i = 1, 8-ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;  &quot;
&#9;&#9;end
&#9;&#9;m.Text = m.Text.. &quot;                                            &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;local tet = &quot; &quot;
&#9;&#9;if mode.Value == 0 then
&#9;&#9;tet = &quot; Mode : [Alternation]&quot;
&#9;&#9;elseif mode.Value == 2 then
&#9;&#9;tet = &quot; Mode : [Dual]&quot;
&#9;&#9;elseif mode.Value == 1 then
&#9;&#9;tet = &quot; Mode : [Switch Fire] (Hold Shift To Fire Left Gun)&quot;
&#9;&#9;end
&#9;&#9;g.Text = Tool.Name.. &quot; &quot; ..tet.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value + ammo2.Value &lt; 5 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value + ammo2.Value &gt; 5 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 and ammo2.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Both Guns&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
ammo2.Changed:connect(equip)
clip.Changed:connect(equip)
mode.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX894">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX895">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX896">
					<Properties>
						<string name="Name">Ammo2</string>
						<int name="Value">8</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Tool" referent="RBX897">
			<Properties>
				<bool name="CanBeDropped">false</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>-0.100000001</X>
					<Y>-0.400000006</Y>
					<Z>1.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<string name="Name">FG42</string>
				<Content name="TextureId"><null></null></Content>
				<string name="ToolTip"></string>
			</Properties>
			<Item class="LocalScript" referent="RBX898">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AmmoScript</string>
					<ProtectedString name="Source">Tool = script.Parent 
player = game.Players.LocalPlayer
local m = player.PlayerGui.BAM.No
local x = player.PlayerGui.BAM.Yes
local g = player.PlayerGui.BAM.Gun
clip = script.Clip
ammo = script.Ammo

function equip()

&#9;&#9;if Tool.Parent == player.Backpack then return end

&#9;&#9;m.Text = &quot;&quot;

&#9;&#9;for i = 1, ammo.Value do
&#9;&#9;&#9;m.Text = m.Text..&quot;| &quot;
&#9;&#9;end

&#9;&#9;m.Text = m.Text.. &quot;                                     &quot; 
&#9;&#9;x.Text = clip.Value.. &quot;                           &quot; 
&#9;&#9;g.Text = Tool.Name.. &quot;                           &quot; 

&#9;&#9;local warn = game.Players:findFirstChild(Tool.Parent.Name).PlayerGui.Update.Reload
&#9;&#9;if ammo.Value &lt; 2 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,15,0)
&#9;&#9;m.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;Low Ammo Clip: Press R to Reload&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;if ammo.Value &gt; 2 then
&#9;&#9;warn.Visible = false
&#9;&#9;m.TextColor3 = Color3.new(25,25,25)
&#9;&#9;end

&#9;&#9;x.TextColor3 = Color3.new(25,25,25)

&#9;&#9;if ammo.Value == 0 then
&#9;&#9;warn.Visible = true
&#9;&#9;warn.TextColor3 = Color3.new(25,0,0)
&#9;&#9;warn.Text = &quot;No Ammo In Clip&quot;
&#9;&#9;if clip.Value == 0 then
&#9;&#9;warn.Text = &quot;No Ammo&quot;
&#9;&#9;x.TextColor3 = Color3.new(25,0,0)
&#9;&#9;end
&#9;&#9;end

end

ammo.Changed:connect(equip)
clip.Changed:connect(equip)
script.Parent.Equipped:connect(equip)</ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBX899">
					<Properties>
						<string name="Name">Ammo</string>
						<int name="Value">20</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX900">
					<Properties>
						<string name="Name">Clip</string>
						<int name="Value">120</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX901">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">YEA!</string>
					<ProtectedString name="Source">--[[ 

0 = normal walking 
1 = crouch 
2 = prone

made by litozinnamon --]]

Tool = script.Parent
local player = game.Players.LocalPlayer
local arms = nil
local weld33 = nil -- right arm
local weld55 = nil -- left arm
local legs = nil
local welds = {}
local glues = {}
local reloading = false
local AmmoLostOnReload = 20
local ReloadTime = 0.07
local WalkSpeed = 12
if player.Perk3.Value == &quot;Dead Silence&quot; then
WalkSpeed = WalkSpeed + 2
end
local running = Tool.run
local ready = false
local crosshair = player.Crosshairs
local aim = Tool.aim
local size = 20
local stam = 50 
local recoil = 250
local range
local hold = false
local dal = 22
local dah = 30
local ID = 1005
local hor = 0.01
local ver = 0.0005
GForward = Vector3.new(0, 0, 1)
GRight = Vector3.new(-1, 0, 0)
GPos = Vector3.new(-0.1, -0.4, 1.5)
GUp = Vector3.new(0, 1, 0)
local press = false

------------------------------------------------------------------------------

function Pressing()

&#9;if player.PlayerGui:findFirstChild(&quot;Key&quot;) then

&#9;&#9;local gagi = player.PlayerGui.Key

&#9;&#9;if gagi:findFirstChild(&quot;ID&quot;) and gagi:findFirstChild(&quot;Ref&quot;) and gagi:findFirstChild(&quot;Weapon&quot;) then

&#9;&#9;&#9;local Weap = gagi.ID.Value
&#9;&#9;&#9;local ref = gagi.Ref.Value
&#9;&#9;&#9;local am = gagi.Ammo.Value
&#9;&#9;&#9;local cl = gagi.Clip.Value
&#9;&#9;&#9;local time = 5

&#9;&#9;&#9;gagi.Weapon.Text = &quot;Swapping Weapon&quot;

&#9;&#9;&#9;repeat

&#9;&#9;&#9;if not gagi.Parent then press = false return end
&#9;&#9;&#9;wait()
&#9;&#9;&#9;gagi.Weapon.Text = gagi.Weapon.Text.. &quot;.&quot;
&#9;&#9;&#9;time = time - 1
&#9;&#9;&#9;if time == 0 then
&#9;&#9;&#9;time = 5
&#9;&#9;&#9;press = false
&#9;&#9;&#9;gagi.Weapon.Text = &quot;Weapon Swapped&quot;
&#9;&#9;&#9;local giver = game.Lighting.Gunner:Clone()
&#9;&#9;&#9;giver.Gun.Value = Weap
&#9;&#9;&#9;giver.Drop.Value = game.Lighting:findFirstChild(Tool.Name)
&#9;&#9;&#9;giver.Ammo.Value = am
&#9;&#9;&#9;giver.Clip.Value = cl
&#9;&#9;&#9;giver.TClip.Value = Tool.AmmoScript.Clip.Value
&#9;&#9;&#9;giver.TAmmo.Value = Tool.AmmoScript.Ammo.Value
&#9;&#9;&#9;giver.Parent = player.Backpack
&#9;&#9;&#9;giver.Disabled = false
&#9;&#9;&#9;ref:Destroy()
&#9;&#9;&#9;gagi:Destroy()
&#9;&#9;&#9;Tool:Destroy()
&#9;&#9;&#9;Unequip()
&#9;&#9;&#9;end

&#9;&#9;&#9;until
&#9;&#9;&#9;press == false

&#9;&#9;end&#9;
&#9;end
end

if player.Perk3.Value == &quot;Steady Aim&quot; then
recoil = recoil - 50
end

function computeDirection(vec)
&#9;local lenSquared = vec.magnitude^2
&#9;local invSqrt = 1 / math.sqrt(lenSquared)
&#9;return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

function shoot(v)
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then return 
&#9;end 

&#9;if running.Value then return end

&#9;re1 = math.random(recoil*-1,recoil)
&#9;re2 = math.random(recoil*-1,recoil)
&#9;re3 = math.random(recoil*-1,recoil)

&#9;if not aim.Value then
   v = Vector3.new(v.X + re1 * (range*0.02) * 0.01 ,v.Y + re2 * (range*0.02) *  0.01 ,v.Z + re3 * (range*0.02) *  0.01)
&#9;else
   v = Vector3.new(v.X + (re1/5) * (range*0.02) * 0.01 ,v.Y + (re2/5) * (range*0.02) *  0.01 ,v.Z + (re3/5) * (range*0.02) *  0.01)
&#9;end

&#9;Tool.AmmoScript.Ammo.Value = Tool.AmmoScript.Ammo.Value - 1
&#9;Tool.Flame.Fire:play()
&#9;local dir = v - script.Parent.Parent[&quot;Head&quot;].Position
&#9;dir = computeDirection(dir)
&#9;local pos = script.Parent[&quot;Flame&quot;].Position + (dir * 3)
&#9;local p = game.Lighting.Bullet:Clone()
&#9;p.Name = &quot;Projectile&quot;
&#9;p.CFrame = CFrame.new(pos, pos + dir)
&#9;p.Velocity = (script.Parent.Parent[&quot;Head&quot;].Position - v).unit * - 600
&#9;local upforce = Instance.new(&quot;BodyForce&quot;)
&#9;upforce.force = Vector3.new(0, p:GetMass() * 196, 0)
&#9;upforce.Parent = p
&#9;p.DL.Value = dal
&#9;p.DH.Value = dah
&#9;p.Name = ID
&#9;local creator_tag = Instance.new(&quot;ObjectValue&quot;)
&#9;creator_tag.Value = player
&#9;creator_tag.Name = &quot;creator&quot;
&#9;creator_tag.Parent = p
&#9;local s = game.Lighting[&quot;Auto&quot;]:Clone()
&#9;s.Disabled = false
&#9;s.Parent = p
&#9;p.Parent = game.Workspace

end 

function increase()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value + 1
end
end))
end

function decrease()
if Tool.Parent == player.Backpack then return end
coroutine.resume(coroutine.create(function()
for i = 1, 6 do
wait(0.01)
if Tool.Parent == player.Backpack then return end
crosshair.Value = crosshair.Value - 1
end
end))
end

function kill()
&#9;if not player.PlayerGui:findFirstChild(&quot;FPS&quot;) then
&#9;&#9;local model = game:GetService(&quot;InsertService&quot;):LoadAsset(66799461)
&#9;&#9;if(model:IsA(&quot;Model&quot;)) then
&#9;&#9;  local tab = game:GetService(&quot;InsertService&quot;):Insert(model) 
&#9;&#9;&#9;model.FPS.Parent = player.PlayerGui
&#9;&#9;&#9;model:Destroy()
&#9;&#9;end
&#9;elseif player.PlayerGui:findFirstChild(&quot;FPS&quot;) then&#9;&#9;
&#9;&#9;player.PlayerGui.FPS:Destroy()
&#9;end
end

function slice()
if reloading then return
end
Tool.run.Value = true
reloading = true
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-110))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-110), math.rad(-0), 0.25)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-115))
weld33.C1 = CFrame.new(-1, 0.2, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(-115), math.rad(-0), 0.3)
wait(.01)
local knife = Instance.new(&quot;Part&quot;)
knife.Name = &quot;1016&quot;
knife.BrickColor = BrickColor.new(&quot;Really black&quot;)
knife.Size = Vector3.new(1,1,1)
knife.Parent = workspace
local creator_tag = Instance.new(&quot;ObjectValue&quot;)
creator_tag.Value = player
creator_tag.Name = &quot;creator&quot;
creator_tag.Parent = knife
local knifeweld = Instance.new(&quot;Weld&quot;)
knifeweld.Parent = knife
knifeweld.Part0 = knife
knifeweld.Part1 = Tool.Parent[&quot;Left Arm&quot;]
knifeweld.C0 = CFrame.new(1, 0.2, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(0), 0,  math.rad(-90))
local mesh = Tool.Knifemesh:clone()
mesh.Parent = knife
local script = game.Lighting.Stab:Clone()
script.Parent = knife
script.Disabled = false
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(240), 0, math.rad(-120))
wait(.03)
cam = game.Workspace.CurrentCamera
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(0.1, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-100))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.6)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.7) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-0.005, 0, 0)
cam.CoordinateFrame = ncf*CFrame.new(0, 0, cam_scroll)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(350), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
wait(.03)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.3)  * CFrame.fromEulerAnglesXYZ(math.rad(340), 0, math.rad(-110))
knife:remove()
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1.1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-105))
weld33.C1 = CFrame.new(-1, 0.2, 0.5) * CFrame.fromEulerAnglesXYZ(math.rad(-105), math.rad(-0), 0.2)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 1) * CFrame.fromEulerAnglesXYZ(math.rad(330), 0, math.rad(-100))
weld33.C1 = CFrame.new(-1, 0.2, 0.4) * CFrame.fromEulerAnglesXYZ(math.rad(-100), math.rad(-0), 0.15)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.9) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-95))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-95), math.rad(-0), 0.1)
wait(.01)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
reloading = false
Tool.run.Value = false
end

function ReloadSequence() 
if reloading == true then return
end
running.Value = true
reloading = true
if aim.Value == true then
aim.Value = false
aimoff()
end
s = 1
if player.Perk2.Value == &quot;Sleight of Hand&quot; then
s = 10
end
local mag = Tool.Mag:clone()
Tool.Mag.Transparency = 1
mag.CFrame = Tool.Mag.CFrame
mag.CanCollide = true
mag.Parent = game.Workspace
game.Debris:AddItem(mag,3)
wait(.01/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(1.4, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(260), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new( 1.2, 0,0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(270), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(1, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(280), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Transparency = 0
Tool.Mag.Mesh.Offset = Vector3.new(0.6, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.4, -0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(0.2, 0, 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), -0, math.rad(-90))
wait(.05/s)
Tool.Mag.Mesh.Offset = Vector3.new(-0, 0, 0)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-82), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-84), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-86), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-88), math.rad(-0), 0)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
wait(.05/s)
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
running.Value = false
end

function fire()
&#9;
if Tool.AmmoScript.Ammo.Value &lt;= 0 then Reload() return end 

if not Tool.Enabled or reloading then return end

&#9;coroutine.resume(coroutine.create(function()
&#9;l = math.random(1,20)
&#9;a = math.random(1,2)
&#9;if a == 1 then
&#9;l = l*ver
&#9;else
&#9;l = -l*ver
&#9;end
&#9;for i = 1, 4 do
&#9;local smoke = script.Parent.Flame.Smoke1:clone()
&#9;smoke.Enabled = true
&#9;smoke.Parent = script.Parent.Flame
&#9;game.Debris:AddItem(smoke,0.1)
&#9;end
&#9;crosshair.Value = crosshair.Value + 4
&#9;if not aim.Value then
&#9;Tool.GripPos = GPos
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor, 0, 0)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/4, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;weld55.C1 = CFrame.new(-0.3, 0.6+.05*i, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
&#9;weld33.C1 = CFrame.new(-1, 0+.05*i, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
&#9;end
&#9;end))

&#9;elseif aim.Value then
&#9;cam = game.Workspace.CurrentCamera
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(hor/2, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(l, 0, cam_scroll)
&#9;coroutine.resume(coroutine.create(function()
&#9;for i = 1, 4 do
&#9;wait()
&#9;crosshair.Value = crosshair.Value - 1
&#9;local cam_rot = cam.CoordinateFrame - cam.CoordinateFrame.p
&#9;local cam_scroll = (cam.CoordinateFrame.p - cam.Focus.p).magnitude
&#9;local ncf = CFrame.new(cam.Focus.p)*cam_rot*CFrame.fromEulerAnglesXYZ(-hor/8, 0, 0)
&#9;cam.CoordinateFrame = ncf*CFrame.new(-l/4, 0, cam_scroll)
&#9;end
&#9;end))
&#9;Tool.GripPos = Vector3.new(-0.13, -0.55, 1.7)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.13, -0.55, 1.6)
&#9;wait()
&#9;Tool.GripPos = Vector3.new(-0.13, -0.55, 1.5)
&#9;end
&#9;end))

&#9;range = (script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint - Tool.Parent.Head.Position).Magnitude
&#9;shoot(script.Parent.Parent[&quot;Humanoid&quot;].TargetPoint)

end

function Reload()

if reloading then return end

if Tool.AmmoScript.Ammo.Value == AmmoLostOnReload then return end

if Tool.AmmoScript.Clip.Value &gt; 0 then

&#9;Tool.Enabled = false
&#9;ReloadSequence()

&#9;AmmoLeft = Tool.AmmoScript.Ammo.Value
&#9;TotalAmmo = Tool.AmmoScript.Clip.Value

&#9;if Tool.AmmoScript.Clip.Value &gt;= AmmoLostOnReload then

&#9;&#9;wait()

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload

&#9;elseif Tool.AmmoScript.Clip.Value &lt; AmmoLostOnReload then

&#9;&#9;if TotalAmmo + AmmoLeft &gt;= AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = Tool.AmmoScript.Clip.Value - AmmoLostOnReload + AmmoLeft
&#9;&#9;Tool.AmmoScript.Ammo.Value = AmmoLostOnReload
&#9;&#9;
&#9;&#9;elseif TotalAmmo + AmmoLeft &lt; AmmoLostOnReload then

&#9;&#9;Tool.AmmoScript.Clip.Value = 0
&#9;&#9;Tool.AmmoScript.Ammo.Value = TotalAmmo + AmmoLeft

&#9;&#9;end

&#9;end

&#9;reloading = false
&#9;Tool.Enabled = true

end

end

function Equip(mouse)

wait()

running.Value = false
reloading = false
aim.Value = false
crosshair.Value = size
Tool.Enabled = true

if Tool:findFirstChild(&quot;Right Arm&quot;) then
&#9;Tool[&quot;Right Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;Left Arm&quot;) then
&#9;Tool[&quot;Left Arm&quot;]:Destroy()
end
if Tool:findFirstChild(&quot;1016&quot;) then
&#9;Tool[&quot;1016&quot;]:Destroy()
end

arms = {Tool.Parent:FindFirstChild(&quot;Left Arm&quot;), Tool.Parent:FindFirstChild(&quot;Right Arm&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = Tool.Parent.Torso
sh[2].Part1 = Tool.Parent.Torso
falsearm1 = arms[1]:clone()
falsearm1.formFactor = 3
falsearm1.Size = Vector3.new(0.95, 1.95, 0.95)
local armweld1 = Instance.new(&quot;Weld&quot;)
falsearm1.Parent = Tool
armweld1.Parent = falsearm1
armweld1.Part0 = falsearm1
armweld1.Part1 = arms[1]
falsearm2 = arms[2]:clone()
falsearm2.formFactor = 3
falsearm2.Size = Vector3.new(0.95, 1.95, 0.95)
falsearm1.Transparency = 0.3
falsearm2.Transparency = 0.3
local armweld2 = Instance.new(&quot;Weld&quot;)
falsearm2.Parent = Tool
armweld2.Parent = falsearm2
armweld2.Part0 = falsearm2
armweld2.Part1 = arms[2]
local weld1 = Instance.new(&quot;Weld&quot;) -- left arm
weld55 = weld1
weld1.Part0 = torso
weld1.Name = &quot;Left weld&quot;
weld1.Parent = torso
weld1.Part1 = arms[1]
weld1.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
welds[1] = weld1
local weld2 = Instance.new(&quot;Weld&quot;) -- right arm
weld33 = weld2
weld2.Part0 = torso
weld2.Name = &quot;Right weld&quot;
weld2.Parent = torso
weld2.Part1 = arms[2]
weld2.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
welds[2] = weld2
if game.Players:GetPlayerFromCharacter(Tool.Parent).Perk3.Value == &quot;Extreme Conditioning&quot; then
stam = 200
end

Tool.GripForward = GForward
Tool.GripPos = GPos
Tool.GripRight = GRight
Tool.GripUp = GUp

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;&#9;decrease()
&#9;&#9;decrease()
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function Unequip()

if arms and torso then
local sh = {torso:FindFirstChild(&quot;Left Shoulder&quot;), torso:FindFirstChild(&quot;Right Shoulder&quot;)}
if sh then
sh[1].Part1 = arms[1]
sh[2].Part1 = arms[2]
welds[1].Parent = nil
welds[2].Parent = nil
falsearm1.Parent = nil
falsearm2.Parent = nil
running.Value = false
wait()

if player:findFirstChild(&quot;Stance&quot;) then 
&#9;if player.Stance.Value == 1 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.6
&#9;elseif player.Stance.Value == 2 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed*0.15
&#9;elseif player.Stance.Value == 0 then
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;elseif player.Stance.Value == 3 then
&#9;&#9;player.Stance.Value = 0
&#9;&#9;player.Character.Humanoid.WalkSpeed = WalkSpeed
&#9;end
end

end
end
end

function sprint()
if reloading then return
end
increase()
increase()
increase()
increase()
reloading = true
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 3
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*1.5
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
local runningtime = 0
repeat
wait(.01)
runningtime = runningtime + 1
until
running.Value == false or runningtime == stam
decrease()
decrease()
decrease()
decrease()
run() 
end

function run()
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
on.Value = 0
reloading = false
weld33.C1 = CFrame.new(-0.65, -0.15, 0.16) * CFrame.fromEulerAnglesXYZ(math.rad(-67.5), math.rad(-45), -0)
wait()
weld55.C1 = CFrame.new(-0.54, 0.92, 0.6) * CFrame.fromEulerAnglesXYZ(math.rad(250), 0, math.rad(-120))
weld33.C1 = CFrame.new(-0.7, -0.1, 0.18) * CFrame.fromEulerAnglesXYZ(math.rad(-70), math.rad(-40), -0)
wait()
weld55.C1 = CFrame.new(-0.5, 0.9, 0.64) * CFrame.fromEulerAnglesXYZ(math.rad(260), 0, math.rad(-115))
weld33.C1 = CFrame.new(-0.75, -0.05, 0.20) * CFrame.fromEulerAnglesXYZ(math.rad(-72.5), math.rad(-35), -0)
wait()
weld55.C1 = CFrame.new(-0.46, 0.88, 0.68) * CFrame.fromEulerAnglesXYZ(math.rad(270), 0, math.rad(-110))
weld33.C1 = CFrame.new(-0.8, -0, 0.22) * CFrame.fromEulerAnglesXYZ(math.rad(-75), math.rad(-30), -0)
wait()
weld55.C1 = CFrame.new(-0.42, 0.86, 0.72) * CFrame.fromEulerAnglesXYZ(math.rad(280), 0, math.rad(-105))
weld33.C1 = CFrame.new(-0.85, 0.05, 0.24) * CFrame.fromEulerAnglesXYZ(math.rad(-77.5), math.rad(-25), -0)
wait()
weld55.C1 = CFrame.new(-0.38, 0.84, 0.76) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-100))
weld33.C1 = CFrame.new(-0.9, 0.1, 0.26) * CFrame.fromEulerAnglesXYZ(math.rad(-80), math.rad(-20), -0)
wait()
weld55.C1 = CFrame.new(-0.34, 0.82, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-95))
weld33.C1 = CFrame.new(-0.95, 0.15, 0.28) * CFrame.fromEulerAnglesXYZ(math.rad(-82.5), math.rad(-15), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-85), math.rad(-10), -0)
wait()
weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), -0)
wait()
--crosshair.Value = size
running.Value = false
end

function Prone(on)

if legs == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
end

if legs ~= nil and torso ~= nil then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
if hip ~= nil then
local yes = true
if yes then
yes = false
local weld2 = Instance.new(&quot;Weld&quot;)
local weld1 = Instance.new(&quot;Weld&quot;)

if on.Value == 2 then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),-.1,-0)
legs[1].Name = &quot;LD&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------

weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.4, 1.2, .5) * CFrame.fromEulerAnglesXYZ(math.rad(90),.1,0)
legs[2].Name = &quot;RD&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 1 then
legs = {Tool.Parent:FindFirstChild(&quot;LD&quot;), Tool.Parent:FindFirstChild(&quot;RD&quot;)}
if legs[1] == nil or legs[2] == nil then
legs = {Tool.Parent:FindFirstChild(&quot;Left Leg&quot;), Tool.Parent:FindFirstChild(&quot;Right Leg&quot;)}
end

torso = Tool.Parent:FindFirstChild(&quot;Torso&quot;)
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
hip[1].Part1 = nil
hip[2].Part1 = nil
weld1.Part0 = torso
weld1.Parent = torso
weld1.Part1 = legs[1]
weld1.C1 = CFrame.new(-0.5, 0.75, 1)
legs[1].Name = &quot;LDave&quot;
legs[1].CanCollide = true
glues[1] = weld1
-------------------------------------------
weld2.Part0 = torso
weld2.Parent = torso
weld2.Part1 = legs[2]
weld2.C1 = CFrame.new(0.5,0.495,1.25) * CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
legs[2].Name = &quot;RDave&quot;
legs[2].CanCollide = true
glues[2] = weld2
---------------------------------
end

if on.Value == 0 then

legs = {Tool.Parent:FindFirstChild(&quot;LDave&quot;), Tool.Parent:FindFirstChild(&quot;RDave&quot;)}

if leg then
hip = {torso:FindFirstChild(&quot;Left Hip&quot;), torso:FindFirstChild(&quot;Right Hip&quot;)}
end

hip[1].Part1 = legs[1]
hip[2].Part1 = legs[2]

legs[1].Name = &quot;Left Leg&quot;
legs[2].Name = &quot;Right Leg&quot;

torso:findFirstChild(&quot;Weld&quot;).Parent = nil
torso:findFirstChild(&quot;Weld&quot;).Parent = nil

end
end
end
end
end

function aimtest()

aim.Value = true

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)
wait()

Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.1, -0.45, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)

wait()

Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.5, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)


wait()

Tool.GripForward = Vector3.new(0.3, 0, 1)
Tool.GripPos = Vector3.new(-0.13, -0.55, 1.5)
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)

wait()

Tool.GripForward = Vector3.new(0.4, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)

wait()

Tool.GripForward = Vector3.new(0.5, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)

wait()

Tool.GripForward = Vector3.new(0.6, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)

wait()

Tool.GripForward = Vector3.new(0.7, 0, 1)
weld55.C1 = CFrame.new(-0.3, 0.1, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-35), 0)
--]]

end

function aimoff()

wait()
weld55.C1 = CFrame.new(-0.3, 0.2, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(290), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-30), 0)
Tool.GripForward = Vector3.new(0.6, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.3, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(295), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-25), 0)
Tool.GripForward = Vector3.new(0.5, 0, 1)


wait()
weld55.C1 = CFrame.new(-0.3, 0.4, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(300), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-20), 0)
Tool.GripForward = Vector3.new(0.4, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.5, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(305), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-15), 0)
Tool.GripForward = Vector3.new(0.3, 0, 1)

wait()
weld55.C1 = CFrame.new(-0.3, 0.6, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(310), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-10), 0)
Tool.GripForward = Vector3.new(0.2, 0, 1)
Tool.GripPos = Vector3.new(-0.13, -0.5, 1.5)

wait()

weld55.C1 = CFrame.new(-0.3, 0.7, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(315), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-5), 0)
Tool.GripForward = Vector3.new(0.1, 0, 1)
Tool.GripPos = Vector3.new(-0.12, -0.45, 1.5)

wait()

Tool.GripForward = Vector3.new(0, 0, 1)
Tool.GripRight = Vector3.new(-1, 0, 0)
Tool.GripPos = Vector3.new(-0.1, -0.4, 1.5)
Tool.GripUp = Vector3.new(0, 1, 0)

weld55.C1 = CFrame.new(-0.3, 0.8, 0.8) * CFrame.fromEulerAnglesXYZ(math.rad(320), 0, math.rad(-90))
weld33.C1 = CFrame.new(-1, 0.2, 0.3) * CFrame.fromEulerAnglesXYZ(math.rad(-90), math.rad(-0), 0)

end

function up()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed
on.Value = 0
Prone(on)
end

function mid()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.6
on.Value = 1
Prone(on)
end

function down()
local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
Tool.Parent.Humanoid.WalkSpeed = WalkSpeed*0.15
on.Value = 2
Prone(on)
end

function Key(key)

&#9;if key then

&#9;&#9;key = string.lower(key)

&#9;&#9;if key == &quot;f&quot; then
&#9;&#9;&#9;if running.Value and Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then
&#9;&#9;&#9;&#9;running.Value = false
&#9;&#9;&#9;&#9;reloading = false
&#9;&#9;&#9;&#9;run()
&#9;&#9;&#9;end
&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end
&#9;&#9;&#9;slice()
&#9;&#9;end

&#9;&#9;if key == &quot;g&quot; then
&#9;&#9;kill()
&#9;&#9;end

&#9;&#9;if key == &quot;q&quot; then
&#9;&#9;if not reloading and not running.Value and not aim.Value then
&#9;&#9;aimtest()
&#9;&#9;elseif not reloading and not running.Value and aim.Value then
&#9;&#9;aim.Value = false
&#9;&#9;aimoff()
&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;w&quot; then

&#9;&#9;if not Tool:findFirstChild(&quot;ready&quot;) then
&#9;&#9;lol = Instance.new(&quot;IntValue&quot;,Tool)
&#9;&#9;lol.Name = &quot;ready&quot;
&#9;&#9;game.Debris:AddItem(lol,0.4)

&#9;&#9;elseif Tool:findFirstChild(&quot;ready&quot;) then

&#9;&#9;&#9;if aim.Value then
&#9;&#9;&#9;aim.Value = false
&#9;&#9;&#9;aimoff()
&#9;&#9;&#9;end

&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;&#9;mid()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;&#9;up()
&#9;&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;running.Value = true
&#9;&#9;sprint()
&#9;&#9;end

&#9;&#9;end

&#9;&#9;if key == &quot;x&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 1 then
&#9;&#9;&#9;up()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;elseif on.Value == 2 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;increase()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;c&quot; then
&#9;&#9;&#9;if Tool.Parent.Humanoid.WalkSpeed == WalkSpeed*1.5 then return end
&#9;&#9;&#9;hold = true
&#9;&#9;&#9;local on = game.Players:findFirstChild(Tool.Parent.Name):findFirstChild(&quot;Stance&quot;)
&#9;&#9;&#9;if on.Value == 0 then
&#9;&#9;&#9;mid()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;elseif on.Value == 1 then
&#9;&#9;&#9;down()
&#9;&#9;&#9;decrease()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;Reload()
&#9;&#9;end

&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;&#9;if press then return end
&#9;&#9;&#9;press = true
&#9;&#9;&#9;Pressing()
&#9;&#9;end

&#9;end

end


function onButton1Down()
if not running.Value and not reloading and Tool.AmmoScript.Ammo.Value &gt; 0 and Tool.Enabled then
hold = true
end
wait()
if Tool.Enabled then
BAM()
end
end

function onButton1Up()
hold = false 
end

function lol(lamo)

&#9;lamo.KeyDown:connect(Key)
&#9;lamo.KeyUp:connect(Not)
&#9;lamo.Button1Down:connect(function() onButton1Down() end)&#9;
&#9;lamo.Button1Up:connect(function() onButton1Up() end)

end

function Not(key)
&#9;if key then
&#9;&#9;key = string.lower(key)
&#9;&#9;if key == &quot;w&quot; then
&#9;&#9;running.Value = false
&#9;&#9;end
&#9;&#9;if key == &quot;v&quot; then
&#9;&#9;press = false
&#9;&#9;end
&#9;end
end

function BAM()

&#9;if not Tool.Enabled then
&#9;&#9;return
&#9;end

&#9;fire()
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true

&#9;if Tool.Enabled and not Tool.run.Value and hold then
&#9;BAM()
&#9;elseif Tool.AmmoScript.Ammo.Value &lt;= 0 then
&#9;&#9;Reload()
&#9;end

end

Tool.Equipped:connect(Equip)
Tool.Equipped:connect(lol)
Tool.Unequipped:connect(Unequip)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX902">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FlagScript</string>
				<ProtectedString name="Source">s = script.Parent
flag = s.Flag
pole = s.Pole
team = s.Team
gateOpen = true 
zombcap = false
humcap = false
hum = 0
zom = 0

while true do

local yay = workspace:GetChildren()
for i = 1, #yay do
&#9;if yay[i]:findFirstChild(&quot;Humanoid&quot;) and yay[i]:findFirstChild(&quot;Torso&quot;) then
&#9;&#9;if (yay[i].Torso.Position - pole.Position).Magnitude &lt; 10 then
&#9;&#9;&#9;local player = game.Players:GetPlayerFromCharacter(yay[i])
&#9;&#9;&#9;if player then
&#9;&#9;&#9;&#9;humcap = true 
&#9;&#9;&#9;&#9;hum = hum + 1
&#9;&#9;&#9;elseif not player then
&#9;&#9;&#9;&#9;zombcap = true
&#9;&#9;&#9;&#9;zom = zom + 1
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

if zombcap and humcap then
&#9;flag.Transparency = 0.5
elseif not zombcap and humcap then
&#9;if team.Value ~= BrickColor.new(&quot;Really black&quot;) or flag.Mesh.Offset.y &lt;= 0 then

&#9;&#9;if BrickColor.new(&quot;Really black&quot;) == team.Value then
&#9;&#9;&#9; if flag.Mesh.Offset.y &lt; 0 then
&#9;&#9;&#9;&#9; flag.Mesh.Offset = flag.Mesh.Offset + Vector3.new(0,.1*hum,0)
&#9;&#9;&#9; end
&#9;&#9;else 
&#9;&#9;&#9; if flag.Mesh.Offset.y &gt; -10 then
&#9;&#9;&#9;&#9; flag.Mesh.Offset = flag.Mesh.Offset - Vector3.new(0,.1*hum,0)
&#9;&#9;&#9; else
&#9;&#9;&#9;&#9; team.Value = BrickColor.new(&quot;Really black&quot;)
&#9;&#9;&#9; end
&#9;&#9;end
&#9;end
elseif not humcap and zombcap then
&#9;if team.Value ~= BrickColor.new(&quot;Medium green&quot;) or flag.Mesh.Offset.y &lt;= 0 then

&#9;&#9;if BrickColor.new(&quot;Medium green&quot;) == team.Value then
&#9;&#9;&#9; if flag.Mesh.Offset.y &lt; 0 then
&#9;&#9;&#9;&#9; flag.Mesh.Offset = flag.Mesh.Offset + Vector3.new(0,.04*zom,0)
&#9;&#9;&#9; end
&#9;&#9;else 
&#9;&#9;&#9; if flag.Mesh.Offset.y &gt; -10 then
&#9;&#9;&#9;&#9; flag.Mesh.Offset = flag.Mesh.Offset - Vector3.new(0,.03*zom,0)
&#9;&#9;&#9; else
&#9;&#9;&#9;&#9; team.Value = BrickColor.new(&quot;Medium green&quot;)
&#9;&#9;&#9; end
&#9;&#9;end
&#9;end
end

wait(.1)

hum = 0
zom = 0
flag.BrickColor = team.Value
flag.Transparency = 0
zombcap = false
humcap = false
end </ProtectedString>
			</Properties>
		</Item>
	</Item>
	<Item class="ChangeHistoryService" referent="RBX903">
		<Properties>
			<string name="Name">ChangeHistoryService</string>
		</Properties>
	</Item>
</roblox>