<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX0">
		<Properties>
			<token name="Controller">0</token>
			<bool name="ControllerFlagShown">true</bool>
			<Ref name="CurrentCamera">RBX1</Ref>
			<CoordinateFrame name="ModelInPrimary">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Workspace</string>
			<Ref name="PrimaryPart">RBX2</Ref>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Camera" referent="RBX3">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>0</X>
					<Y>0</Y>
					<Z>-5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Camera</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">28</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0.200000048</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">2</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<string name="Name">Base</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>0.400000006</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX1">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-196.561996</X>
					<Y>46.7199821</Y>
					<Z>185.753418</Z>
					<R00>-0.997963309</R00>
					<R01>-0.0176273212</R01>
					<R02>0.061309807</R02>
					<R10>0</R10>
					<R11>0.961066186</R11>
					<R12>0.276318341</R12>
					<R20>-0.0637935326</R20>
					<R21>0.275755495</R21>
					<R22>-0.95910877</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>-197.788193</X>
					<Y>41.193615</Y>
					<Z>204.935593</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Instance</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Model" referent="RBX4">
			<Properties>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Ban Players</string>
				<Ref name="PrimaryPart">null</Ref>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="Model" referent="RBX5">
				<Properties>
					<token name="Controller">0</token>
					<bool name="ControllerFlagShown">true</bool>
					<CoordinateFrame name="ModelInPrimary">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">BannedPlayers</string>
					<Ref name="PrimaryPart">null</Ref>
					<bool name="archivable">true</bool>
				</Properties>
				<Item class="IntValue" referent="RBX6">
					<Properties>
						<string name="Name">player name</string>
						<int name="Value">1</int>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7">
					<Properties>
						<string name="Name">player name</string>
						<int name="Value">1</int>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8">
					<Properties>
						<string name="Name">player name</string>
						<int name="Value">1</int>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX9">
					<Properties>
						<string name="Name">player name</string>
						<int name="Value">1</int>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX10">
					<Properties>
						<string name="Name">player name</string>
						<int name="Value">1</int>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX11">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Delete Player</string>
					<string name="Source">print(&quot;Ban Players Loaded&quot;)&#13;&#10;&#13;&#10;&#13;&#10;function onPlayerEntered(newPlayer)&#13;&#10;&#13;&#10;&#9;while true do&#13;&#10;&#9;&#9;if newPlayer.Character ~= nil then break end&#13;&#10;&#9;&#9;wait(0)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local force=script.Parent.BannedPlayers:children()&#13;&#10;&#9;for i=1, #force do&#13;&#10;&#9;&#9;if (force[i].Name:lower()==newPlayer.Name:lower()) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if (newPlayer == nil) then return end&#13;&#10;&#9;&#9;&#9;newPlayer.Parent = nil&#13;&#10;&#13;&#10;&#9;&#9;&#9;if (newPlayer.Character == nil) then return end&#13;&#10;&#9;&#9;&#9;newPlayer.Character.Parent = nil&#13;&#10;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;game.Players.ChildAdded:connect(onPlayerEntered)&#13;&#10;</string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX12">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BanScriptv2.56</string>
				<string name="Source">-- Anaminus&#13;&#10;&#13;&#10;print(&quot;Command Center Loaded&quot;)&#13;&#10;&#13;&#10;banner = game.Workspace:findFirstChild(&quot;Ban Players&quot;)&#13;&#10;&#13;&#10;permission = { &quot;nuclrmnky&quot;,&quot;?????&quot;,&quot;?????&quot;,&quot;?????&quot;,&quot;?????&quot; }&#13;&#10;&#13;&#10;function checkOkToLetIn(name)&#13;&#10;&#9;for i = 1,#permission do&#13;&#10;&#9;&#9;-- convert strings to all upper case, otherwise we will let in &#13;&#10;&#9;&#9;-- &quot;Telamon&quot; but not &quot;telamon&quot; or &quot;tELAMON&quot;&#13;&#10;&#9;&#9;if (string.upper(name) == string.upper(permission[i])) then return true end&#13;&#10;&#9;end&#13;&#10;&#9;return false&#13;&#10;end&#13;&#10;&#13;&#10;function ban(name, source)&#13;&#10;&#9;local p=game.Workspace:findFirstChild(name)&#13;&#10;&#9;if p==nil then return end&#13;&#10;--&#9;if (name == source) then return end&#13;&#10;&#9;local player = game.Players:findFirstChild(name)&#13;&#10;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;m.Parent = player&#13;&#10;&#9;m.Text = &quot;You are being&quot;&#13;&#10;&#9;wait(2)&#13;&#10;&#9;m.Text = &quot;temporarily banned&quot;&#13;&#10;&#9;wait(2)&#13;&#10;&#9;m.Text = &quot;from here.&quot;&#13;&#10;&#9;wait(2)&#13;&#10;&#9;m.Text = &quot;Don&apos;t misbehave anymore,&quot;&#13;&#10;&#9;wait(2)&#13;&#10;&#9;m.Text = &quot;or you may be perminently banned.&quot;&#13;&#10;&#9;wait(2)&#13;&#10;&#13;&#10;&#9;m.Parent = nil&#13;&#10;&#9;p.Parent = nil&#13;&#10;&#9;player.Parent = nil&#13;&#10;&#9;if banner ~= nil then&#13;&#10;&#9;&#9;local I = Instance.new(&quot;IntValue&quot;)&#13;&#10;&#9;&#9;I.Name = name&#13;&#10;&#9;&#9;I.Parent = banner.BannedPlayers&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function onChatted(msg, recipient, speaker)&#13;&#10;&#13;&#10;&#9;-- convert to all lower case&#13;&#10;&#13;&#10;&#9;local source = string.lower(speaker.Name)&#13;&#10;&#9;msg = string.lower(msg)&#13;&#10;&#13;&#10;&#9;-- Below is only for me&#13;&#10;&#9;if (checkOkToLetIn(source)) then&#13;&#10;&#9;&#9;if string.match(msg, &quot;ban&quot;) then&#13;&#10;&#9;&#9;&#9;local players=game.Players:children()&#13;&#10;&#9;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;ban(players[i].Name, source)&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function onPlayerEntered(newPlayer)&#13;&#10;&#9;newPlayer.Chatted:connect(function(msg, recipient) onChatted(msg, recipient, newPlayer) end) &#13;&#10;end&#13;&#10;&#13;&#10;game.Players.ChildAdded:connect(onPlayerEntered)</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX13">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><url>http://www.roblox.com/asset/?id=1018966</url></Content>
				<string name="Name">LinkedLeaderboard</string>
				<string name="Source"></string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX14">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">commands</string>
				<string name="Source">&#13;&#10;----------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;---------------------------------------------------------jordo---------------------------------------------------------------&#13;&#10;----------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;print(&quot;jordo&apos;s commands script loaded succsessfully!&quot;)&#13;&#10;&#13;&#10;permission = { &quot;Cannonballj&quot; } --Add admins or take away here.&#13;&#10;owner = &quot;Nuclrmnky&quot; --this is the owner&#13;&#10;local stuff = game.Workspace:GetChildren()&#13;&#10;for i = 1, #stuff do&#13;&#10;&#9;if (stuff[i].className == &quot;Model&quot;) then&#13;&#10;&#9;&#9;table.insert(regen, stuff[i]:clone())&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function checkOkToLetIn(name) --Check for admins&#13;&#10;&#9;for i = 1,#permission do&#13;&#10;&#9;&#9;if (string.upper(name) == string.upper(permission[i])) then return true end&#13;&#10;&#9;end&#13;&#10;&#9;return false&#13;&#10;end&#13;&#10;&#13;&#10;function banify(player) --Ban people!&#13;&#10;&#9;if (#ban ~= 0) then&#13;&#10;&#9;&#9;for i = 1, #ban do&#13;&#10;&#9;&#9;&#9;if (string.lower(ban[i]) == string.lower(player.Name)) then return end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;table.insert(ban, string.lower(player.Name))&#13;&#10;&#9;message = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;message.Name = &quot;Hint&quot;&#13;&#10;&#9;message.Text = player.Name..&quot; You have been bad...&quot;&#13;&#10;&#9;message.Parent = game.Workspace&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot;because ur mean&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; BANNED&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message:remove()&#13;&#10;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;message.Parent = player&#13;&#10;&#9;c = player.Backpack:GetChildren()&#13;&#10;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;c[i]:remove()&#13;&#10;&#9;end&#13;&#10;&#9;message.Text = &quot;stop,&quot;..player.Name..&quot;, or ill ban you.&quot;&#13;&#10;&#9;player.Character.Parent = nil&#13;&#10;&#9;player.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function kicky(player) --Kick people!&#13;&#10;&#9;message = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;message.Name = &quot;Hint&quot;&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE KICKED IN 3&quot;&#13;&#10;&#9;message.Parent = game.Workspace&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE KICKED IN 2&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE KICKED IN 1&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message:remove()&#13;&#10;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;message.Parent = player&#13;&#10;&#9;message.Text = &quot;Nobody can hear you now, &quot;..player.Name..&quot;...  Go away.&quot;&#13;&#10;&#9;c = player.Backpack:GetChildren()&#13;&#10;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;c[i]:remove()&#13;&#10;&#9;end&#13;&#10;&#9;player.Character.Parent = nil&#13;&#10;&#9;player.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function killify(player) --Kill people!&#13;&#10;&#9;message = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;message.Name = &quot;Hint&quot;&#13;&#10;&#9;message.Text = player.Name..&quot; Wasup...&quot;&#13;&#10;&#9;message.Parent = game.Workspace&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; ... hmmm...&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; =(&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message:remove()&#13;&#10;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;message.Parent = player&#13;&#10;&#9;message.Text = &quot;That isn&apos;t good. &quot;..player.Name..&quot;I should get out of here.&quot;&#13;&#10;&#9;c = player.Backpack:GetChildren()&#13;&#10;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;c[i]:remove()&#13;&#10;&#9;end&#13;&#10;&#9;player.Character.Parent = nil&#13;&#10;&#9;player.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function checkIfBanned(name) --NO PLACE FOR YOU!!!&#13;&#10;&#9;if (#ban == 0) then return false end&#13;&#10;&#9;for i = 1, #ban do&#13;&#10;&#9;&#9;if (string.upper(name) == string.upper(ban[i])) then return true end&#13;&#10;&#9;end&#13;&#10;&#9;return false&#13;&#10;end&#13;&#10;&#13;&#10;function onPlayerRespawned(newPlayer) --Give admins weps, and put a bodyposition in them.&#13;&#10;&#9;if checkIfBanned(newPlayer.Name) then --If the person is banned then NO PLACE FOR THEM!&#13;&#10;&#9;&#9;while true do&#13;&#10;&#9;&#9;&#9;wait(1)&#13;&#10;&#9;&#9;&#9;if (newPlayer.Character ~= nil) then break end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;c = newPlayer.Backpack:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do --So they can&apos;t use tools when they&apos;re banned.&#13;&#10;&#9;&#9;&#9;c[i]:remove()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;newPlayer:remove() --Bye bye person!&#13;&#10;&#9;end&#13;&#10;&#9;while true do --Don&apos;t crash&#13;&#10;&#9;&#9;wait(1)&#13;&#10;&#9;&#9;if (newPlayer.Character~= nil) then break end&#13;&#10;&#9;end&#13;&#10;&#9;pos = Instance.new(&quot;BodyPosition&quot;) --So you can move people around!&#13;&#10;&#9;pos.maxForce = Vector3.new(0,0,0)&#13;&#10;&#9;pos.Parent = newPlayer.Character.Torso&#13;&#10;&#9;local m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;m.Name = &quot;Hint&quot;&#13;&#10;&#9;m.Text = &quot;Say commands for commands&quot;&#13;&#10;&#9;m.Parent = newPlayer&#13;&#10;&#9;if  checkOkToLetIn(newPlayer.Name) then&#13;&#10;&#9;&#9;m.Text = &quot;Say commands for commands and say admin commands for admin commands&quot;&#13;&#10;&#9;&#9;newPlayer.Character.Humanoid.MaxHealth = 100000000000000000000000000000000000000000000000000000000000000000000000000000 --Did I mention lots of health?&#13;&#10;&#9;&#9;newPlayer.Character.Humanoid.Health = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&#13;&#10;&#9;&#9;s = Instance.new(&quot;Script&quot;)--No dying!&#13;&#10;&#9;&#9;s.Source = [[&#13;&#10;while true do&#13;&#10;&#9;wait(1)&#13;&#10;&#9;script.Parent.Humanoid.Health = script.Parent.Humanoid.Health + 1000&#13;&#10;end&#13;&#10;&#9;&#9;]]&#13;&#10;&#9;&#9;s.Parent = newPlayer.Character&#13;&#10;&#9;&#9;s.Disabled = false&#13;&#10;&#9;&#9;c = game.Lighting:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;&#9;if (c[i].className == &quot;HopperBin&quot; or c[i].className == &quot;Tool&quot;) then --Any tools in the lighting get given to them.&#13;&#10;&#9;&#9;&#9;&#9;c[i]:clone().Parent = newPlayer.Backpack&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;wait(3)&#13;&#10;&#9;m.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function onChatted(msg, recipient, speaker)&#13;&#10;&#13;&#10;&#9;--Don&apos;t write the commands with any capitals or it won&apos;t work.&#13;&#10;&#13;&#10;&#9;local source = string.lower(speaker.Name)&#13;&#10;&#9;msg = string.lower(msg)&#13;&#10;&#13;&#10;&#9;if (msg == &quot;day&quot;) then game.Lighting.TimeOfDay = &quot;14:00:00&quot; end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;night&quot;) then game.Lighting.TimeOfDay = &quot;00:00:00&quot; end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;commands&quot;) then&#13;&#10;&#9;&#9;if (speaker:findFirstChild(&quot;Hint&quot;)~= nil) then speaker.Hint:remove() end&#13;&#10;&#9;&#9;m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;&#9;m.Name = &quot;Hint&quot;&#13;&#10;&#9;&#9;m.Text = &quot;~Commands~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Time: day&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Time: night&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: normal&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: neon&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: red&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: yellow&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: green&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: blue&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: black&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: white&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: betaish&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: disco&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: suicide&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: no messages&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: commands&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: admins&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: banned&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: regen&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Admin only: admin commands&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;regen&quot;) then&#13;&#10;&#9;&#9;if (#regen == 0 or oktoregen == false) then return end&#13;&#10;&#9;&#9;oktoregen = false&#13;&#10;&#9;&#9;m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;Starting to regen&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;stuff = game.Workspace:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #stuff do&#13;&#10;&#9;&#9;&#9;for o = 1, #regen do&#13;&#10;&#9;&#9;&#9;&#9;if (stuff[i].Name == regen[o].Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait()&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Text = &quot;Removing &quot;..stuff[i].Name..&quot;...&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;stuff[i]:remove()&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;for i = 1, #regen do&#13;&#10;&#9;&#9;&#9;wait()&#13;&#10;&#9;&#9;&#9;thing = regen[i]:clone()&#13;&#10;&#9;&#9;&#9;m.Text = &quot;Regenerating &quot;..thing.Name..&quot;...&quot;&#13;&#10;&#9;&#9;&#9;thing.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;thing:makeJoints()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Text = &quot;Completed regen&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m:remove()&#13;&#10;&#9;&#9;oktoregen = true&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;admins&quot;) then&#13;&#10;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;~Admins~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;for i = 1, #permission do&#9;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = permission[i]&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;banned&quot;) then&#13;&#10;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;~Bans~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;if (#ban == 0) then&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = &quot;NO BANNED PEOPLE&quot;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Parent = nil&#9;&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;for i = 1, #ban do&#9;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = ban[i]&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;normal&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;0:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(122, 255, 120)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;neon&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,255,255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,255,255)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,255,255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,255,255)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;red&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;yellow&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;green&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,255,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,255,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;blue&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,0,255)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,0,255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,0,255)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;black&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;00:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;betaish&quot;) then&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;00:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;white&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,255)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(255,255,255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,255)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;disco&quot;) then&#13;&#10;&#9;&#9;for a = 1, 20 do&#13;&#10;&#9;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;&#9;game.Lighting.ClearColor = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;0:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(122, 255, 120)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;suicide&quot;) then&#13;&#10;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;no messages&quot;) then&#13;&#10;&#9;&#9;c = speaker:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;&#9;if (c[i].className == &quot;Message&quot; or c[i].className == &quot;Hint&quot;) then c[i]:remove() end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (checkOkToLetIn(source)) then --[[&#9;If you want all the commands to be admin only then move this line before the first command.&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;If you want ALL the commands to be avalible for everyone then remove this line. --]]&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;kill&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Immortal&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;unlock&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].Locked = false end&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Hat&quot;) then c[o].Handle.Locked = false end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;lock&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].Locked = true end&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Hat&quot;) then c[o].Handle.Locked = true end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;explode&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if (p==nil or p:findFirstChild(&quot;Torso&quot;)==nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;e = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;&#9;e.Position = p.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;e.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;2d&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.position = Vector3.new(0,0,-30)&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(0,0,1e+006)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;freeze&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.Anchored = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;sit&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;s = Instance.new(&quot;Seat&quot;)&#13;&#10;&#9;&#9;&#9;&#9;s.Position = p.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;s.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;s.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;s.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;s.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;&#9;wait()&#13;&#10;&#9;&#9;&#9;&#9;s.Parent = nil&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;thaw&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.Anchored = false&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;immortal&quot;) then --Big credit to Anaminus for this one!&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (game.Players:findFirstChild(players[i].Name)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;local p = game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;local h = p:findFirstChild(&quot;Humanoid&quot;)&#13;&#10;&#9;&#9;&#9;&#9;if (p==nil or h == nil or p:findFirstChild(&quot;Immortal&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;local health = h.Health&#13;&#10;&#9;&#9;&#9;&#9;local maxhealth = h.MaxHealth&#13;&#10;&#9;&#9;&#9;&#9;local s = Instance.new(&quot;Script&quot;)&#13;&#10;&#9;&#9;&#9;&#9;s.Name =&quot;Immortal&quot;&#13;&#10;&#9;&#9;&#9;&#9;s.Source = [[&#13;&#10;print(&quot;Invunerable&quot;)&#13;&#10;local character = script.Parent&#13;&#10;&#13;&#10;function Save(object, match, copy, parent)&#13;&#10;&#9;if character == nil then return end&#13;&#10;&#9;local animate = character.Animate&#13;&#10;&#9;cani = animate:Clone()&#13;&#10;&#9;if object == match then&#13;&#10;&#9;&#9;copy.Parent = parent&#13;&#10;&#9;&#9;parent.ChildRemoved:connect(function(property) Save(property, copy, copy:Clone(), parent) end)&#13;&#10;&#9;&#9;animate.Parent = nil&#13;&#10;&#9;&#9;cani.Parent = character&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;-- Save Joints! --&#13;&#10;local head = character:FindFirstChild(&quot;Head&quot;)&#13;&#10;if head~=nil then&#13;&#10;&#9;local weld = head:FindFirstChild(&quot;HeadWeld&quot;)&#13;&#10;&#9;if weld~=nil then &#13;&#10;&#9;&#9;local Cweld = weld:Clone()&#13;&#10;&#9;&#9;head.ChildRemoved:connect(function(property) Save(property, weld, Cweld, head) end)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;local torso = character:FindFirstChild(&quot;Torso&quot;)&#13;&#10;if torso~=nil then&#13;&#10;&#9;local neck = torso:FindFirstChild(&quot;Neck&quot;)&#13;&#10;&#9;if neck~=nil then&#13;&#10;&#9;&#9;local Cneck = neck:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, neck, Cneck, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local lhip = torso:FindFirstChild(&quot;Left Hip&quot;)&#13;&#10;&#9;if lhip~=nil then&#13;&#10;&#9;&#9;local Clhip = lhip:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, lhip, Clhip, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local rhip = torso:FindFirstChild(&quot;Right Hip&quot;)&#13;&#10;&#9;if rhip~=nil then&#13;&#10;&#9;&#9;local Crhip = rhip:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, rhip, Crhip, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local lsho = torso:FindFirstChild(&quot;Left Shoulder&quot;)&#13;&#10;&#9;if lsho~=nil then&#13;&#10;&#9;&#9;local Clsho = lsho:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, lsho, Clsho, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local rsho = torso:FindFirstChild(&quot;Right Shoulder&quot;)&#13;&#10;&#9;if rsho~=nil then&#13;&#10;&#9;&#9;local Crsho = rsho:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, rsho, Crsho, torso) end)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;---------------------&#13;&#10;&#13;&#10;local h = character:FindFirstChild(&quot;Humanoid&quot;)&#13;&#10;if h~=nil then&#13;&#10;&#9;h.MaxHealth = (2^30)&#13;&#10;&#9;h.Health = (2^30)&#13;&#10;end&#13;&#10;function healthChanged(property)&#13;&#10;&#9;if property == &quot;Health&quot; then&#13;&#10;&#9;&#9;character.Humanoid.Health = (2^30)&#13;&#10;&#9;elseif property == &quot;MaxHealth&quot; then&#13;&#10;&#9;&#9;character.Humanoid.MaxHealth = (2^30)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;function onChanged(property)&#13;&#10;&#9;if property.className == &quot;Hat&quot; then&#13;&#10;&#9;&#9;wait()&#13;&#10;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)&#13;&#10;&#9;&#9;if head~=nil then&#13;&#10;&#9;&#9;&#9;local weld = head:FindFirstChild(&quot;HeadWeld&quot;)&#13;&#10;&#9;&#9;&#9;if weld~=nil then &#13;&#10;&#9;&#9;&#9;&#9;local Cweld = weld:Clone()&#13;&#10;&#9;&#9;&#9;&#9;head.ChildRemoved:connect(function(property) Save(property, weld, Cweld, head) end)&#13;&#10;&#9;&#9;&#9;&#9;print(&quot;Hat Success&quot;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;character.ChildAdded:connect(onChanged)&#13;&#10;character.Humanoid.Changed:connect(healthChanged)&#13;&#10;]]&#13;&#10;&#9;&#9;&#9;&#9;s.Parent = p&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;mortal&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Character== nil or players[i].Character:findFirstChild(&quot;Immortal&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;players[i].Character.Immortal:remove()&#9;&#13;&#10;&#9;&#9;&#9;&#9;players[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;bricky&quot;) then&#13;&#10;&#9;&#9;local players = game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;p = players[i].Character&#13;&#10;&#9;&#9;&#9;&#9;if (p == nil or p:findFirstChild(&quot;Torso&quot;)== nil or p:findFirstChild(&quot;Head&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;t = p.Torso&#13;&#10;&#9;&#9;&#9;&#9;h = p.Head&#13;&#10;&#9;&#9;&#9;&#9;pos = t.Position&#13;&#10;&#9;&#9;&#9;&#9;g = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for u = 1, #g do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (g[u].className == &quot;Hat&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e.Position = g[u].Handle.Position&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e.BlastPressure = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;g[u]:remove()&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;p:breakJoints()&#13;&#10;&#9;&#9;&#9;&#9;t.formFactor = 2&#13;&#10;&#9;&#9;&#9;&#9;t.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;t.CFrame = CFrame.new(pos)&#13;&#10;&#9;&#9;&#9;&#9;h.formFactor = 2&#13;&#10;&#9;&#9;&#9;&#9;h.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;if (h:findFirstChild(&quot;Mesh&quot;)~= nil) then h.Mesh:remove() end&#13;&#10;&#9;&#9;&#9;&#9;h.CFrame = CFrame.new(t.Position.x,t.Position.y + 0.4,t.Position.z)&#13;&#10;&#9;&#9;&#9;&#9;rarm = p:findFirstChild(&quot;Right Arm&quot;)&#13;&#10;&#9;&#9;&#9;&#9;rarm.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rarm.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rarm.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;rarm.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;rarm.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;larm = p:findFirstChild(&quot;Left Arm&quot;)&#13;&#10;&#9;&#9;&#9;&#9;larm.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;larm.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;larm.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;larm.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;larm.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;rLeg = p:findFirstChild(&quot;Right Leg&quot;)&#13;&#10;&#9;&#9;&#9;&#9;rLeg.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rLeg.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rLeg.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;rLeg.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;rLeg.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;lLeg = p:findFirstChild(&quot;Left Leg&quot;)&#13;&#10;&#9;&#9;&#9;&#9;lLeg.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;lLeg.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;lLeg.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;lLeg.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;lLeg.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;p:makeJoints()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;trip&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)~= nil) then p.Torso.RotVelocity = Vector3.new(0,0,200) end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;jumpy&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.Velocity = Vector3.new(0,500,0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;kick&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name)&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (string.lower(players[i].Name)== string.lower(owner)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Text = &quot;NO KICKING &quot;.. string.upper(owner).. &quot;!!!!!!!!!!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;kicky(players[i])&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;restart&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.position = Vector3.new(0,5,0) --Change these numbers to where you want them to fly to!&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].CanCollide = false end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;land&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].CanCollide = true end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;ghost&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;unghost&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;summon&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (game.Players:findFirstChild(speaker.Name).Character== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.position = game.Players:findFirstChild(speaker.Name).Character.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;give orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Head&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;speaker.Character.Orb.Parent = p&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;morph orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, &quot;ball&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;p.Orb.Shape = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, &quot;block&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;p.Orb.Shape = 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, &quot;cylinder&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;p.Orb.Shape = 2&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;explode orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;e = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;&#9;e.Position = p.Orb.Position&#13;&#10;&#9;&#9;&#9;&#9;e.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;&#9;p.Orb:remove()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;glitch orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil or p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Orb.CFrame = p.Torso.CFrame&#13;&#10;&#9;&#9;&#9;&#9;p.Orb.CanCollide = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;steal orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if (p == nil or speaker.Character:findFirstChild(&quot;Head&quot;)== nil or p:findFirstChild(&quot;Orb&quot;)== nil or speaker.Character:findFirstChild(&quot;Orb&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Orb.Parent = speaker.Character&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;remove orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Orb:remove()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if (string.match(msg, &quot;admin&quot;)) then&#13;&#10;                local players=game.Players:GetChildren()&#13;&#10;                for i=1, #players do&#13;&#10;                        if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Name == speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;Can&apos;t administrate yourself!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = players[i]&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if (checkOkToLetIn(string.lower(players[i].Name))) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = players[i].Name..&quot; is already an admin!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;table.insert(permission, players[i].Name)&#13;&#10;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;message.Text = &quot;You are now an admin!&quot;&#13;&#10;&#9;&#9;&#9;&#9;message.Parent = players[i]&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Character:findFirstChild(&quot;Immortal&quot;)~= nil) then players[i].Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;players[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;                        end&#13;&#10;                end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;        if string.match(msg, &quot;dedmin&quot;) then&#13;&#10;                local players=game.Players:GetChildren()&#13;&#10;                for i=1, #players do&#13;&#10;                        if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;h.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Name == speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;You can&apos;t deadministrate yourself!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;h:remove()&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if (string.lower(players[i].Name) == string.lower(owner)) then &#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;NO DEADMINING, &quot;.. string.upper(owner).. &quot;!!!!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if not checkOkToLetIn(string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = players[i].Name..&quot; isn&apos;t an admin!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;for n = 1, #permission do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (permission[n]==players[i].Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for b = 1, #permission do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (string.lower(permission[b]) == string.lower(players[i].Name)) then table.remove(permission, b) end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;You are now not an admin, &quot;..players[i].Name..&quot; !!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Parent = players[i]&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (players[i].Character:findFirstChild(&quot;Immortal&quot;)~= nil) then players[i].Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;players[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;                                return&#13;&#10;                        end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if (string.match(msg, &quot;ban&quot;)) then&#13;&#10;                local players=game.Players:GetChildren()&#13;&#10;                for i=1, #players do&#13;&#10;                        if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Name == speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;Can&apos;t ban yourself!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if (string.lower(players[i].Name) == string.lower(owner)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Text = &quot;NO BANNING, &quot;.. string.upper(owner).. &quot;!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if checkIfBanned(players[i].Name) == true then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = players[i].Name..&quot; is already banned!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;banify(players[i])&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;                        end&#13;&#10;                end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;admin commands&quot;) then&#13;&#10;&#9;&#9;if (speaker:findFirstChild(&quot;Hint&quot;)~= nil) then speaker.Hint:remove() end&#13;&#10;&#9;&#9;m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;&#9;m.Name = &quot;Hint&quot;&#13;&#10;&#9;&#9;m.Text = &quot;~Admin commands~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Kicky [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;kill [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;2d [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;freeze [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;thaw [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;trip [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;jumpy [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;kick [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;restart [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;land [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ghost [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;unghost [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;summon [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;admin [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;dedmin [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;sit [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;immortal [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;mortal [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;bricky [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;give orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;steal orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;explode orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;glitch orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;morph orb [person] [shape] (ball, block, cylinder)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;remove orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;admin commands (lol)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;anti-message&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;disconnect (crashes server, don&apos;t use)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;die&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ghost&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ghostbusters!&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;orb&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;peoplewhite&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;land&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;2d&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;start&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;cometome&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;randommovement&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;clone&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;freeze&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;jumpy&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ultra jumpy (you won&apos;t come down!)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;freezetwo&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;thaw&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;savagebeating&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;zeekyboogydoog&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;gleeg snag zip (destroys all)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;listen&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;private --sets maxplayers to 1&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;public  --sets maxplayers to 12&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;party!  --sets maxplayers to 20&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;antimessage&quot;) then&#13;&#10;&#9;&#9;local c = game.Workspace:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;&#9;if (c[i].className == &quot;Message&quot; or c[i].className == &quot;Hint&quot;) then c[i].Parent = nil end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;local a = game.Players:GetChildren()&#13;&#10;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;d = a[b]:GetChildren()&#13;&#10;&#9;&#9;&#9;for e = 1, #d do&#13;&#10;&#9;&#9;&#9;&#9;if (d[e].className == &quot;Message&quot; or d[e].className == &quot;Hint&quot;) then d[e].Parent = nil end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;disconnect&quot;) then --Only use in edmergancies.  This disconnects everyone&#13;&#10;&#9;&#9;game:remove()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;die&quot;) then&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;EVERYONE IS GONNA DIE!!!!!!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Immortal&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;ghost&quot;) then --You can walk through stuff =)&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Leg&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Leg&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;ghostbusters!&quot;) then --Change this if you want.&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Leg&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Leg&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;orb&quot;) then&#13;&#10;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Orb&quot;)~= nil or speaker.Character:findFirstChild(&quot;Head&quot;)== nil) then return end&#13;&#10;&#9;&#9;o = Instance.new(&quot;Part&quot;)&#13;&#10;&#9;&#9;o.Shape = 0&#13;&#10;&#9;&#9;o.Name = &quot;Orb&quot;&#13;&#10;&#9;&#9;o.Size = Vector3.new(1,1,1)&#13;&#10;&#9;&#9;o.TopSurface = 0&#13;&#10;&#9;&#9;o.BottomSurface = 0&#13;&#10;&#9;&#9;o.BrickColor = BrickColor.new(26)&#13;&#10;&#9;&#9;o.CanCollide = false&#13;&#10;&#9;&#9;o.Position = speaker.Character.Head.Position&#13;&#10;&#9;&#9;o.Parent = speaker.Character&#13;&#10;&#9;&#9;p = Instance.new(&quot;BodyPosition&quot;)&#13;&#10;&#9;&#9;p.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;p.position = speaker.Character.Head.Position&#13;&#10;&#9;&#9;p.Name = &quot;BodyPosition&quot;&#13;&#10;&#9;&#9;p.Parent = o&#13;&#10;&#9;&#9;s = Instance.new(&quot;Script&quot;)&#13;&#10;&#9;&#9;s.Source = [[&#13;&#10;while true do&#13;&#10;local Head = script.Parent.Parent.Head&#13;&#10;wait(0.1)&#13;&#10;script.Parent.BodyPosition.position = Vector3.new(Head.Position.x, Head.Position.y + 3.5, Head.Position.z)&#13;&#10;end&#13;&#10;&#9;&#9;]]&#13;&#10;&#9;&#9;s.Parent = o&#13;&#10;&#9;&#9;s.Disabled = false&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;peoplewhite&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Head&quot;).BrickColor = BrickColor.new(1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).BrickColor = BrickColor.new(1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).BrickColor = BrickColor.new(1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).BrickColor = BrickColor.new(1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Leg&quot;).BrickColor = BrickColor.new(1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Leg&quot;).BrickColor = BrickColor.new(1)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;land&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = true end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;2d&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.position = Vector3.new(0,0,-30)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(0,0,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = true end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;start&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character == nil or c[i].Character:findFirstChild(&quot;Humanoid&quot;) == nil or c[i].Character:findFirstChild(&quot;Torso&quot;)== nil or c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.position = Vector3.new(0,5,0) --Change these to where you want them to fly to&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = false end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;cometome&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (string.lower(c[i].Name) ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (game.Players:findFirstChild(speaker.Name).Character~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.position = game.Players:findFirstChild(speaker.Name).Character.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = false end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;private&quot;) then game.Players.MaxPlayers = 1 end&#13;&#10;&#9;if (msg == &quot;public&quot;) then game.Players.MaxPlayers = 12 end&#13;&#10;&#9;if (msg == &quot;party!&quot;) then game.Players.MaxPlayers = 20 end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;clone&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (string.lower(c[i].Name) ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character == nil or c[i].Character:findFirstChild(&quot;Humanoid&quot;) == nil or c[i].Character:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Head&quot;)~= nil and speaker.Character:findFirstChild(&quot;Head&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Head&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Head&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil and speaker.Character:findFirstChild(&quot;Torso&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Torso&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Torso&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Left Arm&quot;)~= nil and speaker.Character:findFirstChild(&quot;Left Arm&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Left Arm&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Left Arm&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Right Arm&quot;)~= nil and speaker.Character:findFirstChild(&quot;Right Arm&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Right Arm&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Right Arm&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Left Leg&quot;)~= nil and speaker.Character:findFirstChild(&quot;Left Leg&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Left Leg&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Left Leg&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Right Leg&quot;)~= nil and speaker.Character:findFirstChild(&quot;Right Leg&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Right Leg&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Right Leg&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil and c[i].Character.Torso:findFirstChild(&quot;roblox&quot;)~= nil and speaker.Character:findFirstChild(&quot;Torso&quot;)~= nil and speaker.Character.Torso:findFirstChild(&quot;roblox&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Torso&quot;):findFirstChild(&quot;roblox&quot;).Texture=speaker.Character:findFirstChild(&quot;Torso&quot;):findFirstChild(&quot;roblox&quot;).Texture end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;freeze&quot;) then --This freezes everyone&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Anchored = true&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;jumpy&quot;) then --Boing!&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Velocity=Vector3.new(0,200,0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;ultra jumpy&quot;) then --You will go up, but you will NEVER come down...&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Velocity=Vector3.new(0,10000,0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;freezetwo&quot;) then --This freezes you as well&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Anchored = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;thaw&quot;) then --This unfreezes everyone&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Anchored = false&#13;&#10;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if (msg == &quot;savagebeating&quot;) then --You may want to change&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;OH NO!  INVISIBLE MONKEYS ARE GOING TO HURT YOU!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Humanoid.Health = 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;zeeky boogy doog&quot;) then&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;RANDOM PEOPLE ARE SAYING ZEEKY BOOGY DOOG!!!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#9;&#9;for i=1,100 do&#13;&#10;&#9;&#9;&#9;local x = math.random(-256,256),math.random(-256,256)&#13;&#10;&#9;&#9;&#9;local y = math.random(0,157)&#13;&#10;&#9;&#9;&#9;local z = math.random(-256,256)&#13;&#10;&#13;&#10;&#9;&#9;&#9;local r = math.random(6,16)&#13;&#10;&#13;&#10;&#9;&#9;&#9;local ex = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;ex.Position = Vector3.new(x,y,z)&#13;&#10;&#9;&#9;&#9;ex.BlastRadius = r&#13;&#10;&#9;&#9;&#9;ex.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;wait(.05)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;gleeg snag zip&quot;) then&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;) --Change the position of the explosion for mass destruction!&#13;&#10;&#9;&#9;m.Text = &quot;THIS LEVEL HAS 4 SECONDS TO LIVE!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#13;&#10;&#9;&#9;local ex1 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex1.Position = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;ex1.BlastRadius = 100&#13;&#10;&#9;&#9;ex1.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex2 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex2.Position = Vector3.new(0,0,150)&#13;&#10;&#9;&#9;ex2.BlastRadius = 100&#13;&#10;&#9;&#9;ex2.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex3 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex3.Position = Vector3.new(0,0,-150)&#13;&#10;&#9;&#9;ex3.BlastRadius = 100&#13;&#10;&#9;&#9;ex3.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex4 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex4.Position = Vector3.new(150,0,0)&#13;&#10;&#9;&#9;ex4.BlastRadius = 100&#13;&#10;&#9;&#9;ex4.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex5 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex5.Position = Vector3.new(-150,0,0)&#13;&#10;&#9;&#9;ex5.BlastRadius = 100&#13;&#10;&#9;&#9;ex5.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex6 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex6.Position = Vector3.new(150,0,150)&#13;&#10;&#9;&#9;ex6.BlastRadius = 100&#13;&#10;&#9;&#9;ex6.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex7 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex7.Position = Vector3.new(-150,0,-150)&#13;&#10;&#9;&#9;ex7.BlastRadius = 100&#13;&#10;&#9;&#9;ex7.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex8 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex8.Position = Vector3.new(-150,0,150)&#13;&#10;&#9;&#9;ex8.BlastRadius = 100&#13;&#10;&#9;&#9;ex8.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex9 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex9.Position = Vector3.new(150,0,-150)&#13;&#10;&#9;&#9;ex9.BlastRadius = 100&#13;&#10;&#9;&#9;ex9.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;listen&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;EVERYONE STOP TALKING AND LISTEN TO &quot;.. string.upper(speaker.Name).. &quot;!!!!!!!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;0:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(215,214,223)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(197,197,197)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(122,140,120)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function onPlayerEntered(newPlayer)&#13;&#10;&#9;newPlayer.Chatted:connect(function(msg, recipient) onChatted(msg, recipient, newPlayer) end) &#13;&#10;&#9;newPlayer.Changed:connect(function (property)&#13;&#10;&#9;&#9;if (property == &quot;Character&quot;) then&#13;&#10;&#9;&#9;&#9;onPlayerRespawned(newPlayer)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end)&#13;&#10;end&#13;&#10;&#13;&#10;game.Players.ChildAdded:connect(onPlayerEntered)&#13;&#10;&#13;&#10;--[[&#9;&#9;&#9;&#9;&#9;&#9;CREDITS&#13;&#10;Brandonhare -- For adding loads of commands to this&#13;&#10;SonOfSevenless -- For making the original commands script&#13;&#10;Anaminus -- For teaching me (by his scripts) how to make it only happen to a single person, and the immortality script.&#13;&#10;Clockwork -- For his Avada kadavra! tool which taught me how to change the colour with a script (and for bringing on the teapot age)&#13;&#10;Gamer3D -- For insperation&#13;&#10;Admins -- For adding the Test feature with the output window so I can debug this (and for making roblox XD)&#13;&#10;Miked -- I copied bits from his scripts into this.&#13;&#10;People who I forgot to add to the credits -- For things that I forgot XD&#13;&#10;Many other people -- For insparation, ideas, reporting bugs, letting me experement on them, etc.&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Please don&apos;t delete the credits....&#13;&#10;--------------------------------------------------&#13;&#10;----------------Brandonhare------------------&#13;&#10;--------------------------------------------------]]</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX15">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">commands</string>
				<string name="Source">&#13;&#10;----------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;---------------------------------------------------------brandonhare---------------------------------------------------------------&#13;&#10;----------------------------------------------------------------------------------------------------------------------------------------&#13;&#10;print(&quot;bigbrainkid&apos;s commands script loaded succsessfully!&quot;)&#13;&#10;&#13;&#10;permission = { &quot;hihi&quot;, &quot;diana75&quot;, &quot;daygreen7&quot;,&quot;slayer9635&quot;,&quot;Defang&quot;,&quot;Dfang&quot;,&quot;Davidman&quot;,&quot;Masupups&quot; } --Add admins or take away here.&#13;&#10;owner = &quot;hihi&quot; --this is the owner&#13;&#10;ban = {&quot;LinkinParker2&quot; } --Put people you want to ban in here.  (I put this in because ban scripts break commands scripts).&#13;&#10;regen = { } --dont think it works --&#13;&#10;local stuff = game.Workspace:GetChildren()&#13;&#10;for i = 1, #stuff do&#13;&#10;&#9;if (stuff[i].className == &quot;Model&quot;) then&#13;&#10;&#9;&#9;table.insert(regen, stuff[i]:clone())&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function checkOkToLetIn(name) --Check for admins&#13;&#10;&#9;for i = 1,#permission do&#13;&#10;&#9;&#9;if (string.upper(name) == string.upper(permission[i])) then return true end&#13;&#10;&#9;end&#13;&#10;&#9;return false&#13;&#10;end&#13;&#10;&#13;&#10;function banify(player) --Ban people!&#13;&#10;&#9;if (#ban ~= 0) then&#13;&#10;&#9;&#9;for i = 1, #ban do&#13;&#10;&#9;&#9;&#9;if (string.lower(ban[i]) == string.lower(player.Name)) then return end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;table.insert(ban, string.lower(player.Name))&#13;&#10;&#9;message = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;message.Name = &quot;Hint&quot;&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE BANNED IN 3&quot;&#13;&#10;&#9;message.Parent = game.Workspace&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE BANNED IN 2&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE BANNED IN 1&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message:remove()&#13;&#10;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;message.Parent = player&#13;&#10;&#9;c = player.Backpack:GetChildren()&#13;&#10;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;c[i]:remove()&#13;&#10;&#9;end&#13;&#10;&#9;message.Text = &quot;You have been banned &quot;..player.Name..&quot;... Even if you come back in you&apos;ll be banned again.&quot;&#13;&#10;&#9;player.Character.Parent = nil&#13;&#10;&#9;player.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function kicky(player) --Kick people!&#13;&#10;&#9;message = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;message.Name = &quot;Hint&quot;&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE KICKED IN 3&quot;&#13;&#10;&#9;message.Parent = game.Workspace&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE KICKED IN 2&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message.Text = player.Name..&quot; WILL BE KICKED IN 1&quot;&#13;&#10;&#9;wait(1)&#13;&#10;&#9;message:remove()&#13;&#10;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;message.Parent = player&#13;&#10;&#9;message.Text = &quot;Nobody can hear you now &quot;..player.Name..&quot;...  Go away.&quot;&#13;&#10;&#9;c = player.Backpack:GetChildren()&#13;&#10;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;c[i]:remove()&#13;&#10;&#9;end&#13;&#10;&#9;player.Character.Parent = nil&#13;&#10;&#9;player.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function checkIfBanned(name) --NO PLACE FOR YOU!!!&#13;&#10;&#9;if (#ban == 0) then return false end&#13;&#10;&#9;for i = 1, #ban do&#13;&#10;&#9;&#9;if (string.upper(name) == string.upper(ban[i])) then return true end&#13;&#10;&#9;end&#13;&#10;&#9;return false&#13;&#10;end&#13;&#10;&#13;&#10;function onPlayerRespawned(newPlayer) --Give admins weps, and put a bodyposition in them.&#13;&#10;&#9;if checkIfBanned(newPlayer.Name) then --If the person is banned then NO PLACE FOR THEM!&#13;&#10;&#9;&#9;while true do&#13;&#10;&#9;&#9;&#9;wait(1)&#13;&#10;&#9;&#9;&#9;if (newPlayer.Character ~= nil) then break end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;c = newPlayer.Backpack:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do --So they can&apos;t use tools when they&apos;re banned.&#13;&#10;&#9;&#9;&#9;c[i]:remove()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;newPlayer:remove() --Bye bye person!&#13;&#10;&#9;end&#13;&#10;&#9;while true do --Don&apos;t crash&#13;&#10;&#9;&#9;wait(1)&#13;&#10;&#9;&#9;if (newPlayer.Character~= nil) then break end&#13;&#10;&#9;end&#13;&#10;&#9;pos = Instance.new(&quot;BodyPosition&quot;) --So you can move people around!&#13;&#10;&#9;pos.maxForce = Vector3.new(0,0,0)&#13;&#10;&#9;pos.Parent = newPlayer.Character.Torso&#13;&#10;&#9;local m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;m.Name = &quot;Hint&quot;&#13;&#10;&#9;m.Text = &quot;Say commands for commands&quot;&#13;&#10;&#9;m.Parent = newPlayer&#13;&#10;&#9;if  checkOkToLetIn(newPlayer.Name) then&#13;&#10;&#9;&#9;m.Text = &quot;Say commands for commands and say admin commands for admin commands&quot;&#13;&#10;&#9;&#9;newPlayer.Character.Humanoid.MaxHealth = 100000 --Did I mention lots of health?&#13;&#10;&#9;&#9;newPlayer.Character.Humanoid.Health = 100000&#13;&#10;&#9;&#9;s = Instance.new(&quot;Script&quot;)--No dying!&#13;&#10;&#9;&#9;s.Source = [[&#13;&#10;while true do&#13;&#10;&#9;wait(1)&#13;&#10;&#9;script.Parent.Humanoid.Health = script.Parent.Humanoid.Health + 1000&#13;&#10;end&#13;&#10;&#9;&#9;]]&#13;&#10;&#9;&#9;s.Parent = newPlayer.Character&#13;&#10;&#9;&#9;s.Disabled = false&#13;&#10;&#9;&#9;c = game.Lighting:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;&#9;if (c[i].className == &quot;HopperBin&quot; or c[i].className == &quot;Tool&quot;) then --Any tools in the lighting get given to them.&#13;&#10;&#9;&#9;&#9;&#9;c[i]:clone().Parent = newPlayer.Backpack&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;wait(3)&#13;&#10;&#9;m.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function onChatted(msg, recipient, speaker)&#13;&#10;&#13;&#10;&#9;--Don&apos;t write the commands with any capitals or it won&apos;t work.&#13;&#10;&#13;&#10;&#9;local source = string.lower(speaker.Name)&#13;&#10;&#9;msg = string.lower(msg)&#13;&#10;&#13;&#10;&#9;if (msg == &quot;day&quot;) then game.Lighting.TimeOfDay = &quot;14:00:00&quot; end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;night&quot;) then game.Lighting.TimeOfDay = &quot;00:00:00&quot; end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;commands&quot;) then&#13;&#10;&#9;&#9;if (speaker:findFirstChild(&quot;Hint&quot;)~= nil) then speaker.Hint:remove() end&#13;&#10;&#9;&#9;m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;&#9;m.Name = &quot;Hint&quot;&#13;&#10;&#9;&#9;m.Text = &quot;~Commands~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Time: day&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Time: night&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: normal&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: neon&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: red&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: yellow&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: green&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: blue&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: black&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: white&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: betaish&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Colour: disco&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: suicide&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: no messages&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: commands&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: admins&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: banned&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Other: regen&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;Admin only: admin commands&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;regen&quot;) then&#13;&#10;&#9;&#9;if (#regen == 0 or oktoregen == false) then return end&#13;&#10;&#9;&#9;oktoregen = false&#13;&#10;&#9;&#9;m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;Starting to regen&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;stuff = game.Workspace:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #stuff do&#13;&#10;&#9;&#9;&#9;for o = 1, #regen do&#13;&#10;&#9;&#9;&#9;&#9;if (stuff[i].Name == regen[o].Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait()&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Text = &quot;Removing &quot;..stuff[i].Name..&quot;...&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;stuff[i]:remove()&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;for i = 1, #regen do&#13;&#10;&#9;&#9;&#9;wait()&#13;&#10;&#9;&#9;&#9;thing = regen[i]:clone()&#13;&#10;&#9;&#9;&#9;m.Text = &quot;Regenerating &quot;..thing.Name..&quot;...&quot;&#13;&#10;&#9;&#9;&#9;thing.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;thing:makeJoints()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Text = &quot;Completed regen&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m:remove()&#13;&#10;&#9;&#9;oktoregen = true&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;admins&quot;) then&#13;&#10;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;~Admins~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;for i = 1, #permission do&#9;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = permission[i]&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;banned&quot;) then&#13;&#10;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;~Bans~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;if (#ban == 0) then&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = &quot;NO BANNED PEOPLE&quot;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Parent = nil&#9;&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;for i = 1, #ban do&#9;&#13;&#10;&#9;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;&#9;m.Text = ban[i]&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;normal&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;0:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(122, 255, 120)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;neon&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,255,255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,255,255)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,255,255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,255,255)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;red&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;yellow&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;green&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,255,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,255,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;blue&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,0,255)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,0,255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,0,255)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;black&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;00:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;betaish&quot;) then&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;00:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;white&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,255)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(255,255,255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,255)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;disco&quot;) then&#13;&#10;&#9;&#9;for a = 1, 20 do&#13;&#10;&#9;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;&#9;game.Lighting.ClearColor = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(math.random(0,255),math.random(0,255),math.random(0,255))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;0:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255, 255, 255)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(122, 255, 120)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;suicide&quot;) then&#13;&#10;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;no messages&quot;) then&#13;&#10;&#9;&#9;c = speaker:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;&#9;if (c[i].className == &quot;Message&quot; or c[i].className == &quot;Hint&quot;) then c[i]:remove() end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (checkOkToLetIn(source)) then --[[&#9;If you want all the commands to be admin only then move this line before the first command.&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;If you want ALL the commands to be avalible for everyone then remove this line. --]]&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;kill&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Immortal&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;unlock&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].Locked = false end&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Hat&quot;) then c[o].Handle.Locked = false end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;lock&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].Locked = true end&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Hat&quot;) then c[o].Handle.Locked = true end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;explode&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if (p==nil or p:findFirstChild(&quot;Torso&quot;)==nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;e = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;&#9;e.Position = p.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;e.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;2d&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.position = Vector3.new(0,0,-30)&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(0,0,1e+006)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;freeze&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.Anchored = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;sit&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;s = Instance.new(&quot;Seat&quot;)&#13;&#10;&#9;&#9;&#9;&#9;s.Position = p.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;s.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;s.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;s.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;s.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;&#9;wait()&#13;&#10;&#9;&#9;&#9;&#9;s.Parent = nil&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;thaw&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.Anchored = false&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;immortal&quot;) then --Big credit to Anaminus for this one!&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (game.Players:findFirstChild(players[i].Name)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;local p = game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;local h = p:findFirstChild(&quot;Humanoid&quot;)&#13;&#10;&#9;&#9;&#9;&#9;if (p==nil or h == nil or p:findFirstChild(&quot;Immortal&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;local health = h.Health&#13;&#10;&#9;&#9;&#9;&#9;local maxhealth = h.MaxHealth&#13;&#10;&#9;&#9;&#9;&#9;local s = Instance.new(&quot;Script&quot;)&#13;&#10;&#9;&#9;&#9;&#9;s.Name =&quot;Immortal&quot;&#13;&#10;&#9;&#9;&#9;&#9;s.Source = [[&#13;&#10;print(&quot;Invunerable&quot;)&#13;&#10;local character = script.Parent&#13;&#10;&#13;&#10;function Save(object, match, copy, parent)&#13;&#10;&#9;if character == nil then return end&#13;&#10;&#9;local animate = character.Animate&#13;&#10;&#9;cani = animate:Clone()&#13;&#10;&#9;if object == match then&#13;&#10;&#9;&#9;copy.Parent = parent&#13;&#10;&#9;&#9;parent.ChildRemoved:connect(function(property) Save(property, copy, copy:Clone(), parent) end)&#13;&#10;&#9;&#9;animate.Parent = nil&#13;&#10;&#9;&#9;cani.Parent = character&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;-- Save Joints! --&#13;&#10;local head = character:FindFirstChild(&quot;Head&quot;)&#13;&#10;if head~=nil then&#13;&#10;&#9;local weld = head:FindFirstChild(&quot;HeadWeld&quot;)&#13;&#10;&#9;if weld~=nil then &#13;&#10;&#9;&#9;local Cweld = weld:Clone()&#13;&#10;&#9;&#9;head.ChildRemoved:connect(function(property) Save(property, weld, Cweld, head) end)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;local torso = character:FindFirstChild(&quot;Torso&quot;)&#13;&#10;if torso~=nil then&#13;&#10;&#9;local neck = torso:FindFirstChild(&quot;Neck&quot;)&#13;&#10;&#9;if neck~=nil then&#13;&#10;&#9;&#9;local Cneck = neck:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, neck, Cneck, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local lhip = torso:FindFirstChild(&quot;Left Hip&quot;)&#13;&#10;&#9;if lhip~=nil then&#13;&#10;&#9;&#9;local Clhip = lhip:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, lhip, Clhip, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local rhip = torso:FindFirstChild(&quot;Right Hip&quot;)&#13;&#10;&#9;if rhip~=nil then&#13;&#10;&#9;&#9;local Crhip = rhip:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, rhip, Crhip, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local lsho = torso:FindFirstChild(&quot;Left Shoulder&quot;)&#13;&#10;&#9;if lsho~=nil then&#13;&#10;&#9;&#9;local Clsho = lsho:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, lsho, Clsho, torso) end)&#13;&#10;&#9;end&#13;&#10;&#9;local rsho = torso:FindFirstChild(&quot;Right Shoulder&quot;)&#13;&#10;&#9;if rsho~=nil then&#13;&#10;&#9;&#9;local Crsho = rsho:Clone()&#13;&#10;&#9;&#9;torso.ChildRemoved:connect(function(property) Save(property, rsho, Crsho, torso) end)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;---------------------&#13;&#10;&#13;&#10;local h = character:FindFirstChild(&quot;Humanoid&quot;)&#13;&#10;if h~=nil then&#13;&#10;&#9;h.MaxHealth = (2^30)&#13;&#10;&#9;h.Health = (2^30)&#13;&#10;end&#13;&#10;function healthChanged(property)&#13;&#10;&#9;if property == &quot;Health&quot; then&#13;&#10;&#9;&#9;character.Humanoid.Health = (2^30)&#13;&#10;&#9;elseif property == &quot;MaxHealth&quot; then&#13;&#10;&#9;&#9;character.Humanoid.MaxHealth = (2^30)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;function onChanged(property)&#13;&#10;&#9;if property.className == &quot;Hat&quot; then&#13;&#10;&#9;&#9;wait()&#13;&#10;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)&#13;&#10;&#9;&#9;if head~=nil then&#13;&#10;&#9;&#9;&#9;local weld = head:FindFirstChild(&quot;HeadWeld&quot;)&#13;&#10;&#9;&#9;&#9;if weld~=nil then &#13;&#10;&#9;&#9;&#9;&#9;local Cweld = weld:Clone()&#13;&#10;&#9;&#9;&#9;&#9;head.ChildRemoved:connect(function(property) Save(property, weld, Cweld, head) end)&#13;&#10;&#9;&#9;&#9;&#9;print(&quot;Hat Success&quot;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;character.ChildAdded:connect(onChanged)&#13;&#10;character.Humanoid.Changed:connect(healthChanged)&#13;&#10;]]&#13;&#10;&#9;&#9;&#9;&#9;s.Parent = p&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;mortal&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Character== nil or players[i].Character:findFirstChild(&quot;Immortal&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;players[i].Character.Immortal:remove()&#9;&#13;&#10;&#9;&#9;&#9;&#9;players[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;bricky&quot;) then&#13;&#10;&#9;&#9;local players = game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;p = players[i].Character&#13;&#10;&#9;&#9;&#9;&#9;if (p == nil or p:findFirstChild(&quot;Torso&quot;)== nil or p:findFirstChild(&quot;Head&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;t = p.Torso&#13;&#10;&#9;&#9;&#9;&#9;h = p.Head&#13;&#10;&#9;&#9;&#9;&#9;pos = t.Position&#13;&#10;&#9;&#9;&#9;&#9;g = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for u = 1, #g do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (g[u].className == &quot;Hat&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e.Position = g[u].Handle.Position&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e.BlastPressure = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;e.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;g[u]:remove()&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;p:breakJoints()&#13;&#10;&#9;&#9;&#9;&#9;t.formFactor = 2&#13;&#10;&#9;&#9;&#9;&#9;t.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;t.CFrame = CFrame.new(pos)&#13;&#10;&#9;&#9;&#9;&#9;h.formFactor = 2&#13;&#10;&#9;&#9;&#9;&#9;h.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;if (h:findFirstChild(&quot;Mesh&quot;)~= nil) then h.Mesh:remove() end&#13;&#10;&#9;&#9;&#9;&#9;h.CFrame = CFrame.new(t.Position.x,t.Position.y + 0.4,t.Position.z)&#13;&#10;&#9;&#9;&#9;&#9;rarm = p:findFirstChild(&quot;Right Arm&quot;)&#13;&#10;&#9;&#9;&#9;&#9;rarm.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rarm.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rarm.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;rarm.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;rarm.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;larm = p:findFirstChild(&quot;Left Arm&quot;)&#13;&#10;&#9;&#9;&#9;&#9;larm.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;larm.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;larm.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;larm.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;larm.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;rLeg = p:findFirstChild(&quot;Right Leg&quot;)&#13;&#10;&#9;&#9;&#9;&#9;rLeg.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rLeg.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;rLeg.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;rLeg.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;rLeg.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;lLeg = p:findFirstChild(&quot;Left Leg&quot;)&#13;&#10;&#9;&#9;&#9;&#9;lLeg.Size = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;lLeg.CFrame = CFrame.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;lLeg.Anchored = true&#13;&#10;&#9;&#9;&#9;&#9;lLeg.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;lLeg.Transparency = 1&#13;&#10;&#9;&#9;&#9;&#9;p:makeJoints()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;trip&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)~= nil) then p.Torso.RotVelocity = Vector3.new(0,0,200) end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;jumpy&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.Velocity = Vector3.new(0,500,0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;kick&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name)&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (string.lower(players[i].Name)== string.lower(owner)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Text = &quot;NO KICKING &quot;.. string.upper(owner).. &quot;!!!!!!!!!!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;kicky(players[i])&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;restart&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.position = Vector3.new(0,5,0) --Change these numbers to where you want them to fly to!&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].CanCollide = false end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;land&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then c[o].CanCollide = true end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;ghost&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;unghost&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;invisible&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;c[o].Transparency = 10&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;summon&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (game.Players:findFirstChild(speaker.Name).Character== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.position = game.Players:findFirstChild(speaker.Name).Character.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;p.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;c = p:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;for o = 1, #c do&#13;&#10;&#9;&#9;&#9;&#9;if (c[o].className == &quot;Part&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[o].CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;give orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Head&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;speaker.Character.Orb.Parent = p&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;morph orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, &quot;ball&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;p.Orb.Shape = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, &quot;block&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;p.Orb.Shape = 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if string.match(msg, &quot;cylinder&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;p.Orb.Shape = 2&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;explode orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;e = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;&#9;e.Position = p.Orb.Position&#13;&#10;&#9;&#9;&#9;&#9;e.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;&#9;p.Orb:remove()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;glitch orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil or p:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Orb.CFrame = p.Torso.CFrame&#13;&#10;&#9;&#9;&#9;&#9;p.Orb.CanCollide = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;steal orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if (p == nil or speaker.Character:findFirstChild(&quot;Head&quot;)== nil or p:findFirstChild(&quot;Orb&quot;)== nil or speaker.Character:findFirstChild(&quot;Orb&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Orb.Parent = speaker.Character&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if string.match(msg, &quot;remove orb&quot;) then&#13;&#10;&#9;&#9;local players=game.Players:GetChildren()&#13;&#10;&#9;&#9;for i=1, #players do&#13;&#10;&#9;&#9;&#9;if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;local p=game.Players:findFirstChild(players[i].Name).Character&#13;&#10;&#9;&#9;&#9;&#9;if p==nil then return end&#13;&#10;&#9;&#9;&#9;&#9;if (p:findFirstChild(&quot;Orb&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;p.Orb:remove()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if (string.match(msg, &quot;admin&quot;)) then&#13;&#10;                local players=game.Players:GetChildren()&#13;&#10;                for i=1, #players do&#13;&#10;                        if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Name == speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;Can&apos;t administrate yourself!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = players[i]&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if (checkOkToLetIn(string.lower(players[i].Name))) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = players[i].Name..&quot; is already an admin!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;table.insert(permission, players[i].Name)&#13;&#10;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;message.Text = &quot;You are now an admin!&quot;&#13;&#10;&#9;&#9;&#9;&#9;message.Parent = players[i]&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Character:findFirstChild(&quot;Immortal&quot;)~= nil) then players[i].Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;players[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;                        end&#13;&#10;                end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;        if string.match(msg, &quot;dedmin&quot;) then&#13;&#10;                local players=game.Players:GetChildren()&#13;&#10;                for i=1, #players do&#13;&#10;                        if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;h.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Name == speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;You can&apos;t deadministrate yourself!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;h:remove()&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if (string.lower(players[i].Name) == string.lower(owner)) then &#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;NO DEADMINING &quot;.. string.upper(owner).. &quot;!!!!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if not checkOkToLetIn(string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = players[i].Name..&quot; isn&apos;t an admin!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;for n = 1, #permission do&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (permission[n]==players[i].Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for b = 1, #permission do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (string.lower(permission[b]) == string.lower(players[i].Name)) then table.remove(permission, b) end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;You are now not an admin, &quot;..players[i].Name..&quot; !!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Parent = players[i]&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (players[i].Character:findFirstChild(&quot;Immortal&quot;)~= nil) then players[i].Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;players[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;                                return&#13;&#10;                        end&#13;&#10;                end&#13;&#10;        end&#13;&#10;&#13;&#10;&#9;if (string.match(msg, &quot;ban&quot;)) then&#13;&#10;                local players=game.Players:GetChildren()&#13;&#10;                for i=1, #players do&#13;&#10;                        if string.match(msg, string.lower(players[i].Name)) then&#13;&#10;&#9;&#9;&#9;&#9;if (players[i].Name == speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = &quot;Can&apos;t ban yourself!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if (string.lower(players[i].Name) == string.lower(owner)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Text = &quot;NO BANNING &quot;.. string.upper(owner).. &quot;!!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Immortal&quot;)~= nil) then speaker.Character.Immortal:remove() end&#13;&#10;&#9;&#9;&#9;&#9;&#9;speaker.Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;m.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;if checkIfBanned(players[i].Name) == true then&#13;&#10;&#9;&#9;&#9;&#9;&#9;message = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Name = &quot;Message&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Text = players[i].Name..&quot; is already banned!&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = speaker&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;message.Parent = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;banify(players[i])&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;                        end&#13;&#10;                end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;admin commands&quot;) then&#13;&#10;&#9;&#9;if (speaker:findFirstChild(&quot;Hint&quot;)~= nil) then speaker.Hint:remove() end&#13;&#10;&#9;&#9;m = Instance.new(&quot;Hint&quot;)&#13;&#10;&#9;&#9;m.Name = &quot;Hint&quot;&#13;&#10;&#9;&#9;m.Text = &quot;~Admin commands~&quot;&#13;&#10;&#9;&#9;m.Parent = speaker&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;kill [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;2d [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;freeze [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;thaw [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;trip [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;jumpy [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;kick [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;restart [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;land [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ghost [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;unghost [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;invisible[person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;summon [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;admin [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;dedmin [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;sit [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;immortal [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;mortal [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;bricky [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;give orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;steal orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;explode orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;glitch orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;morph orb [person] [shape] (ball, block, cylinder)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;remove orb [person]&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;admin commands (lol)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;anti-message&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;disconnect (crashes server, don&apos;t use)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;die&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ghost&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ghostbusters!&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;orb&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;peoplewhite&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;land&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;2d&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;start&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;cometome&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;randommovement&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;clone&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;freeze&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;jumpy&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;ultra jumpy (you won&apos;t come down!)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;freezetwo&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;thaw&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;savagebeating&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;zeekyboogydoog&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;gleeg snag zip (destroys all)&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;listen&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;private --sets maxplayers to 1&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;public  --sets maxplayers to 12&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;party!  --sets maxplayers to 20&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Text = &quot;~End~&quot;&#13;&#10;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;antimessage&quot;) then&#13;&#10;&#9;&#9;local c = game.Workspace:GetChildren()&#13;&#10;&#9;&#9;for i = 1, #c do&#13;&#10;&#9;&#9;&#9;if (c[i].className == &quot;Message&quot; or c[i].className == &quot;Hint&quot;) then c[i].Parent = nil end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;local a = game.Players:GetChildren()&#13;&#10;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;d = a[b]:GetChildren()&#13;&#10;&#9;&#9;&#9;for e = 1, #d do&#13;&#10;&#9;&#9;&#9;&#9;if (d[e].className == &quot;Message&quot; or d[e].className == &quot;Hint&quot;) then d[e].Parent = nil end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;disconnect&quot;) then --Only use in edmergancies.  This disconnects everyone&#13;&#10;&#9;&#9;game:remove()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;die&quot;) then&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;EVERYONE IS GONNA DIE!!!!!!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Immortal&quot;)~= nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Humanoid.Health = 0&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;ghost&quot;) then --You can walk through stuff =)&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).CanCollide = false&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Leg&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Leg&quot;).Transparency = 0.5&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;ghostbusters!&quot;) then --Change this if you want.&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Torso.Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character.Head.Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).CanCollide = true&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Leg&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Leg&quot;).Transparency = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;orb&quot;) then&#13;&#10;&#9;&#9;if (speaker.Character:findFirstChild(&quot;Orb&quot;)~= nil or speaker.Character:findFirstChild(&quot;Head&quot;)== nil) then return end&#13;&#10;&#9;&#9;o = Instance.new(&quot;Part&quot;)&#13;&#10;&#9;&#9;o.Shape = 0&#13;&#10;&#9;&#9;o.Name = &quot;Orb&quot;&#13;&#10;&#9;&#9;o.Size = Vector3.new(1,1,1)&#13;&#10;&#9;&#9;o.TopSurface = 0&#13;&#10;&#9;&#9;o.BottomSurface = 0&#13;&#10;&#9;&#9;o.BrickColor = BrickColor.new(26)&#13;&#10;&#9;&#9;o.CanCollide = false&#13;&#10;&#9;&#9;o.Position = speaker.Character.Head.Position&#13;&#10;&#9;&#9;o.Parent = speaker.Character&#13;&#10;&#9;&#9;p = Instance.new(&quot;BodyPosition&quot;)&#13;&#10;&#9;&#9;p.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;p.position = speaker.Character.Head.Position&#13;&#10;&#9;&#9;p.Name = &quot;BodyPosition&quot;&#13;&#10;&#9;&#9;p.Parent = o&#13;&#10;&#9;&#9;s = Instance.new(&quot;Script&quot;)&#13;&#10;&#9;&#9;s.Source = [[&#13;&#10;while true do&#13;&#10;local Head = script.Parent.Parent.Head&#13;&#10;wait(0.1)&#13;&#10;script.Parent.BodyPosition.position = Vector3.new(Head.Position.x, Head.Position.y + 3.5, Head.Position.z)&#13;&#10;end&#13;&#10;&#9;&#9;]]&#13;&#10;&#9;&#9;s.Parent = o&#13;&#10;&#9;&#9;s.Disabled = false&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;peopleblack&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Head&quot;).BrickColor = BrickColor.new(0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).BrickColor = BrickColor.new(0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Arm&quot;).BrickColor = BrickColor.new(0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Arm&quot;).BrickColor = BrickColor.new(0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Left Leg&quot;).BrickColor = BrickColor.new(0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Right Leg&quot;).BrickColor = BrickColor.new(0)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;land&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = true end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;2d&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.position = Vector3.new(0,0,-30)&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(0,0,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = true end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;start&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character == nil or c[i].Character:findFirstChild(&quot;Humanoid&quot;) == nil or c[i].Character:findFirstChild(&quot;Torso&quot;)== nil or c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.position = Vector3.new(0,5,0) --Change these to where you want them to fly to&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = false end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;cometome&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (string.lower(c[i].Name) ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (c[i].Character.Torso:findFirstChild(&quot;BodyPosition&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (game.Players:findFirstChild(speaker.Name).Character~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.position = game.Players:findFirstChild(speaker.Name).Character.Torso.Position&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;c[i].Character.Torso.BodyPosition.maxForce = Vector3.new(1e+006,1e+006,1e+006)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;a = c[i].Character:GetChildren()&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for b = 1, #a do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (a[b].className == &quot;Part&quot;) then a[b].CanCollide = false end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;private&quot;) then game.Players.MaxPlayers = 1 end&#13;&#10;&#9;if (msg == &quot;public&quot;) then game.Players.MaxPlayers = 12 end&#13;&#10;&#9;if (msg == &quot;party!&quot;) then game.Players.MaxPlayers = 20 end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;clone&quot;) then&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (string.lower(c[i].Name) ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character == nil or c[i].Character:findFirstChild(&quot;Humanoid&quot;) == nil or c[i].Character:findFirstChild(&quot;Torso&quot;)== nil) then return end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Head&quot;)~= nil and speaker.Character:findFirstChild(&quot;Head&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Head&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Head&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil and speaker.Character:findFirstChild(&quot;Torso&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Torso&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Torso&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Left Arm&quot;)~= nil and speaker.Character:findFirstChild(&quot;Left Arm&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Left Arm&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Left Arm&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Right Arm&quot;)~= nil and speaker.Character:findFirstChild(&quot;Right Arm&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Right Arm&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Right Arm&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Left Leg&quot;)~= nil and speaker.Character:findFirstChild(&quot;Left Leg&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Left Leg&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Left Leg&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Right Leg&quot;)~= nil and speaker.Character:findFirstChild(&quot;Right Leg&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Right Leg&quot;).BrickColor = speaker.Character:findFirstChild(&quot;Right Leg&quot;).BrickColor end&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil and c[i].Character.Torso:findFirstChild(&quot;roblox&quot;)~= nil and speaker.Character:findFirstChild(&quot;Torso&quot;)~= nil and speaker.Character.Torso:findFirstChild(&quot;roblox&quot;)~= nil) then c[i].Character:findFirstChild(&quot;Torso&quot;):findFirstChild(&quot;roblox&quot;).Texture=speaker.Character:findFirstChild(&quot;Torso&quot;):findFirstChild(&quot;roblox&quot;).Texture end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;freeze&quot;) then --This freezes everyone&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Anchored = true&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;jumpy&quot;) then --Boing!&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Velocity=Vector3.new(0,200,0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;ultra jumpy&quot;) then --You will go up, but you will NEVER come down...&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Velocity=Vector3.new(0,10000,0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;freezetwo&quot;) then --This freezes you as well&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Anchored = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;thaw&quot;) then --This unfreezes everyone&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character:findFirstChild(&quot;Torso&quot;).Anchored = false&#13;&#10;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if (msg == &quot;savagebeating&quot;) then --You may want to change&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;OH NO!  INVISIBLE MONKEYS ARE GOING TO HURT YOU!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#9;&#9;local c = game.Players:children()&#13;&#10;&#9;&#9;for i=1,#c do&#13;&#10;&#9;&#9;&#9;if (c[i].Name ~= speaker.Name) then&#13;&#10;&#9;&#9;&#9;&#9;if (c[i].Character ~= nil and c[i].Character:findFirstChild(&quot;Humanoid&quot;) ~= nil and c[i].Character:findFirstChild(&quot;Torso&quot;)~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;c[i].Character.Humanoid.Health = 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;wait(2)&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;zeeky boogy doog&quot;) then&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;RANDOM PEOPLE ARE SAYING ZEEKY BOOGY DOOG!!!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#9;&#9;for i=1,100 do&#13;&#10;&#9;&#9;&#9;local x = math.random(-256,256),math.random(-256,256)&#13;&#10;&#9;&#9;&#9;local y = math.random(0,157)&#13;&#10;&#9;&#9;&#9;local z = math.random(-256,256)&#13;&#10;&#13;&#10;&#9;&#9;&#9;local r = math.random(6,16)&#13;&#10;&#13;&#10;&#9;&#9;&#9;local ex = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;&#9;ex.Position = Vector3.new(x,y,z)&#13;&#10;&#9;&#9;&#9;ex.BlastRadius = r&#13;&#10;&#9;&#9;&#9;ex.Parent = game.Workspace&#13;&#10;&#9;&#9;&#9;wait(.05)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;gleeg snag zip&quot;) then&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;) --Change the position of the explosion for mass destruction!&#13;&#10;&#9;&#9;m.Text = &quot;THIS LEVEL HAS 4 SECONDS TO LIVE!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;wait(4)&#13;&#10;&#13;&#10;&#9;&#9;local ex1 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex1.Position = Vector3.new(0,0,0)&#13;&#10;&#9;&#9;ex1.BlastRadius = 10000&#13;&#10;&#9;&#9;ex1.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex2 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex2.Position = Vector3.new(0,0,150)&#13;&#10;&#9;&#9;ex2.BlastRadius = 10000&#13;&#10;&#9;&#9;ex2.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex3 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex3.Position = Vector3.new(0,0,-150)&#13;&#10;&#9;&#9;ex3.BlastRadius = 10000&#13;&#10;&#9;&#9;ex3.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex4 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex4.Position = Vector3.new(150,0,0)&#13;&#10;&#9;&#9;ex4.BlastRadius = 10000&#13;&#10;&#9;&#9;ex4.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex5 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex5.Position = Vector3.new(-150,0,0)&#13;&#10;&#9;&#9;ex5.BlastRadius = 10000&#13;&#10;&#9;&#9;ex5.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex6 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex6.Position = Vector3.new(150,0,150)&#13;&#10;&#9;&#9;ex6.BlastRadius = 10000&#13;&#10;&#9;&#9;ex6.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex7 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex7.Position = Vector3.new(-150,0,-150)&#13;&#10;&#9;&#9;ex7.BlastRadius = 10000&#13;&#10;&#9;&#9;ex7.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex8 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex8.Position = Vector3.new(-150,0,150)&#13;&#10;&#9;&#9;ex8.BlastRadius = 10000&#13;&#10;&#9;&#9;ex8.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;local ex9 = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;&#9;ex9.Position = Vector3.new(150,0,-150)&#13;&#10;&#9;&#9;ex9.BlastRadius = 10000&#13;&#10;&#9;&#9;ex9.Parent = game.Workspace&#13;&#10;&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (msg == &quot;listen&quot;) then&#13;&#10;&#13;&#10;&#9;&#9;local m = Instance.new(&quot;Message&quot;)&#13;&#10;&#9;&#9;m.Text = &quot;EVERYONE STOP TALKING AND LISTEN TO &quot;.. string.upper(speaker.Name).. &quot;!!!!!!!!!!!&quot;&#13;&#10;&#9;&#9;m.Parent = game.Workspace&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)&#13;&#10;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;0:00:00&quot;&#13;&#10;&#9;&#9;game.Lighting.TopAmbientV9 = Color3.new(215,214,223)&#13;&#10;&#9;&#9;game.Lighting.SpotLightV9 = Color3.new(197,197,197)&#13;&#10;&#9;&#9;game.Lighting.ClearColor = Color3.new(0,0,0)&#13;&#10;&#9;&#9;game.Lighting.BottomAmbientV9 = Color3.new(122,140,120)&#13;&#10;&#9;&#9;game.Lighting.TimeOfDay = &quot;14:00:00&quot;&#13;&#10;&#9;&#9;m.Parent = nil&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function onPlayerEntered(newPlayer)&#13;&#10;&#9;newPlayer.Chatted:connect(function(msg, recipient) onChatted(msg, recipient, newPlayer) end) &#13;&#10;&#9;newPlayer.Changed:connect(function (property)&#13;&#10;&#9;&#9;if (property == &quot;Character&quot;) then&#13;&#10;&#9;&#9;&#9;onPlayerRespawned(newPlayer)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end)&#13;&#10;end&#13;&#10;&#13;&#10;game.Players.ChildAdded:connect(onPlayerEntered)&#13;&#10;&#13;&#10;--[[&#9;&#9;&#9;&#9;&#9;&#9;CREDITS&#13;&#10;Brandonhare -- For adding loads of commands to this&#13;&#10;SonOfSevenless -- For making the original commands script&#13;&#10;Anaminus -- For teaching me (by his scripts) how to make it only happen to a single person, and the immortality script.&#13;&#10;Clockwork -- For his Avada kadavra! tool which taught me how to change the colour with a script (and for bringing on the teapot age)&#13;&#10;Gamer3D -- For insperation&#13;&#10;Admins -- For adding the Test feature with the output window so I can debug this (and for making roblox XD)&#13;&#10;Miked -- I copied bits from his scripts into this.&#13;&#10;People who I forgot to add to the credits -- For things that I forgot XD&#13;&#10;Many other people -- For insparation, ideas, reporting bugs, letting me experement on them, etc.&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Please don&apos;t delete the credits....&#13;&#10;--------------------------------------------------&#13;&#10;----------------Brandonhare------------------&#13;&#10;--------------------------------------------------]]</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX16">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1</int>
				<CoordinateFrame name="CFrame">
					<X>-255.5</X>
					<Y>154</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>307.200012</Y>
					<Z>510</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX17">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1</int>
				<CoordinateFrame name="CFrame">
					<X>255.5</X>
					<Y>154</Y>
					<Z>1</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>307.200012</Y>
					<Z>508</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX18">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>154.199997</Y>
					<Z>254.5</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>307.200012</Y>
					<Z>510</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX19">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>308.399994</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>1.20000005</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="SpawnLocation" referent="RBX20">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">2</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">2</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-252</X>
					<Y>1</Y>
					<Z>251</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<int name="Duration">10</int>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">2</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">2</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">SpawnLocation</string>
				<bool name="Neutral">true</bool>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">2</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int name="TeamColor">194</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>6</X>
					<Y>1.20000005</Y>
					<Z>6</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX21">
				<Properties>
					<token name="Face">1</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>rbxasset://Textures\SpawnLocation.png</url></Content>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX22">
			<Properties>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ForceFieldGiver</string>
				<Ref name="PrimaryPart">RBX23</Ref>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="Part" referent="RBX24">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">2</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">23</int>
					<CoordinateFrame name="CFrame">
						<X>-238.5</X>
						<Y>2.60000014</Y>
						<Z>248.5</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>-0</R02>
						<R10>-0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<token name="Controller">0</token>
					<bool name="ControllerFlagShown">true</bool>
					<bool name="DraggingV1">false</bool>
					<float name="Elasticity">0.5</float>
					<token name="FormFactor">2</token>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<string name="Name">Weapon Button</string>
					<float name="Reflectance">0.300000012</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<bool name="archivable">true</bool>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>3</X>
						<Y>2.4000001</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Script" referent="RBX25">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PresentScript</string>
						<string name="Source">function getPlayer(humanoid) &#13;&#10;local players = game.Players:children() &#13;&#10;for i = 1, #players do &#13;&#10;if players[i].Character.Humanoid == humanoid then return players[i] end &#13;&#10;end &#13;&#10;return nil &#13;&#10;end &#13;&#10;&#13;&#10;function onTouch(part) &#13;&#10;&#13;&#10;local human = part.Parent:findFirstChild(&quot;Humanoid&quot;) &#13;&#10;if (human == nil) then return end &#13;&#10;&#13;&#10;local player = getPlayer(human) &#13;&#10;&#13;&#10;if (player == nil) then return end &#13;&#10;&#13;&#10;game.Lighting.Force Field:clone().Parent = player.Backpack&#13;&#10;&#13;&#10;end &#13;&#10;&#13;&#10;script.Parent.Touched:connect(onTouch) &#13;&#10;</string>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX23">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">11</int>
					<CoordinateFrame name="CFrame">
						<X>-238.5</X>
						<Y>2.20000005</Y>
						<Z>251.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<token name="Controller">0</token>
					<bool name="ControllerFlagShown">true</bool>
					<bool name="DraggingV1">false</bool>
					<float name="Elasticity">0.5</float>
					<token name="FormFactor">1</token>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">2</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<string name="Name">Smooth Block Model</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<bool name="archivable">true</bool>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>5</X>
						<Y>3.60000014</Y>
						<Z>5</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Model" referent="RBX26">
				<Properties>
					<token name="Controller">0</token>
					<bool name="ControllerFlagShown">true</bool>
					<CoordinateFrame name="ModelInPrimary">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Model</string>
					<Ref name="PrimaryPart">RBX27</Ref>
					<bool name="archivable">true</bool>
				</Properties>
				<Item class="Part" referent="RBX27">
					<Properties>
						<bool name="Anchored">false</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">11</int>
						<CoordinateFrame name="CFrame">
							<X>-238.5</X>
							<Y>9.40000057</Y>
							<Z>251.5</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<token name="Controller">0</token>
						<bool name="ControllerFlagShown">true</bool>
						<bool name="DraggingV1">false</bool>
						<float name="Elasticity">0.5</float>
						<token name="FormFactor">1</token>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<string name="Name">Smooth Block Model</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0.300000012</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<bool name="archivable">true</bool>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>3</X>
							<Y>1.20000005</Y>
							<Z>5</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX28">
					<Properties>
						<bool name="Anchored">false</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">11</int>
						<CoordinateFrame name="CFrame">
							<X>-240.5</X>
							<Y>6.40000057</Y>
							<Z>251</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<token name="Controller">0</token>
						<bool name="ControllerFlagShown">true</bool>
						<bool name="DraggingV1">false</bool>
						<float name="Elasticity">0.5</float>
						<token name="FormFactor">1</token>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<string name="Name">Smooth Block Model</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0.300000012</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<bool name="archivable">true</bool>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>4.80000019</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX29">
					<Properties>
						<bool name="Anchored">false</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">11</int>
						<CoordinateFrame name="CFrame">
							<X>-238.5</X>
							<Y>6.40000057</Y>
							<Z>252.5</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<token name="Controller">0</token>
						<bool name="ControllerFlagShown">true</bool>
						<bool name="DraggingV1">false</bool>
						<float name="Elasticity">0.5</float>
						<token name="FormFactor">1</token>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<string name="Name">Smooth Block Model</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0.300000012</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<bool name="archivable">true</bool>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>5</X>
							<Y>4.80000019</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX30">
					<Properties>
						<bool name="Anchored">false</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">11</int>
						<CoordinateFrame name="CFrame">
							<X>-236.5</X>
							<Y>6.40000057</Y>
							<Z>251</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<token name="Controller">0</token>
						<bool name="ControllerFlagShown">true</bool>
						<bool name="DraggingV1">false</bool>
						<float name="Elasticity">0.5</float>
						<token name="FormFactor">1</token>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<string name="Name">Smooth Block Model</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0.300000012</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<bool name="archivable">true</bool>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>2</X>
							<Y>4.80000019</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX31">
					<Properties>
						<bool name="Anchored">false</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">4</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">11</int>
						<CoordinateFrame name="CFrame">
							<X>-238.5</X>
							<Y>6.40000057</Y>
							<Z>250.5</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<token name="Controller">0</token>
						<bool name="ControllerFlagShown">true</bool>
						<bool name="DraggingV1">false</bool>
						<float name="Elasticity">0.5</float>
						<token name="FormFactor">1</token>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<string name="Name">Smooth Block Model</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">3</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0.300000012</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<bool name="archivable">true</bool>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>1</X>
							<Y>4.80000019</Y>
							<Z>3</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="ForceField" referent="RBX32">
					<Properties>
						<string name="Name">ForceField</string>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBX33">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1</int>
				<CoordinateFrame name="CFrame">
					<X>-205.5</X>
					<Y>30.5999908</Y>
					<Z>253.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>35</X>
					<Y>24</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX34">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>-206</X>
					<Y>429</Y>
					<Z>254</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>240.000015</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX35">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>-187.5</X>
					<Y>30.5999928</Y>
					<Z>253.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>25.2000008</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX36">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>-223.5</X>
					<Y>30.5999889</Y>
					<Z>253.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>25.2000008</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX37">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>-205.400009</X>
					<Y>43.0999908</Y>
					<Z>253.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>34.8000031</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX38">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>-205.599991</X>
					<Y>18.0999908</Y>
					<Z>253.5</Z>
					<R00>0</R00>
					<R01>1</R01>
					<R02>0</R02>
					<R10>-1</R10>
					<R11>0</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>34.8000031</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX39">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>155.399963</Y>
					<Z>-255.5</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<string name="Name">Smooth Block Model</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>303.600006</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
	</Item>
	<Item class="RunService" referent="RBX40">
		<Properties>
			<string name="Name">Run Service</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<External>RBX41</External>
	<External>RBX42</External>
	<Item class="Players" referent="RBX43">
		<Properties>
			<int name="MaxPlayers">8</int>
			<string name="Name">Players</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="StarterPack" referent="RBX44">
		<Properties>
			<string name="Name">StarterPack</string>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Tool" referent="RBX45">
			<Properties>
				<int name="ActivationState">0</int>
				<int name="BackendToolState">1</int>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>0</Y>
					<Z>-3.25</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>1</R10>
					<R11>0</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<string name="Name">GravityHammer</string>
				<Content name="TextureId"><url>http://www.roblox.com/asset/?id=1256305</url></Content>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="Part" referent="RBX46">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">199</int>
					<CoordinateFrame name="CFrame">
						<X>-0.5</X>
						<Y>5.39303017</Y>
						<Z>-0.400001526</Z>
						<R00>-0.99999994</R00>
						<R01>4.4530052e-016</R01>
						<R02>-1.7796789e-015</R02>
						<R10>1.7796789e-015</R10>
						<R11>5.96046448e-008</R11>
						<R12>-0.99999994</R12>
						<R20>-4.4530052e-016</R20>
						<R21>-0.99999994</R21>
						<R22>3.42285418e-008</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<token name="Controller">0</token>
					<bool name="ControllerFlagShown">true</bool>
					<bool name="DraggingV1">false</bool>
					<float name="Elasticity">0.5</float>
					<token name="FormFactor">2</token>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<string name="Name">Handle</string>
					<float name="Reflectance">0.400000006</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<bool name="archivable">true</bool>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>0.800000012</Y>
						<Z>10</Z>
					</Vector3>
				</Properties>
				<Item class="Sound" referent="RBX47">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Sound</string>
						<int name="PlayCount">12</int>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=1255794</url></Content>
						<float name="Volume">1</float>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="SpecialMesh" referent="RBX48">
					<Properties>
						<Content name="MeshId"><url>rbxasset://fonts/sword.mesh</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Scale">
							<X>2</X>
							<Y>2</Y>
							<Z>2</Z>
						</Vector3>
						<Content name="TextureId"><url>rbxasset://textures/SwordTexture.png</url></Content>
						<Vector3 name="VertexColor">
							<X>0</X>
							<Y>2</Y>
							<Z>2</Z>
						</Vector3>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX49">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><url>http://www.roblox.com/asset/?id=1014476</url></Content>
					<string name="Name">Local Gui</string>
					<string name="Source"></string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX50">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">SwordScript</string>
					<string name="Source">-------- OMG HAX&#13;&#10;&#13;&#10;r = game:service(&quot;RunService&quot;)&#13;&#10;&#13;&#10;&#13;&#10;local damage = 5&#13;&#10;&#13;&#10;&#13;&#10;local slash_damage = 10&#13;&#10;local lunge_damage = 30&#13;&#10;&#13;&#10;sword = script.Parent.Handle&#13;&#10;Tool = script.Parent&#13;&#10;&#13;&#10;SlashSound = sword.Sound&#13;&#10;&#13;&#10;function blow(hit)&#13;&#10;&#9;Grip = Tool.Parent[&quot;Right Arm&quot;].RightGrip:clone()&#13;&#10;&#9;humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)&#13;&#10;&#9;if(humanoid ~= nil and humanoid.Parent.Name == Tool.Parent.Name) then --don&apos;t hit yourself&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;--if(Tool:findFirstChild(&quot;toolAnim&quot;) == nil) then return end&#13;&#10;&#9;if(humanoid ~= nil) then --if it&apos;s a person, damage him and stop&#13;&#10;&#9;&#9;explode(hit) --explode only if it doesn&apos;t hit a person (ie, blowing holes through walls)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;explode(hit) &#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;end&#13;&#10;&#13;&#10;function propel(part)&#13;&#10;&#9;if(part.Anchored) then return end --if it isn&apos;t anchored, make it flyyy&#13;&#10;&#9;direction = (part.Position - Tool.Parent.Torso.Position).unit&#13;&#10;&#9;direction = direction + Vector3.new(0,1,0)&#13;&#10;&#9;direction = direction * 200&#13;&#10;&#9;part.Velocity = part.Velocity + direction&#13;&#10;end&#13;&#10;&#13;&#10;debounce = true&#13;&#10;function explode(part)&#13;&#10;&#9;if not debounce then return end&#13;&#10;&#9;&#13;&#10;&#9;debounce = false&#13;&#10;&#9;direction = (part.Position - Tool.Parent.Torso.Position).unit&#13;&#10;&#9;pos = direction * 12 + Tool.Parent.Torso.Position&#13;&#10;&#9;explosion = Instance.new(&quot;Explosion&quot;)&#13;&#10;&#9;explosion.BlastRadius = 6&#13;&#10;&#9;explosion.BlastPressure = 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999&#13;&#10;&#9;explosion.Position = pos&#13;&#10;&#9;explosion.Parent = game.Workspace&#13;&#10;&#9;explosion.Hit:connect(function(part, distance) propel(part) end)&#13;&#10;&#9;wait(.1)&#13;&#10;&#9;Grip:clone().Parent = Tool.Parent[&quot;Right Arm&quot;]&#13;&#10;&#9;debounce = true&#13;&#10;end&#13;&#10;&#13;&#10;function onPlayerBlownUp(part, distance, creator)&#13;&#10;&#9;&#13;&#10;&#9;if part.Name == &quot;Head&quot; then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local humanoid = part.Parent.Humanoid&#13;&#10;&#9;&#9;tagHumanoid(humanoid, creator)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function tagHumanoid(humanoid, creator)&#13;&#10;&#9;-- tag does not need to expire iff all explosions lethal&#13;&#10;&#9;&#13;&#10;&#9;if creator ~= nil then&#13;&#10;&#9;&#9;local new_tag = creator:clone()&#13;&#10;&#9;&#9;new_tag.Parent = humanoid&#13;&#10;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function untagHumanoid(humanoid)&#13;&#10;&#9;if humanoid ~= nil then&#13;&#10;&#9;&#9;local tag = humanoid:findFirstChild(&quot;creator&quot;)&#13;&#10;&#9;&#9;if tag ~= nil then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;tag.Parent = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;function attack()&#13;&#10;&#9;SlashSound:play()&#13;&#10;&#9;local anim = Instance.new(&quot;StringValue&quot;)&#13;&#10;&#9;anim.Name = &quot;toolanim&quot;&#13;&#10;&#9;anim.Value = &quot;Slash&quot;&#13;&#10;&#9;anim.Parent = Tool&#13;&#10;end&#13;&#10;&#13;&#10;function lunge()&#13;&#10;&#9;attack()&#13;&#10;&#9;force = Instance.new(&quot;BodyPosition&quot;)&#13;&#10;&#9;force.maxForce = Vector3.new(1e+005,1e+004,1e+005)&#13;&#10;&#9;dir = Tool.Parent.Humanoid.targetPoint&#13;&#10;&#9;if((dir - sword.Position).magnitude &gt; 15) then return end&#13;&#10;&#9;force.position = dir&#13;&#10;&#9;force.Parent = sword&#13;&#10;&#9;wait(.25)&#13;&#10;&#9;force.Parent = nil&#13;&#10;end&#13;&#10;&#13;&#10;function swordUp()&#13;&#10;&#9;Tool.GripForward = Vector3.new(-1,0,0)&#13;&#10;&#9;Tool.GripRight = Vector3.new(0,1,0)&#13;&#10;&#9;Tool.GripUp = Vector3.new(0,0,1)&#13;&#10;end&#13;&#10;&#13;&#10;function swordOut()&#13;&#10;&#9;Tool.GripForward = Vector3.new(0,0,1)&#13;&#10;&#9;Tool.GripRight = Vector3.new(0,-1,0)&#13;&#10;&#9;Tool.GripUp = Vector3.new(-1,0,0)&#13;&#10;end&#13;&#10;&#13;&#10;function swordAcross()&#13;&#10;&#9;-- parry&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;Tool.Enabled = true&#13;&#10;local last_attack = 0&#13;&#10;function onActivated()&#13;&#10;&#13;&#10;&#9;if not Tool.Enabled then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;Tool.Enabled = false&#13;&#10;&#13;&#10;&#9;local character = Tool.Parent;&#13;&#10;&#9;local humanoid = character.Humanoid&#13;&#10;&#9;if humanoid == nil then&#13;&#10;&#9;&#9;print(&quot;Humanoid not found&quot;)&#13;&#10;&#9;&#9;return &#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;t = r.Stepped:wait()&#13;&#10;&#9;connection = sword.Touched:connect(blow)&#13;&#10;&#9;lunge()&#13;&#10;&#13;&#10;&#9;wait(.4)&#13;&#10;connection:disconnect()&#13;&#10;&#9;last_attack = t&#13;&#10;&#9;Tool.Enabled = true&#13;&#10;&#9;&#13;&#10;&#13;&#10;end&#13;&#10;script.Parent.Activated:connect(onActivated)&#13;&#10;&#13;&#10;&#13;&#10;</string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="HopperBin" referent="RBX51">
			<Properties>
				<token name="BinType">0</token>
				<string name="Name">TeleGun</string>
				<Content name="TextureId"><null></null></Content>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="Part" referent="RBX52">
				<Properties>
					<bool name="Anchored">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">27</int>
					<CoordinateFrame name="CFrame">
						<X>70</X>
						<Y>1.70000005</Y>
						<Z>0</Z>
						<R00>-1</R00>
						<R01>-0</R01>
						<R02>-0</R02>
						<R10>-0</R10>
						<R11>-0</R11>
						<R12>-1</R12>
						<R20>-0</R20>
						<R21>-1</R21>
						<R22>-0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<token name="Controller">0</token>
					<bool name="ControllerFlagShown">true</bool>
					<bool name="DraggingV1">false</bool>
					<float name="Elasticity">0.5</float>
					<token name="FormFactor">0</token>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">2</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<string name="Name">Teleporter</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<bool name="archivable">true</bool>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>4</X>
						<Y>4</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Script" referent="RBX53">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Script</string>
						<string name="Source">&#13;&#10;function onTouched(part)&#13;&#10;&#9;if part.Parent ~= nil then&#13;&#10;&#9;local h = part.Parent:findFirstChild(&quot;Humanoid&quot;)&#13;&#10;&#9;&#9;if h~=nil then&#13;&#10;&#9;&#9;&#9;local teleportfrom=script.Parent.Enabled.Value&#13;&#10;&#9;&#9;&#9;if teleportfrom~=0 then&#13;&#10;&#9;&#9;&#9;&#9;if h==humanoid then&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;local teleportto=script.Parent.TeleTo.Value&#13;&#10;&#9;&#9;&#9;&#9;if teleportto~=nil then&#13;&#10;&#9;&#9;&#9;&#9;&#9;local torso = h.Parent.Torso&#13;&#10;&#9;&#9;&#9;&#9;&#9;local location = {teleportto.Position}&#13;&#10;&#9;&#9;&#9;&#9;&#9;local i = 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x = location[i].x&#13;&#10;&#9;&#9;&#9;&#9;&#9;local y = location[i].y&#13;&#10;&#9;&#9;&#9;&#9;&#9;local z = location[i].z&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;x = x + math.random(-1, 1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;z = z + math.random(-1, 1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;y = y + math.random(2, 3)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;local cf = torso.CFrame&#13;&#10;&#9;&#9;&#9;&#9;&#9;local lx = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;local ly = y&#13;&#10;&#9;&#9;&#9;&#9;&#9;local lz = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;script.Parent.Enabled.Value=0&#13;&#10;&#9;&#9;&#9;&#9;&#9;teleportto.Enabled.Value=0&#13;&#10;&#9;&#9;&#9;&#9;&#9;torso.CFrame = CFrame.new(Vector3.new(x,y,z), Vector3.new(lx,ly,lz))&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;script.Parent.Enabled.Value=1&#13;&#10;&#9;&#9;&#9;&#9;&#9;teleportto.Enabled.Value=1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;script.Parent.Touched:connect(onTouched)&#13;&#10;</string>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX54">
					<Properties>
						<string name="Name">Enabled</string>
						<int name="Value">1</int>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
				<Item class="ObjectValue" referent="RBX55">
					<Properties>
						<string name="Name">TeleTo</string>
						<Ref name="Value">null</Ref>
						<bool name="archivable">true</bool>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX56">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Teleport</string>
					<string name="Source">&#13;&#10;bin = script.Parent&#13;&#10;&#13;&#10;local teleporter = script.Parent[&quot;Teleporter&quot;]&#13;&#10;&#13;&#10;function GetTargetY(target)&#13;&#10;&#9;local pos = math.abs(target.Position.y)&#13;&#10;&#9;local size = target.Size.y&#13;&#10;&#9;return (pos+(size/2))&#13;&#10;end&#13;&#10;function GetTargetX(target)&#13;&#10;&#9;local pos = math.abs(target.Position.x)&#13;&#10;&#9;local size = target.Size.x&#13;&#10;&#9;return (pos+(size/2))&#13;&#10;end&#13;&#10;function GetTargetZ(target)&#13;&#10;&#9;local pos = math.abs(target.Position.z)&#13;&#10;&#9;local size = target.Size.z&#13;&#10;&#9;return (pos+(size/2))&#13;&#10;end&#13;&#10;&#13;&#10;function SetTele(mouse)&#13;&#10;&#13;&#10;&#9;-- find the best cf&#13;&#10;&#9;local cf = mouse.Hit&#13;&#10;&#9;local v = cf.lookVector&#13;&#10;&#13;&#10;&#9;local pos = cf.p&#13;&#10;&#9;local t = mouse.Target&#13;&#10;&#9;local tele = teleporter:Clone()&#13;&#10;&#9;tele.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z))&#13;&#10;&#9;-- Confusing, semi-pointless, slightly dysfunctional bit...&#13;&#10;&#9;if math.abs(tele.Position.y) &gt;= GetTargetY(t) then&#13;&#10;&#9;&#9;tele.CFrame = CFrame.new(tele.Position,Vector3.new(tele.Position.x,tele.Position.y+1,tele.Position.z))&#13;&#10;&#9;elseif math.abs(tele.Position.y) &lt; GetTargetY(t) then&#13;&#10;&#9;&#9;if math.abs(tele.Position.x) &gt;= GetTargetX(t) then&#13;&#10;&#9;&#9;&#9;tele.CFrame = CFrame.new(tele.Position,Vector3.new(tele.Position.x+1,tele.Position.y,tele.Position.z))&#13;&#10;&#9;&#9;elseif math.abs(tele.Position.z) &gt;= GetTargetZ(t) then&#13;&#10;&#9;&#9;&#9;tele.CFrame = CFrame.new(tele.Position,Vector3.new(tele.Position.x,tele.Position.y,tele.Position.z+1))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;tele.BrickColor = BrickColor.new(199)&#13;&#10;&#9;tele.Parent = game.Workspace&#13;&#10;end&#13;&#10;&#13;&#10;local P = nil&#13;&#10;e = true&#13;&#10;mode = 0&#13;&#10;enabled = true&#13;&#10;function onButton1Down(mouse)&#13;&#10;&#9;if not e then return end&#13;&#10;&#9;if mouse.Target == nil then return end&#13;&#10;&#9;e = false&#13;&#10;&#9;if mode == 0 then&#13;&#10;&#9;&#9;if not enabled then e = true return end&#13;&#10;&#9;&#9;local player = game.Players.LocalPlayer&#13;&#10;&#9;&#9;if player ~= nil then&#13;&#10;&#9;&#9;&#9;enabled = false&#13;&#10;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;&#13;&#10;&#9;&#9;&#9;P = mouse.Target&#13;&#10;&#9;&#9;&#9;if P ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;if P.Name == teleporter.Name then&#13;&#10;&#9;&#9;&#9;&#9;&#9;P.BrickColor = BrickColor.new(24)&#13;&#10;&#9;&#9;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\ArrowCursor.png&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;mode = 1&#13;&#10;&#9;&#9;&#9;&#9;&#9;e = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;SetTele(mouse)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;&#13;&#10;&#9;&#9;&#9;&#9;enabled = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;elseif mode == 1 then&#13;&#10;&#9;&#9;local tele = mouse.Target&#13;&#10;&#9;&#9;if tele ~= nil then&#13;&#10;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\ArrowFarCursor.png&quot;&#13;&#10;&#9;&#9;&#9;if tele.Name == teleporter.Name then&#13;&#10;&#9;&#9;&#9;&#9;if tele ~= P then&#13;&#10;&#9;&#9;&#9;&#9;&#9;P.TeleTo.Value = tele&#13;&#10;&#9;&#9;&#9;&#9;&#9;P.BrickColor = BrickColor.new(28)&#13;&#10;&#9;&#9;&#9;&#9;&#9;local color = tele.BrickColor&#13;&#10;&#9;&#9;&#9;&#9;&#9;tele.BrickColor = BrickColor.new(23)&#13;&#10;&#9;&#9;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;mode = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;P = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;enabled = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;&#9;&#9;&#9;tele.BrickColor = color&#13;&#10;&#9;&#9;&#9;&#9;&#9;e = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;elseif tele == P then&#13;&#10;&#9;&#9;&#9;&#9;&#9;P.TeleTo.Value = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;P.BrickColor = BrickColor.new(21)&#13;&#10;&#9;&#9;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;&#9;&#9;&#9;P.BrickColor = BrickColor.new(199)&#13;&#10;&#9;&#9;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;mode = 0&#13;&#10;&#9;&#9;&#9;&#9;&#9;P = nil&#13;&#10;&#9;&#9;&#9;&#9;&#9;enabled = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;e = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;wait(0.5)&#13;&#10;&#9;&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\ArrowCursor.png&quot;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;e = true&#13;&#10;end&#13;&#10;&#13;&#10;function onSelected(mouse)&#13;&#10;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;&#13;&#10;&#9;mouse.Button1Down:connect(function() onButton1Down(mouse) end)&#13;&#10;end&#13;&#10;&#13;&#10;bin.Selected:connect(onSelected)&#13;&#10;&#13;&#10;</string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX57">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">README</string>
					<string name="Source">--[[&#13;&#10;&#13;&#10;&#9;Instructions:&#13;&#10;&#9;&#9;- Click to place a teleporter.&#13;&#10;&#9;&#9;- Click on a teleporter to assign it&apos;s destination.&#13;&#10;&#9;&#9;&#9;- Click on the teleporter again to cancel assigning / unassign the teleporter. &#13;&#10;&#9;&#9;&#9;-- OR --&#13;&#10;&#9;&#9;&#9;- Click on another teleporter to assign the teleporter to it.&#13;&#10;&#9;&#9;- Done.&#13;&#10;&#13;&#10;&#13;&#10;&#9;Color Codes:&#13;&#10;&#9;&#9;Gray:&#9;&#9;Unassigned teleporter&#9;&#9;&#9;(status)&#13;&#10;&#9;&#9;Yellow:&#9;&#9;Assigning teleporter&#9;&#9;&#9;(status)&#13;&#10;&#9;&#9;Green:&#9;&#9;Assigned teleporter&#9;&#9;&#9;&#9;(status)&#13;&#10;&#9;&#9;Red:&#9;&#9;&#9;Assigning canceled / Unassigned&#9;(action)&#13;&#10;&#9;&#9;Blue:&#9;&#9;Teleporter assigned to&#9;&#9;&#9;(action)&#13;&#10;&#13;&#10;]]&#13;&#10;</string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX58">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<float name="RolloffScale">1</float>
			<bool name="archivable">true</bool>
		</Properties>
		<External>RBX59</External>
		<External>RBX60</External>
		<External>RBX61</External>
		<External>RBX62</External>
		<External>RBX63</External>
		<External>RBX64</External>
		<External>RBX65</External>
		<External>RBX66</External>
		<External>RBX67</External>
		<External>RBX68</External>
		<External>RBX69</External>
		<External>RBX70</External>
		<External>RBX71</External>
		<External>RBX72</External>
	</Item>
	<Item class="Selection" referent="RBX73">
		<Properties>
			<string name="Name">Selection</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX74">
		<Properties>
			<Color3 name="BottomAmbientV9">4286222712</Color3>
			<Color3 name="ClearColor">4278190080</Color3>
			<float name="GeographicLatitude">41.7332993</float>
			<string name="Name">Lighting</string>
			<Color3 name="SpotLightV9">4288910438</Color3>
			<string name="TimeOfDay">14:00:00</string>
			<Color3 name="TopAmbientV9">4292664292</Color3>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="HopperBin" referent="RBX75">
			<Properties>
				<token name="BinType">0</token>
				<string name="Name">Force Field</string>
				<Content name="TextureId"><null></null></Content>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="Script" referent="RBX76">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ForceScript</string>
					<string name="Source">--- DaxMan :)&#13;&#10;print(&quot;FoiceField Loaded&quot;)&#13;&#10;&#13;&#10;local COOLDOWN = 20&#13;&#10;&#13;&#10;local POWER = 20&#13;&#10;&#13;&#10;bin = script.Parent&#13;&#10;&#13;&#10;enabled = true&#13;&#10;&#13;&#10;function onButton1Down(mouse)&#13;&#10;&#9;if not enabled then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;bin.ForceField:clone().Parent = bin.Parent.Parent.Character&#13;&#10;&#9;wait(0.1)&#13;&#10;&#9;local FF = bin.Parent.Parent.Character:findFirstChild(&quot;ForceField&quot;)&#13;&#10;&#13;&#10;&#9;wait(POWER)&#13;&#10;&#9;wait(COOLDOWN)&#13;&#10;&#9;mouse.Icon = &quot;rbxasset://textures\\ArrowCursor.png&quot;&#13;&#10;&#9;FF.Parent = nil&#13;&#10;&#9;enabled = true&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;function onSelected(mouse)&#13;&#10;&#9;mouse.Icon = &quot;rbxasset://textures\\ArrowCursor.png&quot;&#13;&#10;&#9;mouse.Button1Down:connect(function() onButton1Down(mouse) end)&#13;&#10;end&#13;&#10;&#13;&#10;bin.Selected:connect(onSelected)&#13;&#10;&#13;&#10;</string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="ForceField" referent="RBX77">
				<Properties>
					<string name="Name">ForceField</string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="ControllerService" referent="RBX78">
		<Properties>
			<string name="Name">Instance</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="Timer" referent="RBX79">
		<Properties>
			<string name="Name">Instance</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX80">
		<Properties>
			<string name="Name">Geometry</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<External>RBX81</External>
	<External>RBX82</External>
	<External>RBX83</External>
	<External>RBX84</External>
</roblox>